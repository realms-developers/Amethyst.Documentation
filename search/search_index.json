{"config":{"lang":["en","ru"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Home","text":"<p>Welcome to the Amethyst documentation homepage!</p> <p>Amethyst is a powerful and optimized core for Terraria servers.</p>"},{"location":"Commands/","title":"Commands","text":""},{"location":"Commands/#class-reference","title":"Class Reference","text":""},{"location":"Commands/#core-classes","title":"Core Classes","text":"Class/Interface Description <code>CommandData</code> Metadata container for registered commands <code>CommandInvokeContext</code> Execution context with arguments and sender <code>ICommandSender</code> Interface for command invokers <code>TextPage</code> Paginated content container"},{"location":"Commands/#attributes","title":"Attributes","text":"Attribute Purpose <code>ServerCommandAttribute</code> Defines command registration metadata <code>CommandsSyntaxAttribute</code> Specifies command syntax patterns <code>CommandsSettingsAttribute</code> Configures command behavior flags"},{"location":"Commands/#method-structure","title":"Method Structure","text":"<p>Commands are implemented as static methods decorated with attributes:</p> <pre><code>[ServerCommand(\n    CommandType.Shared, \n    \"example\", \n    \"Example command description\", \n    \"example.permission\"\n)]\n[CommandsSyntax(\"&lt;required_param&gt;\", \"[optional_param]\")]\npublic static void ExampleCommand(\n    CommandInvokeContext ctx, \n    string required_param, \n    int optional_param = 0\n)\n{\n    // Command logic\n    ctx.Sender.ReplySuccess($\"Executed with {required_param} and {optional_param}\");\n}\n</code></pre>"},{"location":"Commands/#core-components","title":"Core Components:","text":"<ol> <li> <p><code>ServerCommandAttribute</code> </p> <ul> <li><code>CommandType</code>: Command accessibility level</li> <li><code>Name</code>: Command invocation name</li> <li><code>Description</code>: Help text description</li> <li><code>Permission</code>: Required permission node (null for no permission)</li> </ul> </li> <li> <p><code>CommandInvokeContext</code>     Contains execution context:</p> <ul> <li><code>Sender</code>: Invoker's context (implements <code>ICommandSender</code>)</li> <li><code>ArgumentsText</code>: Raw unparsed arguments string</li> <li><code>Arguments</code>: Tokenized argument list</li> </ul> </li> <li> <p><code>ICommandSender</code>     Interface for command originators with:</p> <ul> <li>Permission checks (<code>HasPermission()</code>)</li> <li>Response methods (<code>ReplySuccess()</code>, <code>ReplyError()</code>, etc.)</li> <li>Localization support via <code>Language</code> property</li> </ul> </li> </ol>"},{"location":"Commands/#permission-system","title":"Permission System","text":"<p>Prefer to:</p> <ul> <li>Use dot-separated hierarchy: <code>module.feature.action</code></li> <li>Validate permissions early in command execution</li> </ul>"},{"location":"Commands/#static-permissions","title":"Static Permissions","text":"<pre><code>[ServerCommand(CommandType.Shared, \"ban\", \"Ban player\", \"moderation.ban\")]\n</code></pre>"},{"location":"Commands/#dynamic-checks","title":"Dynamic Checks","text":"<pre><code>if (!ctx.Sender.HasPermission(\"special.access\"))\n{\n    ctx.Sender.ReplyError(\"Access denied!\");\n    return;\n}\n</code></pre>"},{"location":"Commands/#response-handling","title":"Response Handling","text":""},{"location":"Commands/#response-types","title":"Response Types","text":"<pre><code>ctx.Sender.ReplySuccess(\"Operation completed\");  // Green text\nctx.Sender.ReplyInfo(\"Status: Online\");          // Yellow text\nctx.Sender.ReplyWarning(\"Low resources\");        // Orange text\nctx.Sender.ReplyError(\"Invalid input\");          // Red text\n</code></pre>"},{"location":"Commands/#formatted-messages","title":"Formatted Messages","text":"<pre><code>ctx.Sender.ReplySuccess(\"Player {0} scored {1} points\", playerName, score);\n</code></pre>"},{"location":"Commands/#pagination-system","title":"Pagination System","text":""},{"location":"Commands/#creating-paginated-content","title":"Creating Paginated Content","text":"<pre><code>var items = Enumerable.Range(1, 100).Select(i =&gt; $\"Item {i}\");\nvar pages = PagesCollection.CreateFromList(\n    items, \n    maxLineLength: 80,  // Characters per line\n    linesPerPage: 10    // Lines per page\n);\n</code></pre>"},{"location":"Commands/#sending-pages","title":"Sending Pages","text":"<pre><code>ctx.Sender.ReplyPage(\n    pages,\n    header: \"Item List - Page {0} of {1}\",\n    footer: \"Use /example &lt;page&gt; to navigate\",\n    footerArgs: null,\n    showPageName: true,\n    page: 2\n);\n</code></pre>"},{"location":"Commands/#localization-support","title":"Localization Support","text":"<ul> <li>Uses <code>ICommandSender.Language</code> property</li> <li>Integrates with translation files/system</li> </ul>"},{"location":"Commands/#localized-commands","title":"Localized Commands","text":"<pre><code>[ServerCommand(CommandType.Shared, \"help\", \"commands.help.desc\", null)]\n</code></pre>"},{"location":"Commands/#localized-responses","title":"Localized Responses","text":"<pre><code>ctx.Sender.ReplySuccess(\"commands.help.success\");\n</code></pre>"},{"location":"Commands/settings/","title":"Settings","text":"<p>Defined in <code>CommandSettings</code> enum: <pre><code>[Flags]\npublic enum CommandSettings\n{\n    /// &lt;summary&gt;\n    /// Executed only in-game.\n    /// &lt;/summary&gt;\n    IngameOnly = 1,\n\n    /// &lt;summary&gt;\n    /// Suppress execution logging.\n    /// &lt;/summary&gt;\n    HideLog = 2,\n\n    /// &lt;summary&gt;\n    /// Exclude from help listings.\n    /// &lt;/summary&gt;\n    Hidden = 4\n}\n</code></pre></p> <p>Control command visibility and logging:</p> <pre><code>[CommandsSettings(CommandSettings.Hidden | CommandSettings.NoLog)]\npublic static void SecretCommand(CommandInvokeContext ctx)\n{\n    // Hidden from help systems and execution not logged\n}\n</code></pre>"},{"location":"Commands/syntax/","title":"Syntax","text":""},{"location":"Commands/syntax/#multiple-syntax-patterns","title":"Multiple Syntax Patterns","text":"<p>Support alternative command usages with <code>[CommandsSyntax]</code>: <pre><code>[CommandsSyntax(\"[score]\", \"[-s(ilent)]\")]\npublic static void ScoreCommand(\n    CommandInvokeContext ctx, \n    int score = 0, \n    string args = \"\"\n)\n{\n    // Handle -s flag in args\n    if (args.Contains(\"-s\")) { /* Silent mode */ }\n}\n</code></pre></p>"},{"location":"Commands/syntax/#syntax-notation","title":"Syntax Notation","text":"Pattern Description <code>&lt;required&gt;</code> Mandatory parameter <code>[optional]</code> Optional parameter <code>-f(lag)</code> Switch flag (short/long form)"},{"location":"Commands/syntax/#advanced-features","title":"Advanced Features","text":""},{"location":"Commands/syntax/#custom-argument-parsers","title":"Custom Argument Parsers","text":"<pre><code>public static void AdvancedCommand(\n    CommandInvokeContext ctx,\n    [ArgumentParser(typeof(CommandParsers), nameof(ParseCustom))]\n    CustomType param\n)\n{\n    // Use custom parsed value\n}\n\npublic static ParseResult ParseCustom(ICommandSender sender, string input)\n{\n    // Custom parsing logic\n    return ParseResult.Success(new CustomType(input));\n}\n</code></pre>"},{"location":"Commands/syntax/#time-duration-handling","title":"Time Duration Handling","text":"<pre><code>public static void TempBan(CommandInvokeContext ctx, string duration)\n{\n    int seconds = TextUtility.ParseToSeconds(\"1h30m\"); // = 5400\n    // Ban implementation\n}\n</code></pre>"},{"location":"Commands/syntax/#supported-time-formats","title":"Supported Time Formats:","text":"<ul> <li><code>1d2h30m</code> \u2192 1 day + 2 hours + 30 minutes</li> <li><code>3600s</code> \u2192 3600 seconds</li> <li><code>2h</code> \u2192 7200 seconds</li> </ul>"},{"location":"Commands/types/","title":"Types","text":""},{"location":"Commands/types/#command-types","title":"Command Types","text":"<p>Defined in <code>CommandType</code> enum: <pre><code>public enum CommandType\n{\n    /// &lt;summary&gt;\n    /// Can used be by everyone who have permission.\n    /// &lt;/summary&gt;\n    Shared,\n\n    /// &lt;summary&gt;\n    /// Can be used by console or RCON.\n    /// &lt;/summary&gt;\n    Console,\n\n    /// &lt;summary&gt;\n    /// Can be used in developer server mode.\n    /// &lt;/summary&gt;\n    Debug\n}\n</code></pre></p>"},{"location":"Commands/types/#usage","title":"Usage","text":"Type Typical Use Case <code>Shared</code> Player-facing commands <code>Console</code> Administrative/background tasks <code>Debug</code> Development/testing utilities <p>Example Debug Command: <pre><code>[ServerCommand(CommandType.Debug, \"devtool\", \"Developer tool\", null)]\npublic static void DevToolCommand(CommandInvokeContext ctx) { }\n</code></pre></p>"},{"location":"Network/","title":"Network Interaction","text":"<p>In Terraria, packets are divided into two types: raw packets and net-module packets.</p> <p>Amethyst provides capabilities to modify packet behavior: incoming/outgoing raw packets and incoming net-modules.</p>"},{"location":"Network/#incoming-raw-packets","title":"Incoming Raw Packets","text":"<p>Use <code>NetworkManager.Binding.AddInPacket(...)</code> for handling. Example:</p> <pre><code>NetworkManager.Binding.AddInPacket(PacketTypes.ItemOwner, OnItemOwner);\n\n// or\n\nNetworkManager.Binding.AddInPacket(22, OnItemOwner);\n\nvoid OnItemOwner(in IncomingPacket packet, PacketHandleResult result)\n{   \n    int start = packet.Start; // packet start position\n    int length = packet.Length; // packet length\n    byte senderIndex = packet.Sender; // sender's index\n    NetPlayer player = packet.Player; // NetPlayer instance of the sender (same as packet.Sender)\n\n    BinaryReader reader = packet.GetReader();\n\n    // Structure of 'ItemOwner' packet:\n    short itemIndex = reader.ReadInt16(); // item index\n    byte targetPlayerIndex = reader.ReadByte(); // new item owner\n\n    // ... some very important code\n\n    // Ignore the packet\n    // Example reasons: cheating detected, invalid values\n    result.Ignore(\"&lt;ignore reason&gt;\");\n}\n</code></pre>"},{"location":"Network/#incoming-net-module-packets","title":"Incoming Net-Module Packets","text":"<p>Use <code>NetworkManager.Binding.AddInModule(...)</code> for handling. Example:</p> <pre><code>NetworkManager.Binding.AddInModule(ModuleTypes.MapPing, OnMapPing);\n\n// or\n\nNetworkManager.Binding.AddInModule(2, OnMapPing);\n\nvoid OnMapPing(in IncomingModule packet, PacketHandleResult result)\n{\n    BinaryReader reader = packet.GetReader();\n\n    // Structure of 'MapPing' module:\n    // Alternative: Vector2 position = reader.ReadVector2();\n    float x = reader.ReadSingle();\n    float y = reader.ReadSingle();\n\n    // ... some very important code\n\n    // Ignore the packet\n    // Example reasons: cheating detected, invalid values\n    result.Ignore(\"&lt;ignore reason&gt;\");\n}\n</code></pre>"},{"location":"Network/#outgoing-raw-packets","title":"Outgoing Raw Packets","text":"<p>Use <code>NetworkManager.Binding.AddOutPacket(...)</code> for handling. Example:</p> <p>We recommend decompiling the <code>Terraria.NetMessage</code> class from <code>deps/TerrariaAPI.dll</code> for full context.</p> <pre><code>NetworkManager.Binding.AddOutPacket(PacketTypes.ItemOwner, OnItemOwner);\n\n// or\n\nNetworkManager.Binding.AddOutPacket(22, OnItemOwner);\n\nvoid OnItemOwner(in OutcomingModule packet, PacketHandleResult result)\n{\n    // BinaryReader not supported here as the packet isn't read\n\n    int remoteClient = packet.RemoteClient;\n    int ignoreClient = packet.IgnoreClient;\n    NetworkText? text = packet.Text;\n    int num1 = packet.Number1;\n    float num2 = packet.Number2;\n    float num3 = packet.Number3;\n    float num4 = packet.Number4;\n    int num5 = packet.Number5;\n    int num6 = packet.Number6;\n    int num7 = packet.Number7;\n\n    // Ignore the packet\n    // Example reason: unnecessary data transmission\n    result.Ignore(\"&lt;ignore reason&gt;\");\n}\n</code></pre>"},{"location":"Network/packets/","title":"Creating and Sending Packets","text":"<p><code>PacketWriter</code> - a utility class designed for convenient packet creation.</p> <p>Example:</p> <pre><code>// Create a packet\nbyte[] packet = new PacketWriter()\n    .SetType(5) // PacketTypes.PlayerSlot (inventory update packet)\n\n    .PackByte(1)        // player index\n    .PackInt16(10)      // slot 11 (slot numbering starts at 0 in code)\n    .PackInt16(9999)    // item stack size\n    .PackByte(5)        // prefix ID\n    .PackInt16(757)     // item ID\n\n    .BuildPacket(); // converts packet to byte buffer\n\nNetPlayer player;\n\n// Send packet locally to a specific player\nplayer.Socket.SendPacket(packet);\n\n// Broadcast packet to all players except `player`\nPlayerUtilities.BroadcastPacket(packet, predicate =&gt; predicate.Index != player.Index);\n</code></pre>"},{"location":"Permissions/","title":"Permission Interfaces","text":"<p>Amethyst allows plugins/modules to manage player permissions via <code>IPermissionWorker&lt;T&gt;</code> and <code>PermissionsNode&lt;T&gt;</code>.</p> <ul> <li><code>IPermissionable</code>: Base interface for permission-enabled objects (e.g., <code>NetPlayer</code>, <code>ConsoleSender</code>)</li> <li><code>PermissionsNode&lt;T&gt;</code>: Node for coordinating permission checks across extensions</li> </ul>"},{"location":"Permissions/#the-ipermissionable-interface","title":"The IPermissionable Interface","text":"<p><code>IPermissionable</code> objects must implement permission checks. Example from <code>NetPlayer</code>:</p> <pre><code>public sealed class NetPlayer : IPermissionable\n{\n    public bool HasPermission(string permission)\n        =&gt; IsCapable &amp;&amp; (IsRootGranted || AmethystSession.PlayerPermissions.HandleResult(p =&gt; p.HasPermission(this, permission)) == PermissionAccess.HasPermission);\n\n    // Other permission check methods follow the same pattern:\n    public bool HasChestPermission(int x, int y) =&gt; /* ... */;\n    public bool HasChestEditPermission(int x, int y) =&gt; /* ... */;\n    public bool HasSignPermission(int x, int y) =&gt; /* ... */;\n    public bool HasSignEditPermission(int x, int y) =&gt; /* ... */;\n    public bool HasTEPermission(int x, int y) =&gt; /* ... */;\n    public bool HasTilePermission(int x, int y, int? width = null, int? height = null) =&gt; /* ... */;\n}\n</code></pre> <p>Players with <code>IsRootGranted</code> (enabled via <code>/grantroot</code> in debug mode) bypass all permission checks.</p>"},{"location":"Permissions/#permissionnode-internals","title":"PermissionNode Internals <p>Excerpt from <code>PermissionsNode&lt;T&gt;</code>:</p> <pre><code>public class PermissionsNode&lt;T&gt; where T : IPermissionable\n{\n    internal List&lt;IPermissionWorker&lt;T&gt;&gt; Workers = new List&lt;IPermissionWorker&lt;T&gt;&gt;();\n\n    internal PermissionAccess HandleResult(Func&lt;IPermissionWorker&lt;T&gt;, PermissionAccess&gt; invokeFunc)\n    {\n        PermissionAccess access = PermissionAccess.None;\n        foreach (var worker in Workers)\n        {\n            var result = invokeFunc(worker);\n            if (result == PermissionAccess.HasPermission) access = result;\n            if (result == PermissionAccess.Blocked) return result; // Immediate block\n        }\n        return access;\n    }\n}\n</code></pre>","text":""},{"location":"Permissions/handling/","title":"Permission Handling","text":""},{"location":"Permissions/handling/#what-is-permissionaccess","title":"What is PermissionAccess?","text":"<p><code>PermissionAccess</code> is an <code>enum</code> used to handle permission check results.</p> <pre><code>public enum PermissionAccess\n{\n    // Skips the check\n    // In modules like Groups, this is returned when the player's group lacks permission.\n    None,\n\n    // Indicates the object (e.g., NetPlayer) has the permission\n    HasPermission,\n\n    // Indicates the object (e.g., NetPlayer) must critically NOT have the permission\n    // Use this sparingly, as overuse may break other plugins/modules\n    Blocked\n}\n</code></pre> <p>To extend permissions for <code>NetPlayer</code>, create a permission worker:</p> <pre><code>public sealed class MyPermissionsWorker : IPermissionWorker&lt;NetPlayer&gt;\n{\n    public static List&lt;string&gt; DefaultPermissions = new List&lt;string&gt;()\n    {\n        \"perm1\", \"perm2\", \"test\"\n    };\n\n    public PermissionAccess HasPermission(NetPlayer target, string permission)\n    {\n        // If the permission is \"MyPermission\", this extension blocks it entirely\n        // Other extensions cannot override this block\n        if (permission == \"permission_the_player_should_never_have\")\n            return PermissionAccess.Blocked;\n\n        // Grant permission if listed in DefaultPermissions\n        if (DefaultPermissions.Contains(permission))\n            return PermissionAccess.HasPermission;\n\n        // No match - defer to other extensions\n        return PermissionAccess.None;\n    }\n\n    // Other permission checks (deferred by default)\n    public PermissionAccess HasChestPermission(NetPlayer target, int x, int y) =&gt; PermissionAccess.None;\n    public PermissionAccess HasChestEditPermission(NetPlayer target, int x, int y) =&gt; PermissionAccess.None;\n    public PermissionAccess HasSignPermission(NetPlayer target, int x, int y) =&gt; PermissionAccess.None;\n    public PermissionAccess HasSignEditPermission(NetPlayer target, int x, int y) =&gt; PermissionAccess.None;\n    public PermissionAccess HasTEPermission(NetPlayer target, int x, int y) =&gt; PermissionAccess.None;\n    public PermissionAccess HasTilePermission(NetPlayer target, int x, int y, int? width = null, int? height = null) =&gt; PermissionAccess.None;\n}\n</code></pre> <p>Register the worker with the permission node (<code>PermissionNode&lt;T&gt;</code>). For <code>NetPlayer</code>, use <code>AmethystSession.PlayerPermissions</code>:</p> <pre><code>IPermissionWorker&lt;NetPlayer&gt; worker = new MyPermissionsWorker();\n\n// Registration\nAmethystSession.PlayerPermissions.Register(worker);\n\n// Deregistration (required for plugin cleanup)\nAmethystSession.PlayerPermissions.Unregister(worker);\n</code></pre>"},{"location":"Players/","title":"Players","text":"<p>The core player class is <code>NetPlayer</code>.</p> <p>The main class responsible for player management is <code>Amethyst.Players.PlayerManager</code>.</p> <p>The most essential property is Tracker.</p> <p><code>PlayerTracker</code> - a class (property <code>PlayerManager.Tracker</code>) that stores instances of <code>NetPlayer</code>.</p> <p>Get a player instance via indexer: <pre><code>int index = 1;\nNetPlayer player = PlayerManager.Tracker[index];\n</code></pre></p>"},{"location":"Players/#netplayer-properties","title":"NetPlayer Properties","text":"<pre><code>// Player's network ID\npublic int Index { get; }\n\n// Player's nickname\npublic string Name =&gt; _playerName;\n\n// Player's IP address\npublic string IP { get; set; }\n\n// Player's UUID\npublic string UUID { get; set; }\n\n// Command sender type. In this case - real player (SenderType.RealPlayer)\npublic SenderType Type =&gt; SenderType.RealPlayer;\n\n// Reference to Terraria.Player\npublic Player TPlayer =&gt; Main.player[Index];\n\n// Network interaction interface (e.g., packet sending)\npublic INetworkClient Socket =&gt; NetworkManager.Provider.GetClient(Index)!;\n\n// SSC character wrapper\npublic ICharacterWrapper? Character { get; internal set; }\n\n// Player management utilities\npublic LocalPlayerUtils Utils { get; }\n\n// Indicates player is connected to server\npublic bool IsActive =&gt; Socket.IsConnected &amp;&amp; !Socket.IsFrozen;\n\n// Indicates player is connected and capable of server interactions:\n// world interactions, command execution, etc.\npublic bool IsCapable =&gt; IsActive &amp;&amp; UUID != \"\" &amp;&amp; Name != \"\" &amp;&amp; _wasSpawned;\n\n// Indicates player has full permissions\n// Enabled via /grantroot command in debug mode or plugins\npublic bool IsRootGranted { get; set; }\n\n// Player's language. Default: set via launch arguments\n// ru-RU, en-US, or plugin-added languages\npublic string Language { get; set; }\n</code></pre>"},{"location":"Players/#accessing-terrariaplayer","title":"Accessing Terraria.Player","text":"<p><code>Player</code> - Terraria's player class. Do not confuse with core's <code>NetPlayer</code>.</p> <pre><code>using Terraria;\n\nNetPlayer player;\n\nPlayer terrariaPlayer = player.TPlayer;\nterrariaPlayer.statLife = 100;\n</code></pre>"},{"location":"Players/#iteration","title":"Iteration","text":"<p><code>PlayerTracker</code> implements <code>IEnumerable&lt;NetPlayer&gt;</code>, allowing <code>foreach</code> usage: <pre><code>foreach (NetPlayer player in PlayerManager.Tracker)\n{\n    Console.WriteLine($\"Found player {player.Name} in Tracker\");\n}\n</code></pre></p> <p>Additional filtered collections: <pre><code>foreach (NetPlayer player in PlayerManager.Tracker.Capable)\n    Console.WriteLine($\"Found capable player: {player.Name}\");\n\nforeach (NetPlayer player in PlayerManager.Tracker.Alive)\n    Console.WriteLine($\"Found alive player: {player.Name}\");\n\nforeach (NetPlayer player in PlayerManager.Tracker.Dead)\n    Console.WriteLine($\"Found dead player: {player.Name}\");\n</code></pre></p>"},{"location":"Players/#player-search","title":"Player Search","text":"<p><code>PlayerTracker</code> has <code>NetPlayer? FindPlayer(string nameOrIndex)</code> method: <pre><code>NetPlayer? player = PlayerManager.Tracker.FindPlayer(\"vxlhat\") ?? \n                    PlayerManager.Tracker.FindPlayer(\"VXL\") ?? \n                    PlayerManager.Tracker.FindPlayer(\"vxlh\") ?? \n                    PlayerManager.Tracker.FindPlayer(\"1\"); // Player ID. Better use PlayerManager.Tracker[1];\n\nif (player != null)\n    Console.WriteLine(\"vxlhat found\");\n</code></pre></p>"},{"location":"Players/ext/","title":"Player Extensions","text":"<p>The <code>NetPlayer</code> class can be extended using the <code>IPlayerExtension</code> and <code>IPlayerExtensionBuilder&lt;T&gt;</code> interfaces.</p>"},{"location":"Players/ext/#implementing-an-extension","title":"Implementing an Extension","text":"<p>Example implementation of <code>IPlayerExtension</code>: <pre><code>public sealed class MyPlayerExtension : IPlayerExtension\n{\n    internal MyPlayerExtension(NetPlayer plr)\n        =&gt; Player = plr;\n\n    public NetPlayer Player { get; }\n\n    // Test fields\n    public bool Field1; \n    public int Field2;\n\n    public void Load()\n    {\n        // Initialize the extension for the player\n        AmethystLog.Main.Info(\"MyPlayerExtension\", $\"MyPlayerExtension loaded for {Player.Name}!\");\n    }\n\n    public void Unload()\n    {\n        // Deinitialize the extension for the player\n        AmethystLog.Main.Error(\"MyPlayerExtension\", $\"MyPlayerExtension unloaded for {Player.Name}!\");\n    }\n}\n</code></pre></p>"},{"location":"Players/ext/#implementing-a-builder","title":"Implementing a Builder","text":"<p>Example implementation of <code>IPlayerExtensionBuilder&lt;T&gt;</code>: <pre><code>public sealed class MyExtensionBuilder : IPlayerExtensionBuilder&lt;MyPlayerExtension&gt;\n{\n    public void Initialize()\n    {\n        // Extension initialization\n        AmethystLog.Main.Info(\"MyPlayerExtension\", $\"MyExtensionBuilder initialized!\");\n    }\n\n    public MyPlayerExtension Build(NetPlayer player)\n        =&gt; new MyPlayerExtension(player);\n}\n</code></pre></p>"},{"location":"Players/ext/#registering-the-extension","title":"Registering the Extension","text":"<p>Register the extension in a plugin: <pre><code>public sealed class MyPlugin : PluginInstance\n{\n    public override string Name =&gt; \"MyPlugin\";\n    public override Version Version =&gt; new Version(1, 0);\n\n    protected override void Load()\n    {\n        PlayerExtensions.RegisterBuilder&lt;MyPlayerExtension&gt;(new MyExtensionBuilder());\n    }\n\n    protected override void Unload()\n    {\n        PlayerExtensions.UnregisterBuilder&lt;MyPlayerExtension&gt;();\n    }\n}\n</code></pre></p>"},{"location":"Players/ext/#retrieving-extensions","title":"Retrieving Extensions","text":"<p>After registration, retrieve the extension from <code>NetPlayer</code>: <pre><code>NetPlayer player;\nMyPlayerExtension? ext = player.GetExtension&lt;MyPlayerExtension&gt;();\n\nif (ext is null)\n    AmethystLog.Main.Error(\"MyPlayerExtension\", \"Extension not initialized!\");\nelse\n    AmethystLog.Main.Info(\"MyPlayerExtension\", \"Extension retrieved successfully!\");\n</code></pre></p>"},{"location":"Players/ext/#manual-reload-rarely-needed","title":"Manual Reload (Rarely Needed)","text":"<pre><code>NetPlayer player;\n\n// Unload extension\nplayer.UnloadExtension&lt;MyPlayerExtension&gt;();\n\n// Reload extension\nplayer.LoadExtension&lt;MyPlayerExtension&gt;();\n</code></pre>"},{"location":"Players/netplayer_utils/","title":"Utilities in NetPlayer.Utils","text":""},{"location":"Players/netplayer_utils/#key-properties","title":"Key Properties","text":"<pre><code>NetPlayer player;\n\nint tileX = player.Utils.TileX; // X coordinate of the tile the player is standing on\nint tileY = player.Utils.TileY; // Y coordinate of the tile the player is standing on\n\nfloat posX = player.Utils.PosX; // Player's X position\nfloat posY = player.Utils.PosY; // Player's Y position\n\nItem terrariaItem = player.Utils.HeldItem; // Gets the item instance held by the player\n\nbool inPvP = player.Utils.InPvP; // Whether the player has PvP enabled\n\nbool hasBuff = player.Utils.HasBuff(Terraria.ID.BuffID.ObsidianSkin); // Returns true if the player has the Obsidian Skin buff\n</code></pre>"},{"location":"Players/netplayer_utils/#sending-small-tile-areas","title":"Sending Small Tile Areas","text":"<p>Centered Square (a square centered at XY coordinates): <pre><code>NetPlayer player;\n\nplayer.Utils.SendTileRectangle(x: 100, y: 200, size: 4);\n\n// Sends tiles in this pattern:\n// ----------\n// ----------\n// ----XY----\n// ----------\n// ----------\n</code></pre></p> <p>Rectangle: <pre><code>player.Utils.SendTileRectangle(x: 100, y: 200, width: 10, height: 4);\n\n// Sends tiles in this pattern:\n// XY------------------\n// --------------------\n// --------------------\n// --------------------\n</code></pre></p>"},{"location":"Players/netplayer_utils/#sending-large-tile-areas-chunkssections","title":"Sending Large Tile Areas (Chunks/Sections)","text":"<p>Terraria divides the world into sections (like Minecraft chunks), each containing 200 blocks in width and 150 in height.</p> <p>Get section coordinates using <code>Netplay</code>: <pre><code>int tileX = 2000;\nint tileY = 1500;\n\nint sectionX = Netplay.GetSectionX(tileX);\nint sectionY = Netplay.GetSectionY(tileY);\n</code></pre></p> <p>Sending sections: <pre><code>NetPlayer player;\n\n// Sends sections covering tile coordinates 1130:130 to 1643:654\nplayer.SendMassTiles(1130, 130, 1643, 654);\n\n// Sends a specific section\nplayer.SendSection(Netplay.GetSectionX(3453), Netplay.GetSectionY(546));\n\n// Sends a section only if the player hasn't received it\nplayer.RequestSendSection(Netplay.GetSectionX(3453), Netplay.GetSectionY(546));\n</code></pre></p>"},{"location":"Players/netplayer_utils/#status-bar","title":"Status Bar","text":"<p>Display text under the minimap or healthbar: <pre><code>NetPlayer player;\n\n// Sends text under the minimap (padding: true)\nplayer.SendStatusText(\"My text under minimap\", padding: true);\n\n// Sends text under the healthbar (padding: false)\nplayer.SendStatusText(\"My text under healthbar\", padding: false);\n</code></pre></p>"},{"location":"Players/netplayer_utils/#teleportation","title":"Teleportation","text":"<pre><code>NetPlayer player;\n\n// Teleport to tile coordinates (100, 500)\nplayer.TeleportTile(100, 500);\n\n// Teleport to world coordinates (3200f, 1600f) (tile 200:100)\nplayer.Teleport(3200f, 1600f);\n</code></pre>"},{"location":"Players/netplayer_utils/#miscellaneous-actions","title":"Miscellaneous Actions","text":"<pre><code>NetPlayer player;\n\n// Give 1x Terra Blade\nplayer.GiveItem(Terraria.ID.ItemID.TerraBlade, 1, 0);\n\n// Deal 300 damage with custom death message\nplayer.Hurt(300, \"Custom death reason text\");\n\n// Deal 300 damage with default death message\nplayer.Hurt(300, PlayerDeathReason.LegacyDefault());\n\n// Kill player with custom message\nplayer.Kill($\"{player.Name} was epicly destroyed!\");\n\n// Kill player with default message\nplayer.Kill();\n\n// Add Regeneration buff for 1h 5m 15s\nplayer.AddBuff(Terraria.ID.BuffID.Regeneration, new TimeSpan(hours: 1, minutes: 5, seconds: 15));\n\n// Alternative method (ticks)\nplayer.AddBuff(Terraria.ID.BuffID.Regeneration, 234900);\n</code></pre>"},{"location":"Players/playerutils/","title":"Utilities in PlayerUtilities","text":""},{"location":"Players/playerutils/#broadcastpacket","title":"BroadcastPacket","text":"<pre><code>// Send packet to all players\npublic static void BroadcastPacket(byte[] data);\n\n// Send packet to players matching a predicate\n// Example: BroadcastPacket(data, plr =&gt; plr.Name.StartsWith(\"A\"));\npublic static void BroadcastPacket(byte[] data, Predicate&lt;NetPlayer&gt; predicate);\n</code></pre>"},{"location":"Players/playerutils/#broadcasttext","title":"BroadcastText","text":"<pre><code>// Send colored text to players matching a predicate\n// Example: BroadcastText(\"Alert!\", Color.Red, plr =&gt; plr.IsActive);\npublic static void BroadcastText(string text, Color color, Predicate&lt;NetPlayer&gt;? predicate = null);\n\n// Send localized text to players matching a predicate\n// Example: BroadcastText(\"amethyst.broadcast.example\", Color.Orange);\npublic static void BroadcastText(string text, Color color, Predicate&lt;NetPlayer&gt;? predicate = null);\n</code></pre>"},{"location":"Players/ssc/","title":"SSC","text":"<p>SSC (Server-Side Characters) - server mode where player characters are stored server-side.</p> <p>Check if SSC is enabled via <code>bool PlayerManager.IsSSCEnabled</code>.</p> <p>Player's character is stored in <code>ICharacterWrapper? NetPlayer.Character</code>.</p>"},{"location":"Players/ssc/#icharacterwrapper-key-properties","title":"ICharacterWrapper Key Properties","text":"<pre><code>// Character database model\npublic CharacterModel Model { get; }\n\n// Indicates SSC is enabled and player can receive SSC packets\npublic bool SupportsChange { get; }\n\n// Locks character modifications from player\n// Only plugins/modules/core can modify characters\npublic bool IsReadonly { get; set; }\n</code></pre>"},{"location":"Players/ssc/#indexers","title":"Indexers","text":"<p>Two indexers in <code>ICharacterWrapper</code>:</p> <p>Get inventory slot: <pre><code>NetPlayer player;\nICharacterWrapper wrapper = player.Character!;\n\nNetItem item = wrapper[5]; // Gets item in slot 6 (index 0 = first slot)\n</code></pre></p> <p>Get color values: <pre><code>NetPlayer player;\nICharacterWrapper wrapper = player.Character!;\n\nNetColor hairCol = wrapper[PlayerColorType.HairColor];\nNetColor skinCol = wrapper[PlayerColorType.SkinColor];\n</code></pre></p>"},{"location":"Players/ssc/#modification","title":"Modification","text":"<p>Sync types: <pre><code>public enum SyncType\n{\n    // Sync only with character owner\n    Local,\n\n    // Sync excluding owner\n    Exclude,\n\n    // Broadcast to all\n    Broadcast\n}\n</code></pre></p> <p>Modification examples: <pre><code>NetPlayer player;\nICharacterWrapper wrapper = player.Character!;\n\n// Set 400 HP/500 Max HP (broadcast)\nwrapper.SetLife(SyncType.Broadcast, 400, 500);\n\n// Modify max HP only (no sync)\nwrapper.SetLife(null, null, 500);\n\n// Change current HP only\nwrapper.SetLife(null, 400, null);\n\n// Set mana (same pattern as SetLife)\nwrapper.SetMana(null, 100, null);\n\n// Set Copper Pickaxe in first slot\nwrapper.SetSlot(SyncType.Broadcast, 0, new NetItem(ItemID.CopperPickaxe, 1, 0));\n\n// Set bright red hair color\nwrapper.SetColor(SyncType.Broadcast, PlayerColorType.HairColor, new NetColor(255, 0, 0));\n\n// Set 50 completed quests\nwrapper.SetQuests(SyncType.Broadcast, 50);\n</code></pre></p>"},{"location":"Players/ssc/#synchronization","title":"Synchronization","text":"<p>Force synchronization without changes: <pre><code>NetPlayer player;\nICharacterWrapper wrapper = player.Character!;\n\n// Sync inventory slot 0\nwrapper.SyncSlot(SyncType.Broadcast, 0);\n\n// Sync health\nwrapper.SyncLife(SyncType.Broadcast);\n\n// Sync mana\nwrapper.SyncMana(SyncType.Broadcast);\n\n// Sync player info (Packet 4)\nwrapper.SyncPlayerInfo(SyncType.Broadcast);\n\n// Sync angler quests\nwrapper.SyncAngler(SyncType.Broadcast);\n</code></pre></p>"},{"location":"Setup/","title":"How to Start the Server?","text":"<p>First, understand what server profiles are:</p> <ul> <li>Profiles allow storing multiple datasets in a single directory, organized by server name.</li> <li>This simplifies server management, eliminates the need to repeatedly update plugins, modules, or the core across multiple servers, and reduces disk clutter.</li> </ul> <p>If this is still unclear: Amethyst does not use direct configuration like vanilla servers or TShock (<code>tshock/...</code>). Instead, it uses server names (<code>data/&lt;profile&gt;/...</code>).</p> <p>To start the server, first decide on a server name, e.g., <code>MyServer</code>:</p>"},{"location":"Setup/#windows","title":"Windows","text":"<p>Open a command prompt in the root folder and run: <pre><code>start.bat -profile MyServer\n</code></pre></p>"},{"location":"Setup/#linux","title":"Linux","text":"<p>Open a terminal in the root directory and run: <pre><code>./start.sh -profile MyServer\n</code></pre></p>"},{"location":"Setup/#launch-arguments","title":"Launch Arguments","text":"Argument Values / Parameters Description <code>-profile</code> <code>&lt;profile&gt;</code> (Required) Load a server profile. <code>-deflang</code> <code>ru-RU</code>, <code>en-US</code> Set the server's default language. <code>-genevil</code> <code>-1</code> (random), <code>0</code> (Corruption), <code>1</code> (Crimson) [Default: -1] World evil type during generation. <code>-gengamemode</code> <code>0</code> (Classic), <code>1</code> (Expert), <code>2</code> (Master), <code>3</code> (Creative) [Default: 0] World game mode during generation. <code>-genwidth</code> <code>4200</code>, <code>6400</code>, <code>8400</code> World width during generation. <code>-genheight</code> <code>1200</code>, <code>1800</code>, <code>2400</code> World height during generation. <code>-worldpath</code> <code>&lt;worldpath&gt;</code> Path to load a world file. <code>-worldrecreate</code> (Flag) Generate a new world on server startup. <code>-netport</code> <code>&lt;netport&gt;</code> [Default: <code>7777</code>] Server port. <code>-netslots</code> <code>&lt;netslots&gt;</code> [Default: <code>8</code>] Maximum number of player slots. <code>-debugmode</code>, <code>-debug</code> (Flag) Enable debug mode (extended logging and test commands). <code>-ssc</code> (Flag) Enable server-side characters (store player data on the server). <code>--version</code> (Flag) Show version information. <code>-?</code>, <code>-h</code>, <code>--help</code> (Flag) Show help and usage information."},{"location":"Setup/debug/","title":"Debug Mode","text":"<p>Debug mode (or developer mode) enables the following features:</p> <ul> <li>The <code>/grantroot</code> command, which grants root mode to a player. Root mode gives a player all permissions.</li> <li>Game update debugging.</li> <li>Enables debug logs.</li> <li>Displays reasons for ignored packets in the console.</li> </ul> <p>To start the server in debug mode, add the <code>-debug</code> argument to the launch command (<code>start.bat</code> or <code>./start.sh</code>).</p>"},{"location":"Setup/debug/#usage-in-plugins","title":"Usage in Plugins","text":"<p>You can also utilize this state in plugins/modules.</p> <p>Check if the server is in debug mode via <code>AmethystSession.Profile.DebugMode</code>.</p> <p>Example:</p> <pre><code>using Amethyst.Extensions.Plugins;\nusing System;\n\nnamespace MyPlugin;\n\npublic sealed class MyPlugin : PluginInstance\n{\n    public override string Name =&gt; \"MyPlugin\";\n\n    public override Version Version =&gt; new(1, 0);\n\n    protected override void Load()\n    {\n        // This log will only appear if debug mode is enabled, as debug logs are active only in debug mode.\n        AmethystLog.Startup.Debug(\"Amethyst.Docs\", \"Debug message from my epic plugin!\");\n\n        if (AmethystSession.Profile.DebugMode)\n        {\n            AmethystLog.Startup.Debug(\"Amethyst.Docs\", \"This message will definitely appear now.\");\n        }\n\n        AmethystLog.Startup.Info(\"Amethyst.Docs\", \"This message will also appear\");\n    }\n\n    protected override void Unload() {}\n}\n</code></pre>"},{"location":"Setup/localization/","title":"Localization","text":"<p>Amethyst has built-in localization. To verify, check the <code>localization</code> folder in the core directory.</p> <p>Initially, you will see these files: <pre><code>\u251c\u2500\u2500 en-US\n\u2502   \u251c\u2500\u2500 en-US.amethyst.json\n\u2502   \u251c\u2500\u2500 en-US.commands.desc.json\n\u2502   \u251c\u2500\u2500 en-US.commands.json\n\u2502   \u251c\u2500\u2500 en-US.commands.text.json\n\u2502   \u251c\u2500\u2500 en-US.network.json\n\u2502   \u2514\u2500\u2500 en-US.packet.json\n\u2514\u2500\u2500 ru-RU\n    \u251c\u2500\u2500 ru-RU.amethyst.json\n    \u251c\u2500\u2500 ru-RU.commands.desc.json\n    \u251c\u2500\u2500 ru-RU.commands.json\n    \u251c\u2500\u2500 ru-RU.commands.text.json\n    \u251c\u2500\u2500 ru-RU.network.json\n    \u2514\u2500\u2500 ru-RU.packet.json\n</code></pre></p> <p>To extend localization (e.g., when installing a plugin), simply add localization files to <code>en-US</code> and <code>ru-RU</code>.</p>"},{"location":"Setup/localization/#adding-a-custom-language","title":"Adding a Custom Language","text":"<p>To add a new language, create a new directory and add localization files.</p> <p>For example, to add Latin as a joke, create a <code>la-NA</code> folder alongside <code>ru-RU</code> and <code>en-US</code>.</p> <p>Next, enable the language:</p> <pre><code>[ServerCommand(CommandType.Shared, \"lang la\", \"set lingua latina.\", null)]\npublic static void Latin(CommandInvokeContext ctx)\n{\n    ctx.Sender.Language = \"la-NA\";\n    ctx.Sender.ReplySuccess(\"Num quis hoc legit?\");\n}\n</code></pre> <p>If you want to enforce Latin for all players, start the server with the <code>-language la-NA</code> argument.</p>"},{"location":"Setup/localization/#adding-localization-files","title":"Adding Localization Files","text":"<p>A typical localization file uses <code>key:value</code> pairs: <pre><code>{\n    \"myKey\": \"My text\"\n}\n</code></pre></p> <p>To use localization, call <code>Localization.Get</code>: <pre><code>{\n    string text = Localization.Get(\"myKey\", \"la-NA\");\n    Console.WriteLine($\"My text is: {text}\");\n}\n</code></pre></p> <p>To display localized text to a player in their language: <pre><code>{\n    NetPlayer player; // Assume we have a player object.\n\n    string text = Localization.Get(\"myKey\", player.Language);\n    player.ReplyInfo(text);\n}\n</code></pre></p>"},{"location":"Setup/modules/","title":"Module Development and Management","text":"<p>First, understand what a module is.</p> <p>A module is a static extension for the server, designed to expand API functionality.</p> <p>Modules are loaded from the <code>extensions/modules</code> directory, provided they are allowed (via the <code>modules setallow</code> command below).</p>"},{"location":"Setup/modules/#managing-modules","title":"Managing Modules","text":"<p>After starting the server, use these console commands:</p> Command Description Example <code>modules list</code> Lists loaded modules. <code>modules allowlist</code> Lists allowed modules. <code>modules setallow &lt;name with .dll&gt; &lt;true \\| false&gt;</code> Allows or blocks a module. <code>modules setallow MyModule.dll true</code>"},{"location":"Setup/modules/#creating-a-module","title":"Creating a Module","text":"<p>Install the <code>Amethyst.Templates</code> NuGet package first: <pre><code>dotnet new install Amethyst.Templates\n</code></pre></p> <p>The <code>Amethyst.Templates</code> package simplifies creating plugins/modules for the API.</p> <p>Create a module named <code>MyModule</code>: <pre><code>dotnet new aext-module -n MyModule\n</code></pre></p> <p>After running the command, a <code>MyModule</code> folder or project will be created.</p>"},{"location":"Setup/modules/#base-project-code","title":"Base Project Code","text":"<pre><code>using Amethyst.Extensions.Modules;\n\nnamespace MyModule;\n\n[AmethystModule(\"MyModule\")]\npublic static class MyModule\n{\n    private static bool _isInitialized;\n\n    [ModuleInitialize]\n    public static void Initialize()\n    {\n        if (IsInitialized) \n        {\n            return;\n        }\n\n        IsInitialized = true;\n\n        // Module initialization code . . .\n    }\n}\n</code></pre> <p>Compile the module: <pre><code>dotnet build -c Release\n</code></pre></p> <p>The compiled module (e.g., <code>MyModule.dll</code>) will be in <code>bin/Release/net9.0</code>. Move it to <code>extensions/modules</code> in the Amethyst root folder.</p> <p>Start the server, run <code>/modules setallow MyModule.dll</code>, and reload the server. Your first module is now running!</p>"},{"location":"Setup/plugins/","title":"Plugin Development and Management","text":"<p>First, understand what a plugin is.</p> <p>A plugin is a dynamic extension for the server, designed to interact with existing APIs without exposing new ones.</p> <p>Plugins are loaded from the <code>extensions/plugins</code> directory, provided they are allowed (via the <code>plugins setallow</code> command below).</p>"},{"location":"Setup/plugins/#managing-plugins","title":"Managing Plugins","text":"<p>After starting the server, use these console commands:</p> Command Description Example <code>plugins list</code> Lists loaded plugins. <code>plugins allowlist</code> Lists allowed plugins. <code>plugins setallow &lt;name with .dll&gt; &lt;true \\| false&gt;</code> Allows or blocks a plugin. <code>plugins setallow MyPlugin.dll true</code> <code>plugins load</code> Loads plugins. <code>plugins unload</code> Unloads plugins. <code>plugins reload</code> Reloads plugins."},{"location":"Setup/plugins/#creating-a-plugin","title":"Creating a Plugin","text":"<p>Install the <code>Amethyst.Templates</code> NuGet package first: <pre><code>dotnet new install Amethyst.Templates\n</code></pre></p> <p>Create a plugin named <code>MyPlugin</code>: <pre><code>dotnet new aext-plugin -n MyPlugin\n</code></pre></p>"},{"location":"Setup/plugins/#base-project-code","title":"Base Project Code","text":"<pre><code>using Amethyst.Extensions.Plugins;\nusing System;\n\nnamespace MyPlugin;\n\npublic sealed class MyPlugin : PluginInstance\n{\n    public override string Name =&gt; \"MyPlugin\";\n\n    public override Version Version =&gt; new(1, 0);\n\n    protected override void Load()\n    {\n        // Plugin loading code\n\n        AmethystLog.Startup.Info(\"Amethyst.Docs\", \"MyPlugin.Load();\");\n    }\n\n    protected override void Unload()\n    {\n        // Plugin unloading code\n\n        AmethystLog.Startup.Info(\"Amethyst.Docs\", \"MyPlugin.Unload();\");\n    }\n}\n</code></pre> <p>Compile the plugin: <pre><code>dotnet build -c Release\n</code></pre></p> <p>The compiled plugin (e.g., <code>MyPlugin.dll</code>) will be in <code>bin/Release/net9.0</code>. Move it to <code>extensions/plugins</code> in the Amethyst root folder.</p> <p>Start the server, run <code>/plugins setallow MyPlugin.dll</code>, and reload plugins with <code>/plugins reload</code>. Your first plugin is now active!</p>"},{"location":"Storages/config/","title":"JSON Configuration","text":"<p>Amethyst uses JSON as its primary configuration format and provides convenient configuration handling in code.</p> <p>A configuration requires a <code>struct</code> type containing the necessary data: <pre><code>public struct MyConfigData\n{\n    public int TestValue;\n    public string? TestText;\n    public string DefaultTestText = \"Hello World!\";\n    public List&lt;string&gt; TestValues;\n}\n</code></pre></p> <p>The <code>Configuration&lt;T&gt;</code> class manages your configuration - loading, saving, and modifying it.</p> <p>Example usage: <pre><code>Configuration&lt;MyConfigData&gt; config = new Configuration&lt;MyConfigData&gt;(typeof(MyConfigData).FullName!, new());\n\n// Load configuration\nconfig.Load();\n\n// Initialize values\nconfig.Modify(InitializeConfig, true);\n\nvoid InitializeConfig(ref MyConfigData data)\n{\n    if (data.TestText == null)\n    {\n        data.TestText = \"default value of TestText\";\n    }\n\n    // No need to initialize DefaultTestText\n\n    if (data.TestValues == null)\n    {\n        data.TestValues = new List&lt;string&gt;();\n    }\n}\n</code></pre></p> <p>Access configuration data through the <code>Data</code> property: <pre><code>MyConfigData data = config.Data;\n\nif (data.TestText == \"default value of TestText\")\n{\n    ModernConsole.WriteLine(\"Value is default!\");\n}\n</code></pre></p>"},{"location":"Storages/mongodb/","title":"Using MongoDB","text":"<p>Amethyst primarily uses MongoDB for data storage, providing convenient database operations.</p>"},{"location":"Storages/mongodb/#data-models","title":"Data Models","text":"<p>Create models by inheriting from <code>DataModel</code>: <pre><code>using Amethyst.Storages.Mongo;\nusing MongoDB.Bson.Serialization.Attributes;\n\n[BsonIgnoreExtraElements]\npublic sealed class MyModel : DataModel\n{\n    public static MongoModels&lt;MyModel&gt; Models { get; } = MongoDatabase.Main.Get&lt;MyModel&gt;();\n\n    public MyModel(string name) : base(name)\n    {\n        TestField = $\"TestField: {name}\";\n    }\n\n    public int TestField;\n    public bool TestField2;\n    public string TestField3;\n\n    public override void Save() =&gt; Models.Save(this);\n    public override void Remove() =&gt; Models.Remove(Name);\n}\n</code></pre></p> <p>Key features:</p> <ul> <li><code>Name</code> property acts as primary key</li> <li>Unique names enforced - no duplicate models</li> <li>Built-in <code>Save()</code> and <code>Remove()</code> methods</li> </ul>"},{"location":"Storages/mongodb/#mongodatabase-class","title":"MongoDatabase Class","text":"<p>Main database instance: <code>MongoDatabase.Main</code></p> <p>Connect to alternate databases: <pre><code>// Connect to config-defined MongoDB with different database name\nvar alternateDb = new MongoDatabase(\n    AmethystSession.StorageConfiguration.MongoConnection,\n    \"AlternateDB\");\n\n// Connect to custom MongoDB instance\nvar customDb = new MongoDatabase(\n    \"mongodb://alternateIP:27017/\",\n    \"AnotherDB\");\n</code></pre></p>"},{"location":"Storages/mongodb/#mongomodels-class","title":"MongoModels Class","text":"<p>Handles database collection operations: <pre><code>MongoModels&lt;MyModel&gt; models = MongoDatabase.Main.Get&lt;MyModel&gt;();\n\n// Create and save models\nvar model = new MyModel(\"UniqueName\");\nmodels.Save(model);\n\n// Update model\nmodel.TestField = 5;\nmodels.Save(model);\n\n// Remove models\nmodels.Remove(\"UniqueName\");\nmodels.Remove(m =&gt; m.Name.StartsWith(\"M\"));\n\n// Find models\nMyModel? foundModel = models.Find(\"UniqueName\");\n</code></pre></p>"},{"location":"Storages/mysql/","title":"MySQL","text":"<p>Amethyst supports MySQL for SQL-based data storage operations through the <code>MySQLProvider</code> class.</p>"},{"location":"Storages/mysql/#connection-management","title":"Connection Management","text":"<pre><code>// Using connection string\nvar provider = new MySQLProvider(\"Server=localhost;Database=test;Uid=user;Pwd=pass;\");\n\n// Using individual parameters\nvar provider = new MySQLProvider(\"localhost\", \"test\", \"user\", \"pass\");\n\n// Open connection explicitly\nprovider.OpenConnection();\n\n// Close connection when done\nprovider.CloseConnection();\n</code></pre>"},{"location":"Storages/mysql/#basic-operations","title":"Basic Operations","text":""},{"location":"Storages/mysql/#execute-non-query-insertupdatedelete","title":"Execute Non-Query (INSERT/UPDATE/DELETE)","text":"<pre><code>int affectedRows = provider.ExecuteNonQuery(\n    \"INSERT INTO users (name, age) VALUES (@name, @age)\",\n    new Dictionary&lt;string, object&gt; {\n        {\"@name\", \"John\"},\n        {\"@age\", 25}\n    });\n</code></pre>"},{"location":"Storages/mysql/#execute-scalar","title":"Execute Scalar","text":"<pre><code>object? result = provider.ExecuteScalar(\n    \"SELECT COUNT(*) FROM users\");\n</code></pre>"},{"location":"Storages/mysql/#execute-query","title":"Execute Query","text":"<pre><code>var data = provider.ExecuteQuery(\n    \"SELECT * FROM users WHERE age &gt; @minAge\",\n    new Dictionary&lt;string, object&gt; {\n        {\"@minAge\", 18}\n    });\n</code></pre>"},{"location":"Storages/sqlite/","title":"SQLite","text":"<p>Amethyst provides SQLite support through the <code>SQLiteProvider</code> class for lightweight embedded database operations.</p>"},{"location":"Storages/sqlite/#connection-management","title":"Connection Management","text":"<pre><code>// Using direct path\nvar provider = new SQLiteProvider(\"data.db\");\n\n// Using server profile\nvar provider = new SQLiteProvider(serverProfile);\n\n// Automatic connection opening\nprovider.OpenConnection(); // Optional - first query will auto-open\n</code></pre>"},{"location":"Storages/sqlite/#basic-operations","title":"Basic Operations","text":""},{"location":"Storages/sqlite/#create-table","title":"Create Table","text":"<pre><code>provider.ExecuteNonQuery(\n    \"CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT, age INTEGER)\");\n</code></pre>"},{"location":"Storages/sqlite/#batch-insert","title":"Batch Insert","text":"<pre><code>provider.ExecuteNonQuery(\n    \"INSERT INTO users (name, age) VALUES ('Alice', 30), ('Bob', 28)\");\n</code></pre>"},{"location":"Storages/sqlite/#parameterized-query","title":"Parameterized Query","text":"<pre><code>var users = provider.ExecuteQuery(\n    \"SELECT * FROM users WHERE age BETWEEN @min AND @max\",\n    new Dictionary&lt;string, object&gt; {\n        {\"@min\", 25},\n        {\"@max\", 35}\n    });\n</code></pre>"},{"location":"Terraria%20API/ids/","title":"Terraria.ID","text":"<p>The <code>TerrariaAPI.dll</code> contains the <code>Terraria.ID</code> namespace, which can be used in plugins.</p> <p>Example using <code>Terraria.ID.LiquidID</code>: <pre><code>namespace Terraria.ID;\n\npublic static class LiquidID\n{\n    public const short Water = 0;\n    public const short Lava = 1;\n    public const short Honey = 2;\n    public const short Shimmer = 3;\n    public static readonly short Count = 4;\n}\n</code></pre></p> <p>Other important classes include:</p> <ul> <li><code>ItemID</code></li> <li><code>NPCID</code></li> <li><code>BuffID</code></li> <li><code>TileID</code></li> <li><code>WallID</code></li> <li><code>PaintID</code></li> <li><code>PaintCoatingID</code></li> <li><code>ProjectileID</code></li> <li><code>InvasionID</code></li> <li><code>GameModeID</code></li> <li><code>PlayerSlotID</code></li> <li><code>MessageID</code> (packet IDs, though not all are documented)</li> </ul>"},{"location":"Terraria%20API/tiles/","title":"Tiles (Terraria.Tile)","text":"<p>The core Terraria class for blocks and walls is <code>Terraria.Tile</code>.</p> <p>Tile array is located in <code>Terraria.Main.tile</code>: <pre><code>using Terraria;\n\nTile tile = Main.tile[100, 200];\ntile.wall = 5; // Replaces wall with ID 5\n</code></pre></p>"},{"location":"Terraria%20API/tiles/#tile-fields","title":"Tile Fields","text":"<pre><code>public ushort type;    // Block type ID (starts at 0). \n                       // Only works if tile.active() == true\n\npublic ushort wall;    // Wall ID (starts at 1)\npublic byte liquid;    // Liquid amount\npublic short frameX;   // Block frame X offset\npublic short frameY;   // Block frame Y offset\npublic ushort sTileHeader;  // Compressed short values\npublic byte bTileHeader;    // Compressed byte values\npublic byte bTileHeader2;   // Additional compressed values\npublic byte bTileHeader3;   // Additional compressed values\n</code></pre>"},{"location":"Terraria%20API/tiles/#tile-properties","title":"Tile Properties","text":"<pre><code>public int collisionType { get; } // Sloped block type\n</code></pre>"},{"location":"Terraria%20API/tiles/#tile-methods","title":"Tile Methods","text":""},{"location":"Terraria%20API/tiles/#basic-methods","title":"Basic Methods","text":"<pre><code>public bool active();            // Returns if block is active\npublic void active(bool active); // Sets active state\n\npublic bool inActive();          // Returns if deactivated by wires\npublic void inActive(bool inActive); // Sets wire-deactivated state\n\npublic void ClearEverything();   // Clears all data\npublic void ClearTile();         // Clears block data\npublic void CopyFrom(Tile _from); // Copies data from another tile\npublic int blockType();          // Returns sloped block type\npublic void ResetToType(ushort type); // Resets to specified block\npublic void ClearMetadata();     // Clears non-block data\npublic bool halfBrick();         // Half-brick status\npublic void halfBrick(bool halfBrick);\npublic byte slope();             // Slope type (0-5)\npublic void slope(byte slope);\npublic bool HasSameSlope(Tile tile); // Compares slopes\n</code></pre>"},{"location":"Terraria%20API/tiles/#liquid-handling","title":"Liquid Handling","text":"<pre><code>public byte liquidType();        // Liquid ID (0=Water,1=Lava,2=Honey,3=Shimmer)\npublic void liquidType(int liquidType);\n\npublic bool lava();              // Checks for lava\npublic void lava(bool lava);\n\npublic bool honey();             // Checks for honey\npublic void honey(bool honey);\n\npublic bool shimmer();           // Checks for shimmer\npublic void shimmer(bool shimmer);\n</code></pre>"},{"location":"Terraria%20API/tiles/#paint-coatings","title":"Paint &amp; Coatings","text":"<pre><code>public byte color();             // Block paint ID\npublic void color(byte color);\n\npublic byte wallColor();         // Wall paint ID\npublic void wallColor(byte wallColor);\n\npublic bool invisibleBlock();    // Echo Coating status for block\npublic void invisibleBlock(bool invisibleBlock);\n\npublic bool invisibleWall();     // Echo Coating status for wall\npublic void invisibleWall(bool invisibleWall);\n\npublic void ClearBlockPaintAndCoating(); // Removes block paint/coating\npublic void ClearWallPaintAndCoating();  // Removes wall paint/coating\n</code></pre>"},{"location":"Terraria%20API/tiles/#wires","title":"Wires","text":"<pre><code>public bool wire4();             // Yellow wire status\npublic void wire4(bool wire4);\n// Similar methods: wire(), wire2(), wire3()\n</code></pre>"},{"location":"ru/","title":"Home","text":"<p>\u0414\u043e\u0431\u0440\u043e \u043f\u043e\u0436\u0430\u043b\u043e\u0432\u0430\u0442\u044c \u043d\u0430 \u0434\u043e\u043c\u0430\u0448\u043d\u044e\u044e \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443 \u0434\u043e\u043a\u0443\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u0438 Amethyst!</p> <p>Amethyst - \u043c\u043e\u0449\u043d\u043e\u0435 \u0438 \u043e\u043f\u0442\u0438\u043c\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u044f\u0434\u0440\u043e \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430 Terraria.</p>"},{"location":"ru/Commands/","title":"\u041a\u043e\u043c\u0430\u043d\u0434\u044b","text":""},{"location":"ru/Commands/#_2","title":"\u0421\u043f\u0440\u0430\u0432\u043e\u0447\u043d\u0438\u043a \u043a\u043b\u0430\u0441\u0441\u043e\u0432","text":""},{"location":"ru/Commands/#_3","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043b\u0430\u0441\u0441\u044b","text":"\u041a\u043b\u0430\u0441\u0441/\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 <code>CommandData</code> \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0445 \u0434\u043b\u044f \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0445 \u043a\u043e\u043c\u0430\u043d\u0434 <code>CommandInvokeContext</code> \u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u0441 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u043c\u0438 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u0435\u043c <code>ICommandSender</code> \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0438\u043d\u0438\u0446\u0438\u0430\u0442\u043e\u0440\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434 <code>TextPage</code> \u041a\u043e\u043d\u0442\u0435\u0439\u043d\u0435\u0440 \u0434\u043b\u044f \u043f\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043d\u043e\u0433\u043e \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430"},{"location":"ru/Commands/#_4","title":"\u0410\u0442\u0440\u0438\u0431\u0443\u0442\u044b","text":"\u0410\u0442\u0440\u0438\u0431\u0443\u0442 \u041d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435 <code>ServerCommandAttribute</code> \u041e\u043f\u0440\u0435\u0434\u0435\u043b\u044f\u0435\u0442 \u043c\u0435\u0442\u0430\u0434\u0430\u043d\u043d\u044b\u0435 \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u0438 \u043a\u043e\u043c\u0430\u043d\u0434 <code>CommandsSyntaxAttribute</code> \u0417\u0430\u0434\u0430\u0435\u0442 \u0448\u0430\u0431\u043b\u043e\u043d\u044b \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430 \u043a\u043e\u043c\u0430\u043d\u0434 <code>CommandsSettingsAttribute</code> \u041d\u0430\u0441\u0442\u0440\u0430\u0438\u0432\u0430\u0435\u0442 \u0444\u043b\u0430\u0433\u0438 \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434"},{"location":"ru/Commands/#_5","title":"\u0421\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043c\u0435\u0442\u043e\u0434\u043e\u0432","text":"<p>\u041a\u043e\u043c\u0430\u043d\u0434\u044b \u0440\u0435\u0430\u043b\u0438\u0437\u0443\u044e\u0442\u0441\u044f \u043a\u0430\u043a \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043c\u0435\u0442\u043e\u0434\u044b \u0441 \u0430\u0442\u0440\u0438\u0431\u0443\u0442\u0430\u043c\u0438:</p> <pre><code>[ServerCommand(\n    CommandType.Shared, \n    \"example\", \n    \"\u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u043f\u0438\u0441\u0430\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b\", \n    \"example.permission\"\n)]\n[CommandsSyntax(\"&lt;\u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439_\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440&gt;\", \"[\u043e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439_\u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440]\")]\npublic static void ExampleCommand(\n    CommandInvokeContext ctx, \n    string required_param, \n    int optional_param = 0\n)\n{\n    // \u041b\u043e\u0433\u0438\u043a\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b\n    ctx.Sender.ReplySuccess($\"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043e \u0441 {required_param} \u0438 {optional_param}\");\n}\n</code></pre>"},{"location":"ru/Commands/#_6","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043a\u043e\u043c\u043f\u043e\u043d\u0435\u043d\u0442\u044b:","text":"<ol> <li> <p><code>ServerCommandAttribute</code> </p> <ul> <li><code>CommandType</code>: \u0423\u0440\u043e\u0432\u0435\u043d\u044c \u0434\u043e\u0441\u0442\u0443\u043f\u043d\u043e\u0441\u0442\u0438 \u043a\u043e\u043c\u0430\u043d\u0434\u044b</li> <li><code>Name</code>: \u0418\u043c\u044f \u0434\u043b\u044f \u0432\u044b\u0437\u043e\u0432\u0430 \u043a\u043e\u043c\u0430\u043d\u0434\u044b</li> <li><code>Description</code>: \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u0434\u043b\u044f \u0441\u043f\u0440\u0430\u0432\u043a\u0438</li> <li><code>Permission</code>: \u0422\u0440\u0435\u0431\u0443\u0435\u043c\u044b\u0439 \u0443\u0437\u0435\u043b \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 (null \u2014 \u0431\u0435\u0437 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439)</li> </ul> </li> <li> <p><code>CommandInvokeContext</code>     \u0421\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u043a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f:</p> <ul> <li><code>Sender</code>: \u041a\u043e\u043d\u0442\u0435\u043a\u0441\u0442 \u0438\u043d\u0438\u0446\u0438\u0430\u0442\u043e\u0440\u0430 (\u0440\u0435\u0430\u043b\u0438\u0437\u0443\u0435\u0442 <code>ICommandSender</code>)</li> <li><code>ArgumentsText</code>: \u041d\u0435\u043e\u0431\u0440\u0430\u0431\u043e\u0442\u0430\u043d\u043d\u0430\u044f \u0441\u0442\u0440\u043e\u043a\u0430 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432</li> <li><code>Arguments</code>: \u0422\u043e\u043a\u0435\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0441\u043f\u0438\u0441\u043e\u043a \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u0432</li> </ul> </li> <li> <p><code>ICommandSender</code>     \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0438\u0441\u0442\u043e\u0447\u043d\u0438\u043a\u043e\u0432 \u043a\u043e\u043c\u0430\u043d\u0434 \u0441 \u043c\u0435\u0442\u043e\u0434\u0430\u043c\u0438:</p> <ul> <li>\u041f\u0440\u043e\u0432\u0435\u0440\u043a\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439 (<code>HasPermission()</code>)</li> <li>\u041e\u0442\u0432\u0435\u0442\u044b (<code>ReplySuccess()</code>, <code>ReplyError()</code> \u0438 \u0442.\u0434.)</li> <li>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0447\u0435\u0440\u0435\u0437 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e <code>Language</code></li> </ul> </li> </ol>"},{"location":"ru/Commands/#_7","title":"\u0421\u0438\u0441\u0442\u0435\u043c\u0430 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u0439","text":"<p>\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0430\u0446\u0438\u0438: - \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u0438\u0435\u0440\u0430\u0440\u0445\u0438\u044e \u0447\u0435\u0440\u0435\u0437 \u0442\u043e\u0447\u043a\u0443: <code>\u043c\u043e\u0434\u0443\u043b\u044c.\u0444\u0443\u043d\u043a\u0446\u0438\u044f.\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435</code> - \u041f\u0440\u043e\u0432\u0435\u0440\u044f\u0439\u0442\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f \u043d\u0430 \u0440\u0430\u043d\u043d\u0438\u0445 \u044d\u0442\u0430\u043f\u0430\u0445 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f</p>"},{"location":"ru/Commands/#_8","title":"\u0421\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u0438\u044f","text":"<pre><code>[ServerCommand(CommandType.Shared, \"ban\", \"\u0417\u0430\u0431\u0430\u043d\u0438\u0442\u044c \u0438\u0433\u0440\u043e\u043a\u0430\", \"moderation.ban\")]\n</code></pre>"},{"location":"ru/Commands/#_9","title":"\u0414\u0438\u043d\u0430\u043c\u0438\u0447\u0435\u0441\u043a\u0438\u0435 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438","text":"<pre><code>if (!ctx.Sender.HasPermission(\"special.access\"))\n{\n    ctx.Sender.ReplyError(\"\u0414\u043e\u0441\u0442\u0443\u043f \u0437\u0430\u043f\u0440\u0435\u0449\u0451\u043d!\");\n    return;\n}\n</code></pre>"},{"location":"ru/Commands/#_10","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043e\u0442\u0432\u0435\u0442\u043e\u0432","text":""},{"location":"ru/Commands/#_11","title":"\u0422\u0438\u043f\u044b \u043e\u0442\u0432\u0435\u0442\u043e\u0432","text":"<pre><code>ctx.Sender.ReplySuccess(\"\u041e\u043f\u0435\u0440\u0430\u0446\u0438\u044f \u0437\u0430\u0432\u0435\u0440\u0448\u0435\u043d\u0430\");    // \u0417\u0435\u043b\u0435\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442\nctx.Sender.ReplyInfo(\"\u0421\u0442\u0430\u0442\u0443\u0441: \u043e\u043d\u043b\u0430\u0439\u043d\");          // \u0416\u0435\u043b\u0442\u044b\u0439 \u0442\u0435\u043a\u0441\u0442\nctx.Sender.ReplyWarning(\"\u041c\u0430\u043b\u043e \u0440\u0435\u0441\u0443\u0440\u0441\u043e\u0432\");        // \u041e\u0440\u0430\u043d\u0436\u0435\u0432\u044b\u0439 \u0442\u0435\u043a\u0441\u0442\nctx.Sender.ReplyError(\"\u041d\u0435\u043a\u043e\u0440\u0440\u0435\u043a\u0442\u043d\u044b\u0439 \u0432\u0432\u043e\u0434\");      // \u041a\u0440\u0430\u0441\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442\n</code></pre>"},{"location":"ru/Commands/#_12","title":"\u0424\u043e\u0440\u043c\u0430\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u044f","text":"<pre><code>ctx.Sender.ReplySuccess(\"\u0418\u0433\u0440\u043e\u043a {0} \u043d\u0430\u0431\u0440\u0430\u043b {1} \u043e\u0447\u043a\u043e\u0432\", playerName, score);\n</code></pre>"},{"location":"ru/Commands/#_13","title":"\u041f\u043e\u0441\u0442\u0440\u0430\u043d\u0438\u0447\u043d\u0430\u044f \u0441\u0438\u0441\u0442\u0435\u043c\u0430","text":""},{"location":"ru/Commands/#_14","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0442\u0435\u043d\u0442\u0430","text":"<pre><code>var items = Enumerable.Range(1, 100).Select(i =&gt; $\"\u042d\u043b\u0435\u043c\u0435\u043d\u0442 {i}\");\nvar pages = PagesCollection.CreateFromList(\n    items, \n    maxLineLength: 80,   // \u0421\u0438\u043c\u0432\u043e\u043b\u043e\u0432 \u043d\u0430 \u0441\u0442\u0440\u043e\u043a\u0443\n    linesPerPage: 10     // \u0421\u0442\u0440\u043e\u043a \u043d\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0443\n);\n</code></pre>"},{"location":"ru/Commands/#_15","title":"\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0441\u0442\u0440\u0430\u043d\u0438\u0446","text":"<pre><code>ctx.Sender.ReplyPage(\n    pages,\n    header: \"\u0421\u043f\u0438\u0441\u043e\u043a \u044d\u043b\u0435\u043c\u0435\u043d\u0442\u043e\u0432 - \u0421\u0442\u0440\u0430\u043d\u0438\u0446\u0430 {0} \u0438\u0437 {1}\",\n    footer: \"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 /example &lt;\u0441\u0442\u0440\u0430\u043d\u0438\u0446\u0430&gt; \u0434\u043b\u044f \u043d\u0430\u0432\u0438\u0433\u0430\u0446\u0438\u0438\",\n    footerArgs: null,\n    showPageName: true,\n    page: 2\n);\n</code></pre>"},{"location":"ru/Commands/#_16","title":"\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438","text":"<ul> <li>\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e <code>ICommandSender.Language</code></li> <li>\u0418\u043d\u0442\u0435\u0433\u0440\u0438\u0440\u0443\u0435\u0442\u0441\u044f \u0441 \u0441\u0438\u0441\u0442\u0435\u043c\u043e\u0439 \u043f\u0435\u0440\u0435\u0432\u043e\u0434\u043e\u0432</li> </ul>"},{"location":"ru/Commands/#_17","title":"\u041b\u043e\u043a\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b","text":"<pre><code>[ServerCommand(CommandType.Shared, \"help\", \"commands.help.desc\", null)]\n</code></pre>"},{"location":"ru/Commands/#_18","title":"\u041b\u043e\u043a\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0435 \u043e\u0442\u0432\u0435\u0442\u044b","text":"<pre><code>ctx.Sender.ReplySuccess(\"commands.help.success\");\n</code></pre>"},{"location":"ru/Commands/settings/","title":"\u041d\u0430\u0441\u0442\u0440\u043e\u0439\u043a\u0438","text":"<p>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0432 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 <code>CommandSettings</code>: <pre><code>[Flags]\npublic enum CommandSettings\n{\n    /// &lt;summary&gt;\n    /// \u0412\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0432\u043d\u0443\u0442\u0440\u0438 \u0438\u0433\u0440\u044b.\n    /// &lt;/summary&gt;\n    IngameOnly = 1,\n\n    /// &lt;summary&gt;\n    /// \u041e\u0442\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f.\n    /// &lt;/summary&gt;\n    HideLog = 2,\n\n    /// &lt;summary&gt;\n    /// \u0418\u0441\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u0438\u0437 \u0441\u043f\u0438\u0441\u043a\u043e\u0432 \u043f\u043e\u043c\u043e\u0449\u0438.\n    /// &lt;/summary&gt;\n    Hidden = 4\n}\n</code></pre></p> <p>\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0432\u0438\u0434\u0438\u043c\u043e\u0441\u0442\u044c\u044e \u0438 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435\u043c \u043a\u043e\u043c\u0430\u043d\u0434: <pre><code>[CommandsSettings(CommandSettings.Hidden | CommandSettings.HideLog)]\npublic static void SecretCommand(CommandInvokeContext ctx)\n{\n    // \u0421\u043a\u0440\u044b\u0442\u0430 \u0438\u0437 \u0441\u043f\u0440\u0430\u0432\u043a\u0438, \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u043d\u0435 \u043b\u043e\u0433\u0438\u0440\u0443\u0435\u0442\u0441\u044f\n}\n</code></pre></p>"},{"location":"ru/Commands/syntax/","title":"\u0421\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441","text":""},{"location":"ru/Commands/syntax/#_2","title":"\u041c\u043d\u043e\u0436\u0435\u0441\u0442\u0432\u0435\u043d\u043d\u044b\u0435 \u0448\u0430\u0431\u043b\u043e\u043d\u044b","text":"<p>\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0430 \u0430\u043b\u044c\u0442\u0435\u0440\u043d\u0430\u0442\u0438\u0432\u043d\u044b\u0445 \u0432\u0430\u0440\u0438\u0430\u043d\u0442\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 <code>[CommandsSyntax]</code>: <pre><code>[CommandsSyntax(\"[score]\", \"[-s(ilent)]\")]\npublic static void ScoreCommand(\n    CommandInvokeContext ctx, \n    int score = 0, \n    string args = \"\"\n)\n{\n    // \u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0444\u043b\u0430\u0433\u0430 -s \u0432 args\n    if (args.Contains(\"-s\")) { /* \u0422\u0438\u0445\u0438\u0439 \u0440\u0435\u0436\u0438\u043c */ }\n}\n</code></pre></p>"},{"location":"ru/Commands/syntax/#_3","title":"\u041d\u043e\u0442\u0430\u0446\u0438\u044f \u0441\u0438\u043d\u0442\u0430\u043a\u0441\u0438\u0441\u0430","text":"\u0428\u0430\u0431\u043b\u043e\u043d \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 <code>&lt;required&gt;</code> \u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 <code>[optional]</code> \u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u044b\u0439 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440 <code>-f(lag)</code> \u0424\u043b\u0430\u0433-\u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0442\u0435\u043b\u044c (\u043a\u043e\u0440./\u043f\u043e\u043b\u043d.)"},{"location":"ru/Commands/syntax/#_4","title":"\u0420\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u044b\u0435 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438","text":""},{"location":"ru/Commands/syntax/#_5","title":"\u041f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u0435\u043b\u044c\u0441\u043a\u0438\u0435 \u043f\u0430\u0440\u0441\u0435\u0440\u044b","text":"<pre><code>public static void AdvancedCommand(\n    CommandInvokeContext ctx,\n    [ArgumentParser(typeof(CommandParsers), nameof(ParseCustom))]\n    CustomType param\n)\n{\n    // \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u0430\u0441\u0442\u043e\u043c\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n}\n\npublic static ParseResult ParseCustom(ICommandSender sender, string input)\n{\n    // \u041b\u043e\u0433\u0438\u043a\u0430 \u043f\u0430\u0440\u0441\u0438\u043d\u0433\u0430\n    return ParseResult.Success(new CustomType(input));\n}\n</code></pre>"},{"location":"ru/Commands/syntax/#_6","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u0432\u0440\u0435\u043c\u0435\u043d\u043d\u044b\u0445 \u0438\u043d\u0442\u0435\u0440\u0432\u0430\u043b\u043e\u0432","text":"<pre><code>public static void TempBan(CommandInvokeContext ctx, string duration)\n{\n    int seconds = TextUtility.ParseToSeconds(\"1h30m\"); // = 5400\n    // \u0420\u0435\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0431\u0430\u043d\u0430\n}\n</code></pre>"},{"location":"ru/Commands/syntax/#_7","title":"\u041f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u043c\u044b\u0435 \u0444\u043e\u0440\u043c\u0430\u0442\u044b:","text":"<ul> <li><code>1d2h30m</code> \u2192 1 \u0434\u0435\u043d\u044c + 2 \u0447\u0430\u0441\u0430 + 30 \u043c\u0438\u043d\u0443\u0442</li> <li><code>3600s</code> \u2192 3600 \u0441\u0435\u043a\u0443\u043d\u0434</li> <li><code>2h</code> \u2192 7200 \u0441\u0435\u043a\u0443\u043d\u0434</li> </ul>"},{"location":"ru/Commands/types/#_1","title":"\u0422\u0438\u043f\u044b \u043a\u043e\u043c\u0430\u043d\u0434","text":"<p>\u041e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u044b \u0432 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u0438\u0438 <code>CommandType</code>: <pre><code>public enum CommandType\n{\n    /// &lt;summary&gt;\n    /// \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0432\u0441\u0435\u043c \u0441 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0449\u0438\u043c\u0438 \u043f\u0440\u0430\u0432\u0430\u043c\u0438.\n    /// &lt;/summary&gt;\n    Shared,\n\n    /// &lt;summary&gt;\n    /// \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043d\u0441\u043e\u043b\u044c \u0438\u043b\u0438 RCON.\n    /// &lt;/summary&gt;\n    Console,\n\n    /// &lt;summary&gt;\n    /// \u0414\u043e\u0441\u0442\u0443\u043f\u043d\u0430 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430.\n    /// &lt;/summary&gt;\n    Debug\n}\n</code></pre></p>"},{"location":"ru/Commands/types/#_2","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435","text":"\u0422\u0438\u043f \u0422\u0438\u043f\u0438\u0447\u043d\u044b\u0435 \u0441\u0446\u0435\u043d\u0430\u0440\u0438\u0438 <code>Shared</code> \u041a\u043e\u043c\u0430\u043d\u0434\u044b \u0434\u043b\u044f \u0438\u0433\u0440\u043e\u043a\u043e\u0432 <code>Console</code> \u0410\u0434\u043c\u0438\u043d\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435/\u0444\u043e\u043d\u043e\u0432\u044b\u0435 \u0437\u0430\u0434\u0430\u0447\u0438 <code>Debug</code> \u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442\u044b \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0438/\u0442\u0435\u0441\u0442\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u043e\u0442\u043b\u0430\u0434\u043e\u0447\u043d\u043e\u0439 \u043a\u043e\u043c\u0430\u043d\u0434\u044b: <pre><code>[ServerCommand(CommandType.Debug, \"devtool\", \"\u0418\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442 \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430\", null)]\npublic static void DevToolCommand(CommandInvokeContext ctx) { }\n</code></pre></p>"},{"location":"ru/Network/","title":"\u0412\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u0435 \u0441 \u0441\u0435\u0442\u044c\u044e","text":"<p>\u0412 Terraria \u043f\u0430\u043a\u0435\u0442\u044b \u0434\u0435\u043b\u044f\u0442\u0441\u044f \u043d\u0430 \u0434\u0432\u0430 \u0442\u0438\u043f\u0430: \u043e\u0431\u044b\u0447\u043d\u044b\u0439 \u043f\u0430\u043a\u0435\u0442 (\u0434\u0430\u043b\u0435\u0435 raw), \u043c\u043e\u0434\u0443\u043b\u0438 (\u0434\u0430\u043b\u0435\u0435 net-module).</p> <p>Amethyst \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u043f\u043e\u0432\u0435\u0434\u0435\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u043e\u0432: \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435/\u0438\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0435 raw-\u043f\u0430\u043a\u0435\u0442\u044b, \u0432\u0445\u043e\u0434\u044f\u0449\u0438\u0435 net-module.</p>"},{"location":"ru/Network/#raw-","title":"\u0412\u0445\u043e\u0434\u044f\u0449\u0438\u0435 raw-\u043f\u0430\u043a\u0435\u0442\u044b","text":"<p>\u0414\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f <code>NetworkManager.Binding.AddInPacket(...)</code>, \u043f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f:</p> <pre><code>NetworkManager.Binding.AddInPacket(PacketTypes.ItemOwner, OnItemOwner);\n\n// \u0438\u043b\u0438\n\nNetworkManager.Binding.AddInPacket(22, OnItemOwner);\n\nvoid OnItemOwner(in IncomingPacket packet, PacketHandleResult result)\n{   \n    int start = packet.Start; // \u043f\u043e\u0437\u0438\u0446\u0438\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u043f\u0430\u043a\u0435\u0442\u0430\n    int length = packet.Length; // \u0434\u043b\u0438\u043d\u0430 \u043f\u0430\u043a\u0435\u0442\u0430\n    byte senderIndex = packet.Sender; // \u0438\u043d\u0434\u0435\u043a\u0441 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f\n    NetPlayer player = packet.Player; // \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 NetPlayer \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f (\u0442\u043e\u0436\u0435 \u0441\u0430\u043c\u043e\u0435 \u0447\u0442\u043e \u0438 packet.Sender)\n\n    BinaryReader reader = packet.GetReader();\n\n    // \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043f\u0430\u043a\u0435\u0442\u0430 'ItemOwner':\n    short itemIndex = reader.ReadInt16(); // \u0438\u043d\u0434\u0435\u043a\u0441 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\n    byte targetPlayerIndex = reader.ReadByte(); // \u043d\u043e\u0432\u044b\u0439 \u0432\u043b\u0430\u0434\u0435\u043b\u0435\u0446 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\n\n    // ... \u043a\u0430\u043a\u043e\u0439 \u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0432\u0430\u0436\u043d\u044b\u0439 \u043a\u043e\u0434 \n\n    // \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430\n    // \u043f\u0440\u0438\u0447\u0438\u043d\u0430 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0438\u0442\u043e\u0432, \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n    result.Ignore(\"&lt;ignore reason&gt;\");\n}\n</code></pre>"},{"location":"ru/Network/#net-module-","title":"\u0412\u0445\u043e\u0434\u044f\u0449\u0438\u0435 net-module-\u043f\u0430\u043a\u0435\u0442\u044b","text":"<p>\u0414\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f <code>NetworkManager.Binding.AddInModule(...)</code>, \u043f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f:</p> <pre><code>NetworkManager.Binding.AddInModule(ModuleTypes.MapPing, OnMapPing);\n\n// \u0438\u043b\u0438\n\nNetworkManager.Binding.AddInModule(2, OnMapPing);\n\nvoid OnMapPing(in IncomingModule packet, PacketHandleResult result)\n{\n    BinaryReader reader = packet.GetReader();\n\n    // \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u043c\u043e\u0434\u0443\u043b\u044f `MapPing`:\n    // \u0442\u0430\u043a \u0436\u0435 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u043a:\n    // Vector2 position = reader.ReadVector2();\n    float x = reader.ReadSingle();\n    float y = reader.ReadSingle();\n\n    // ... \u043a\u0430\u043a\u043e\u0439 \u0442\u043e \u043e\u0447\u0435\u043d\u044c \u0432\u0430\u0436\u043d\u044b\u0439 \u043a\u043e\u0434 \n\n    // \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430\n    // \u043f\u0440\u0438\u0447\u0438\u043d\u0430 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0447\u0438\u0442\u043e\u0432, \u043d\u0435\u0432\u0435\u0440\u043d\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f\n    result.Ignore(\"&lt;ignore reason&gt;\");\n}\n</code></pre>"},{"location":"ru/Network/#raw-_1","title":"\u0418\u0441\u0445\u043e\u0434\u044f\u0449\u0438\u0435 raw-\u043f\u0430\u043a\u0435\u0442\u044b","text":"<p>\u0414\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f <code>NetworkManager.Binding.AddOutPacket(...)</code>, \u043f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f:</p> <p>\u0420\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u043c \u0434\u0435\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u043a\u043b\u0430\u0441\u0441\u0430 <code>Terraria.NetMessage</code> \u0438\u0437 <code>deps/TerrariaAPI.dll</code>, \u0434\u043b\u044f \u043f\u043e\u043b\u043d\u043e\u0433\u043e \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u044f \u043a\u0430\u0440\u0442\u0438\u043d\u044b.</p> <pre><code>NetworkManager.Binding.AddOutPacket(PacketTypes.ItemOwner, OnItemOwner);\n\n// \u0438\u043b\u0438\n\nNetworkManager.Binding.AddOutPacket(22, OnItemOwner);\n\nvoid OnItemOwner(in OutcomingModule packet, PacketHandleResult result)\n{\n    // \u043d\u0435 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 BinaryReader \u0438 \u043f\u0440\u043e\u0447\u0435\u0435, \u0442\u0430\u043a \u043a\u0430\u043a \u043e\u043d\u043e \u043d\u0435 \u0447\u0438\u0442\u0430\u0435\u0442 \u043f\u0430\u043a\u0435\u0442.\n\n    int remoteClient = packet.RemoteClient;\n    int ignoreClient = packet.IgnoreClient;\n    NetworkText? text = packet.Text;\n    int num1 = packet.Number1;\n    float num2 = packet.Number2;\n    float num3 = packet.Number3;\n    float num4 = packet.Number4;\n    int num5 = packet.Number5;\n    int num6 = packet.Number6;\n    int num7 = packet.Number7;\n\n    // \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430\n    // \u043f\u0440\u0438\u0447\u0438\u043d\u0430 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u044f \u043f\u0430\u043a\u0435\u0442\u0430 \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u043d\u0435\u043d\u0443\u0436\u043d\u0430\u044f \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0434\u0430\u043d\u043d\u044b\u0445\n    result.Ignore(\"&lt;ignore reason&gt;\");\n}\n</code></pre>"},{"location":"ru/Network/packets/","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043f\u0430\u043a\u0435\u0442\u043e\u0432","text":"<p><code>PacketWriter</code> - \u043a\u043b\u0430\u0441\u0441-\u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u043d\u043e\u0433\u043e \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u044f \u043f\u0430\u043a\u0435\u0442\u043e\u0432.</p> <p>\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:</p> <pre><code>// \u0441\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u0430\u043a\u0435\u0442\u0430\nbyte[] packet = new PacketWriter()\n    .SetType(5) // PacketTypes.PlayerSlot (\u043f\u0430\u043a\u0435\u0442 \u0434\u043b\u044f \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u043d\u0432\u0435\u043d\u0442\u0430\u0440\u044f)\n\n    .PackByte(1)        // \u0438\u043d\u0434\u0435\u043a\u0441 \u0438\u0433\u0440\u043e\u043a\u0430\n    .PackInt16(10)      // 11 \u0441\u043b\u043e\u0442 (\u0442.\u043a. 1 \u0441\u043b\u043e\u0442 \u0432 \u043f\u0440\u0438\u0432\u044b\u0447\u043d\u043e\u043c \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0438 \u0440\u0430\u0432\u0435\u043d 0 \u0441\u043b\u043e\u0442\u0443 \u0432 \u043a\u043e\u0434\u0435)\n    .PackInt16(9999)    // \u043a\u043e\u043b-\u0432\u043e \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\n    .PackByte(5)        // ID \u0437\u0430\u0447\u0430\u0440\u043e\u0432\u0430\u043d\u0438\u044f\n    .PackInt16(757)     // ID \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430\n\n    .BuildPacket(); // \u043a\u043e\u043d\u0432\u0435\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u043f\u0430\u043a\u0435\u0442 \u0432 \u0431\u0443\u0444\u0435\u0440 (byte[])\n\nNetPlayer player;\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u043a\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u044c\u043d\u043e \u043e\u0434\u043d\u043e\u043c\u0443 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u043c\u0443 \u0438\u0433\u0440\u043e\u043a\u0443\nplayer.Socket.SendPacket(packet);\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u043a\u0435\u0442 \u0432\u0441\u0435\u043c \u0438\u0433\u0440\u043e\u043a\u0430\u043c, \u043a\u0440\u043e\u043c\u0435 `player`\nPlayerUtilities.BroadcastPacket(packet, predicate =&gt; predicate.Index != player.Index);\n</code></pre>"},{"location":"ru/Permissions/","title":"\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b \u043f\u0440\u0430\u0432","text":"<p>Amethyst \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u043f\u043b\u0430\u0433\u0438\u043d\u0430\u043c \u0438 \u043c\u043e\u0434\u0443\u043b\u044f\u043c \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043f\u0440\u0430\u0432\u0430\u043c\u0438 \u0438\u0433\u0440\u043e\u043a\u043e\u0432 \u0447\u0435\u0440\u0435\u0437 \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u044b <code>IPermissionWorker&lt;T&gt;</code> \u0438 <code>PermissionsNode&lt;T&gt;</code>.</p> <p>\u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 <code>IPermissionable</code> - \u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u043e\u0431\u044a\u0435\u043a\u0442\u0430, <code>PermissionNode&lt;T&gt;</code> - \u0443\u0437\u0435\u043b, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0438 \u043f\u0440\u0430\u0432 \u043c\u0435\u0436\u0434\u0443 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u043c\u0438.</p> <p><code>IPermissionWorker&lt;T&gt;</code> - \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u0440\u0430\u0432 \u0434\u043b\u044f <code>IPermissionable</code></p>"},{"location":"ru/Permissions/#ipermissionable","title":"\u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 <code>IPermissionable</code>?","text":"<p><code>IPermissionable</code> - \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0443 \u0432\u0441\u0435\u0445 \u043e\u0431\u044a\u0435\u043a\u0442\u043e\u0432, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0434\u043e\u043b\u0436\u043d\u044b \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u043f\u043e \u0441\u0438\u0441\u0442\u0435\u043c\u0435 \u043f\u0440\u0430\u0432.</p> <p>\u042d\u0442\u043e\u043c\u0443 \u043f\u0440\u0438\u043c\u0435\u0440: <code>NetPlayer</code>, <code>ConsoleSender</code></p> <p>\u0420\u0430\u0441\u0441\u043c\u043e\u0442\u0440\u0438\u043c \u043a\u043b\u0430\u0441\u0441 <code>NetPlayer</code> \u0438 \u043a\u0430\u043a \u043e\u043d \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441 \u043f\u0440\u0430\u0432\u0430\u043c\u0438:</p> <pre><code>public sealed class NetPlayer : IPermissionable\n{\n    public bool HasPermission(string permission)\n        =&gt; IsCapable &amp;&amp; (IsRootGranted || AmethystSession.PlayerPermissions.HandleResult(p =&gt; p.HasPermission(this, permission)) == PermissionAccess.HasPermission);\n\n    public bool HasChestPermission(int x, int y)\n        =&gt; IsCapable &amp;&amp; (IsRootGranted || AmethystSession.PlayerPermissions.HandleResult(p =&gt; p.HasChestPermission(this, x, y)) == PermissionAccess.HasPermission);\n\n    public bool HasChestEditPermission(int x, int y)\n        =&gt; IsCapable &amp;&amp; (IsRootGranted || AmethystSession.PlayerPermissions.HandleResult(p =&gt; p.HasChestEditPermission(this, x, y)) == PermissionAccess.HasPermission);\n\n    public bool HasSignPermission(int x, int y)\n        =&gt; IsCapable &amp;&amp; (IsRootGranted || AmethystSession.PlayerPermissions.HandleResult(p =&gt; p.HasSignPermission(this, x, y)) == PermissionAccess.HasPermission);\n\n    public bool HasSignEditPermission(int x, int y)\n        =&gt; IsCapable &amp;&amp; (IsRootGranted || AmethystSession.PlayerPermissions.HandleResult(p =&gt; p.HasSignEditPermission(this, x, y)) == PermissionAccess.HasPermission);\n\n    public bool HasTEPermission(int x, int y)\n        =&gt; IsCapable &amp;&amp; (IsRootGranted || AmethystSession.PlayerPermissions.HandleResult(p =&gt; p.HasTEPermission(this, x, y)) == PermissionAccess.HasPermission);\n\n    public bool HasTilePermission(int x, int y, int? width = null, int? height = null)\n        =&gt; IsCapable &amp;&amp; (IsRootGranted || AmethystSession.PlayerPermissions.HandleResult(p =&gt; p.HasTilePermission(this, x, y, width, height)) == PermissionAccess.HasPermission);\n}\n</code></pre> <p>\u0418\u0433\u0440\u043e\u043a \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u0432\u0441\u0435\u043f\u0440\u0430\u0432\u043d\u044b\u043c \u043f\u0440\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u043c <code>IsRootGranted</code> (\u043a\u043e\u043c\u0430\u043d\u0434\u0430 <code>/grantroot</code> \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u043e\u0442\u043b\u0430\u0434\u043a\u0438).</p> <p>\u041d\u043e \u043e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0447\u0430\u0441\u0442\u044c \u043b\u043e\u0436\u0438\u0442\u0441\u044f \u043d\u0430 <code>PermissionNode&lt;NetPlayer&gt;</code>, \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 <code>AmethystSession.PlayerPermissions</code>.</p> <p>\u0427\u0430\u0441\u0442\u044c \u0438\u0441\u0445\u043e\u0434\u043d\u043e\u0433\u043e \u043a\u043e\u0434\u0430 <code>PermissionNode&lt;T&gt;</code>:</p> <pre><code>public class PermissionsNode&lt;T&gt; where T : IPermissionable\n{\n    // \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u044f \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0439 \u043a \u043f\u0440\u0430\u0432\u0430\u043c \u0438\u0433\u0440\u043e\u043a\u0430\n    internal List&lt;IPermissionWorker&lt;T&gt;&gt; Workers = new List&lt;IPermissionWorker&lt;T&gt;&gt;();\n\n    // \u043c\u0435\u0442\u043e\u0434 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435, \u0438\u043c\u0435\u0435\u0442 \u043b\u0438 \u0438\u0433\u0440\u043e\u043a \u043f\u0440\u0430\u0432\u043e, \u0441\u0440\u0430\u0432\u043d\u0438\u0432\u0430\u044f \u0435\u0433\u043e \u043c\u0435\u0436\u0434\u0443 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f\u043c\u0438 IPermissionWorker&lt;T&gt;\n    internal PermissionAccess HandleResult(Func&lt;IPermissionWorker&lt;T&gt;, PermissionAccess&gt; invokeFunc)\n    {\n        PermissionAccess access = PermissionAccess.None;\n        foreach (var worker in Workers)\n        {\n            var result = invokeFunc(worker);\n            if (result == PermissionAccess.HasPermission)\n                access = result;\n\n            if (result == PermissionAccess.Blocked)\n                return result;\n        }\n\n        return access;\n    }\n}\n</code></pre>"},{"location":"ru/Permissions/handling/","title":"\u041e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0430 \u043f\u0440\u0430\u0432","text":""},{"location":"ru/Permissions/handling/#permissionaccess","title":"\u0427\u0442\u043e \u0442\u0430\u043a\u043e\u0435 PermissionAccess?","text":"<p><code>PermissionAccess</code> - \u044d\u0442\u043e <code>enum</code>, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0434\u043b\u044f \u043e\u0431\u0440\u0430\u0431\u043e\u0442\u043a\u0438 \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u043e\u0432.</p> <pre><code>public enum PermissionAccess\n{\n    // \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u0430\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\n    // \u0432 \u043c\u043e\u0434\u0443\u043b\u0435 Groups \u044d\u0442\u043e \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442\u0441\u044f, \u043a\u043e\u0433\u0434\u0430 \u0433\u0440\u0443\u043f\u043f\u0430 \u0438\u0433\u0440\u043e\u043a\u0430 \u043d\u0435 \u0438\u043c\u0435\u0435\u0442 \u043f\u0440\u0430\u0432\u043e.\n    None,\n\n    // \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442 (\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c NetPlayer) \u043c\u043e\u0436\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u043f\u0440\u0430\u0432\u043e\n    HasPermission,\n\n    // \u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043e\u0431\u044a\u0435\u043a\u0442 (\u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c NetPlayer) \u043a\u0440\u0438\u0442\u0438\u0447\u0435\u0441\u043a\u0438 \u043d\u0435 \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0435 \u043f\u0440\u0430\u0432\u043e\n    // \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u043e \u0440\u0435\u0434\u043a\u043e, \u0442\u0430\u043a \u043a\u0430\u043a \u0447\u0440\u0435\u0437\u043c\u0435\u0440\u043d\u043e\u0435 \u0443\u043f\u043e\u0442\u0440\u0435\u0431\u043b\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u0440\u0435\u0437\u0443\u043b\u044c\u0442\u0430\u0442\u0430, \u043c\u043e\u0436\u0435\u0442 \u0441\u043b\u043e\u043c\u0430\u0442\u044c \u0434\u0440\u0443\u0433\u0438\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u044b \u0438 \u043c\u043e\u0434\u0443\u043b\u0438 \n    Blocked\n}\n</code></pre> <p>\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c, \u043d\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u0440\u0430\u0432 \u0434\u043b\u044f <code>NetPlayer</code>.</p> <p>\u041d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u0440\u0430\u0432 \u0434\u043b\u044f \u043d\u0435\u0433\u043e:</p> <pre><code>public sealed class MyPermissionsWorker : IPermissionWorker&lt;NetPlayer&gt;\n{\n    public static List&lt;string&gt; DefaultPermissions = new List&lt;string&gt;()\n    {\n        \"perm1\", \"perm2\", \"test\"\n    };\n\n    public PermissionAccess HasPermission(NetPlayer target, string permission)\n    {\n        // \u0435\u0441\u043b\u0438 \u043f\u0440\u0430\u0432\u043e \"MyPermission\", \u0442\u043e \u044d\u0442\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u0435\u0433\u043e\n        // \u0434\u0440\u0443\u0433\u0438\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u043d\u0435 \u043c\u043e\u0433\u0443\u0442 \u043d\u0430 \u044d\u0442\u043e \u043f\u043e\u0432\u043b\u0438\u044f\u0442\u044c, \u0442\u0430\u043a \u043a\u0430\u043a \u044d\u0442\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u043e\u043b\u043d\u043e\u0441\u0442\u044c\u044e \u0435\u0433\u043e \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043b\u043e\n        if (permission == \"\u043f\u0440\u0430\u0432\u043e_\u043a\u043e\u0442\u043e\u0440\u043e\u0435_\u0438\u0433\u0440\u043e\u043a_\u0444\u0438\u043a\u0441\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e_\u043d\u0435_\u0434\u043e\u043b\u0436\u0435\u043d_\u0438\u043c\u0435\u0442\u044c\")\n            return PermissionAccess.Blocked;\n\n        // \u0435\u0441\u043b\u0438 \u0438\u0433\u0440\u043e\u043a \u0438\u043c\u0435\u0435\u0442 \u043f\u0440\u0430\u0432\u043e, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043f\u0435\u0440\u0435\u0447\u0438\u0441\u043b\u0435\u043d\u043e \u0432 DefaultPermissions, \u0442\u043e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 PermissionAccess.HasPermission.\n        if (DefaultPermissions.Contains(permission))\n            return PermissionAccess.HasPermission;\n\n        // \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443, \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u0430\u0432\u043e \u043d\u0435 \u0441\u043e\u0448\u043b\u043e\u0441\u044c \u043d\u0438 \u0441 \u0447\u0435\u043c.\n        return PermissionAccess.None;\n    }\n\n    public PermissionAccess HasChestPermission(NetPlayer target, int x, int y)\n    {\n        // \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\n        return PermissionAccess.None;\n    }\n\n    public PermissionAccess HasChestEditPermission(NetPlayer target, int x, int y)\n    {\n        // \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\n        return PermissionAccess.None;\n    }\n\n    public PermissionAccess HasSignPermission(NetPlayer target, int x, int y)\n    {\n        // \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\n        return PermissionAccess.None;\n    }\n\n    public PermissionAccess HasSignEditPermission(NetPlayer target, int x, int y)\n    {\n        // \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\n        return PermissionAccess.None;\n    }\n\n    public PermissionAccess HasTEPermission(NetPlayer target, int x, int y)\n    {\n        // \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\n        return PermissionAccess.None;\n    }\n\n    public PermissionAccess HasTilePermission(NetPlayer target, int x, int y, int? width = null, int? height = null)\n    {\n        // \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u0435\u0442 \u043f\u0440\u043e\u0432\u0435\u0440\u043a\u0443\n        return PermissionAccess.None;\n    }\n}\n</code></pre> <p>\u0422\u0435\u043f\u0435\u0440\u044c, \u0447\u0442\u043e \u0431\u044b \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u043b\u043e, \u043d\u0443\u0436\u043d\u043e \u0435\u0433\u043e \u0437\u0430\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0432 \u0443\u0437\u043b\u0435 \u043f\u0440\u0430\u0432 (<code>PermissionNode&lt;T&gt;</code>).</p> <p>\u0412 \u0441\u043b\u0443\u0447\u0430\u0435 \u0441 <code>NetPlayer</code> - \u044d\u0442\u043e <code>AmethystSession.PlayerPermissions</code>.</p> <pre><code>IPermissionWorker&lt;NetPlayer&gt; worker = new MyPermissionsWorker();\n\n// \u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f\nAmethystSession.PlayerPermissions.Register(worker);\n\n// \u0434\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0430\u0446\u0438\u044f\nAmethystSession.PlayerPermissions.Unregister(worker);\n</code></pre> <p>\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u0435\u0440\u0435\u0433\u0438\u0441\u0442\u0440\u0438\u0440\u0443\u0439\u0442\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u043f\u0440\u0430\u0432, \u0435\u0441\u043b\u0438 \u043e\u043d\u043e \u0438\u0437 \u043f\u043b\u0430\u0433\u0438\u043d\u0430.</p>"},{"location":"ru/Players/","title":"\u0418\u0433\u0440\u043e\u043a\u0438","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441 \u0438\u0433\u0440\u043e\u043a\u0430 - <code>NetPlayer</code></p> <p>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0438\u0433\u0440\u043e\u043a\u0430\u043c\u0438 - <code>Amethyst.Players.PlayerManager</code>.</p> <p>\u0421\u0430\u043c\u043e\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e - Tracker</p> <p><code>PlayerTracker</code> - \u043a\u043b\u0430\u0441\u0441 (\u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e <code>PlayerManager.Tracker</code>), \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0445\u0440\u0430\u043d\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u044b <code>NetPlayer</code>.</p> <p>\u041f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0438\u0433\u0440\u043e\u043a\u0430 \u043c\u043e\u0436\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0442\u043e\u0440:</p> <pre><code>int index = 1;\nNetPlayer player = PlayerManager.Tracker[index];\n</code></pre>"},{"location":"ru/Players/#netplayer","title":"\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430 NetPlayer","text":"<pre><code>// \u0421\u0435\u0442\u0435\u0432\u043e\u0439 ID \u0438\u0433\u0440\u043e\u043a\u0430\npublic int Index { get; }\n\n// \u041d\u0438\u043a\u043d\u0435\u0439\u043c \u0438\u0433\u0440\u043e\u043a\u0430\npublic string Name =&gt; _playerName;\n\n// IP-\u0430\u0434\u0440\u0435\u0441 \u0438\u0433\u0440\u043e\u043a\u0430\npublic string IP { get; set; }\n\n// UUID \u0438\u0433\u0440\u043e\u043a\u0430\npublic string UUID { get; set; }\n\n// \u0422\u0438\u043f \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u0435\u043b\u044f \u043a\u043e\u043c\u0430\u043d\u0434. \u0412 \u0434\u0430\u043d\u043d\u043e\u043c \u0441\u043b\u0443\u0447\u0430\u0435 - \u0440\u0435\u0430\u043b\u044c\u043d\u044b\u0439 \u0438\u0433\u0440\u043e\u043a (SenderType.RealPlayer)\npublic SenderType Type =&gt; SenderType.RealPlayer;\n\n// \u0421\u0441\u044b\u043b\u043a\u0430 \u043d\u0430 Terraria.Player\npublic Player TPlayer =&gt; Main.player[Index];\n\n// \u0418\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441 \u0434\u043b\u044f \u0441\u0435\u0442\u0435\u0432\u043e\u0433\u043e \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0438\u0433\u0440\u043e\u043a\u043e\u043c (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043f\u0430\u043a\u0435\u0442\u043e\u0432)\npublic INetworkClient Socket =&gt; NetworkManager.Provider.GetClient(Index)!;\n\n// \u041e\u0431\u0435\u0440\u0442\u043a\u0430 SSC-\u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0430 \u0434\u043b\u044f \u0438\u0433\u0440\u043e\u043a\u0430\npublic ICharacterWrapper? Character { get; internal set; }\n\n// \u0423\u0442\u0438\u043b\u0438\u0442\u044b \u0434\u043b\u044f \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u0433\u0440\u043e\u043a\u043e\u043c\npublic LocalPlayerUtils Utils { get; }\n\n// \u041e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0438\u0433\u0440\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443\npublic bool IsActive =&gt; Socket.IsConnected &amp;&amp; !Socket.IsFrozen;\n\n// \u041e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0438\u0433\u0440\u043e\u043a \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d \u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0443 \u0438 \u0443\u0436\u0435 \u0441\u043f\u043e\u0441\u043e\u0431\u0435\u043d \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u0438\u044f \u0441 \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u043c:\n// \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u043c\u0438\u0440\u043e\u043c, \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0438 \u043f\u0440\u043e\u0447\u0435\u0435\npublic bool IsCapable =&gt; IsActive &amp;&amp; UUID != \"\" &amp;&amp; Name != \"\" &amp;&amp; _wasSpawned;\n\n// \u041e\u0431\u043e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0443 \u0438\u0433\u0440\u043e\u043a\u0430 \u0435\u0441\u0442\u044c \u0430\u0431\u0441\u043e\u043b\u044e\u0442\u043d\u043e \u0432\u0441\u0435 \u043f\u0440\u0430\u0432\u0430\n// \u042d\u0442\u043e\u0442 \u0440\u0435\u0436\u0438\u043c \u0432\u043a\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0447\u0435\u0440\u0435\u0437 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 /granroot \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u043e\u0442\u043b\u0430\u0434\u043a\u0438 \u0438\u043b\u0438 \u0441\u0442\u043e\u0440\u043e\u043d\u043d\u0438\u043c\u0438 \u043f\u043b\u0430\u0433\u0438\u043d\u0430\u043c\u0438\npublic bool IsRootGranted { get; set; }\n\n// \u042f\u0437\u044b\u043a \u0438\u0433\u0440\u043e\u043a\u0430. \u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e - \u0442\u043e\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0432\u044b \u0432\u044b\u0431\u0440\u0430\u043b\u0438 \u0432 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u0430\u0445 \u0437\u0430\u043f\u0443\u0441\u043a\u0430\n// ru-RU, en-US \u043b\u0438\u0431\u043e \u0434\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u0430\u043c\u0438\npublic string Language { get; set; }\n</code></pre>"},{"location":"ru/Players/#terrariaplayer","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 Terraria.Player","text":"<p><code>Player</code> - \u043a\u043b\u0430\u0441\u0441 \u0438\u0433\u0440\u043e\u043a\u0430 \u0432 Terraria. \u041d\u0435 \u043f\u0443\u0442\u0430\u0439\u0442\u0435 \u0441 <code>NetPlayer</code> \u0438\u0437 \u044f\u0434\u0440\u0430.</p> <pre><code>using Terraria;\n\nNetPlayer player;\n\nPlayer terrariaPlayer = player.TPlayer;\nterrariaPlayer.statLife = 100;\n</code></pre>"},{"location":"ru/Players/#_2","title":"\u0418\u0442\u0435\u0440\u0430\u0446\u0438\u044f","text":"<p><code>PlayerTracker</code> \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442 <code>IEnumerable&lt;NetPlayer&gt;</code>, \u0442\u0430\u043a \u0447\u0442\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c <code>foreach</code>:</p> <pre><code>foreach (NetPlayer player in PlayerManager.Tracker)\n{\n    Console.WriteLine($\"Found player {player.Name} in Tracker\");\n}\n</code></pre> <p>\u0422\u0430\u043a\u0436\u0435 \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u0434\u0440\u0443\u0433\u0438\u0435 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0438 \u0432\u043d\u0443\u0442\u0440\u0438 \u044d\u0442\u043e\u0433\u043e \u043a\u043b\u0430\u0441\u0441\u0430, \u0442\u0430\u043a\u0438\u0435 \u043a\u0430\u043a <code>Capable</code>, <code>Alive</code> \u0438 <code>Dead</code>:</p> <pre><code>foreach (NetPlayer player in PlayerManager.Tracker.Capable)\n    Console.WriteLine($\"Found capable player: {player.Name}\");\n\nforeach (NetPlayer player in PlayerManager.Tracker.Alive)\n    Console.WriteLine($\"Found alive player: {player.Name}\");\n\nforeach (NetPlayer player in PlayerManager.Tracker.Dead)\n    Console.WriteLine($\"Found dead player: {player.Name}\");\n</code></pre>"},{"location":"ru/Players/#id","title":"\u041f\u043e\u0438\u0441\u043a \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0438\u043b\u0438 ID","text":"<p>\u0412 <code>PlayerTracker</code> \u0435\u0441\u0442\u044c \u043c\u0435\u0442\u043e\u0434 <code>NetPlayer? FindPlayer(string nameOrIndex)</code>.</p> <p>\u0415\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0442\u0430\u043a:</p> <pre><code>NetPlayer? player = PlayerManager.Tracker.FindPlayer(\"vxlhat\") ?? \n                    PlayerManager.Tracker.FindPlayer(\"VXL\") ?? \n                    PlayerManager.Tracker.FindPlayer(\"vxlh\") ?? \n                    PlayerManager.Tracker.FindPlayer(\"1\"); // ID \u0438\u0433\u0440\u043e\u043a\u0430. \u041d\u043e \u043b\u0443\u0447\u0448\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 PlayerManager.Tracker[1];\n\nif (player != null)\n    Console.WriteLine(\"vxlhat \u043d\u0430\u0439\u0434\u0435\u043d\");\n</code></pre>"},{"location":"ru/Players/ext/","title":"\u0414\u043e\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f","text":"<p>\u041a\u043b\u0430\u0441\u0441 <code>NetPlayer</code> \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0442\u044c \u0435\u0433\u043e, \u0441 \u043f\u043e\u043c\u043e\u0449\u044c\u044e \u0438\u043d\u0442\u0435\u0440\u0444\u0435\u0439\u0441\u043e\u0432 <code>IPlayerExtension</code></p> <p>\u0427\u0442\u043e\u0431\u044b \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0438\u0433\u0440\u043e\u043a\u0443, \u043d\u0443\u0436\u043d\u043e \u0443\u043d\u0430\u0441\u043b\u0435\u0434\u043e\u0432\u0430\u0442\u044c \u0434\u0432\u0430 \u043a\u043b\u0430\u0441\u0441\u0430: <code>IPlayerExtension</code> \u0438 <code>IPlayerExtensionBuilder&lt;T&gt;</code> </p> <p>\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440, \u0438\u043c\u043f\u043b\u0435\u043c\u0435\u043d\u0442\u0430\u0446\u0438\u044f \u0434\u043b\u044f <code>IPlayerExtension</code> \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a:</p> <pre><code>public sealed class MyPlayerExtension : IPlayerExtension\n{\n    internal MyPlayerExtension(NetPlayer plr)\n        =&gt; Player = plr;\n\n    public NetPlayer Player { get; }\n\n    // \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u043f\u043e\u043b\u044f\n    public bool Field1; \n    public int Field2;\n\n    public void Load()\n    {\n        // \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0438\u0433\u0440\u043e\u043a\u0430.\n\n        AmethystLog.Main.Info(\"MyPlayerExtension\", $\"MyPlayerExtension was loaded for {Player.Name}!\");\n    }\n\n    public void Unload()\n    {\n        // \u0414\u0435\u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f \u0434\u043b\u044f \u0438\u0433\u0440\u043e\u043a\u0430.\n\n        AmethystLog.Main.Error(\"MyPlayerExtension\", $\"MyPlayerExtension was unloaded for {Player.Name}!\");\n    }\n}\n</code></pre> <p>\u0421\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0435\u043d\u043d\u043e, \u0434\u043b\u044f <code>IPlayerExtensionBuilder&lt;T&gt;</code>:</p> <pre><code>public sealed class MyExtensionBuilder : IPlayerExtensionBuilder&lt;MyPlayerExtension&gt;\n{\n    public void Initialize()\n    {\n        // \u0418\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f.\n\n        AmethystLog.Main.Info(\"MyPlayerExtension\", $\"MyExtensionBuilder for MyPlayerExtension was initialized!\");\n    }\n\n    public MyPlayerExtension Build(NetPlayer player)\n        =&gt; new MyPlayerExtension(player);\n}\n</code></pre> <p>\u0421 \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u043e\u0439 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0439 \u0432\u0441\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u043d\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u043d\u0443\u0436\u043d\u043e \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435:</p> <pre><code>public sealed class MyPlugin : PluginInstance\n{\n    public override string Name =&gt; \"MyPlugin\";\n\n    public override Version Version =&gt; new Version(1, 0);\n\n    protected override void Load()\n    {\n        PlayerExtensions.RegisterBuilder&lt;MyPlayerExtension&gt;(new MyExtensionBuilder());\n    }\n\n    protected override void Unload()\n    {\n        PlayerExtensions.UnregisterBuilder&lt;MyPlayerExtension&gt;();\n    }\n}\n</code></pre>"},{"location":"ru/Players/ext/#iplayerextension-netplayer","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440\u0430 IPlayerExtension \u043e\u0442 NetPlayer.","text":"<p>\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e, \u043a\u0430\u043a \u0432\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u043b\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u044f, \u0435\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0432 <code>NetPlayer</code></p> <p>\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c:</p> <pre><code>NetPlayer player;\nMyPlayerExtension? ext = player.GetExtension&lt;MyPlayerExtension&gt;();\n\n// \u0435\u0441\u043b\u0438 ext \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f null, \u0437\u043d\u0430\u0447\u0438\u0442 \u0432\u044b \u043d\u0438\u0447\u0435\u0433\u043e \u043d\u0435 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u043b\u0438.\n\nif (ext == null)\n    AmethystLog.Main.Error(\"MyPlayerExtension\", $\"Me when amogus is sus!\");\nelse\n    AmethystLog.Main.Info(\"MyPlayerExtension\", $\"its not null omg\");\n</code></pre> <p>\u0422\u0430\u043a\u0436\u0435 \u0435\u0433\u043e \u043c\u043e\u0436\u043d\u043e \u0432\u044b\u0433\u0440\u0443\u0436\u0430\u0442\u044c \u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0442\u044c (\u0432 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u043d\u0435 \u043d\u0443\u0436\u043d\u043e):</p> <pre><code>NetPlayer player;\n\nplayer.UnloadExtension&lt;MyPlayerExtension&gt;();\n\nplayer.LoadExtension&lt;MyPlayerExtension&gt;();\n</code></pre>"},{"location":"ru/Players/netplayer_utils/","title":"\u0423\u0442\u0438\u043b\u0438\u0442\u044b \u0432 NetPlayer.Utils","text":""},{"location":"ru/Players/netplayer_utils/#_1","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430","text":"<pre><code>NetPlayer player;\n\nint tileX = player.Utils.TileX; // X \u0442\u0430\u0439\u043b\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0441\u0442\u043e\u0438\u0442 \u0438\u0433\u0440\u043e\u043a \nint tileY = player.Utils.TileY; // Y \u0442\u0430\u0439\u043b\u0430, \u0432 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0441\u0442\u043e\u0438\u0442 \u0438\u0433\u0440\u043e\u043a \n\nfloat posX = player.Utils.PosX; // X \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0438\u0433\u0440\u043e\u043a\u0430\nfloat posY = player.Utils.PosY; // Y \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0438\u0433\u0440\u043e\u043a\u0430\n\nItem terrariaItem = player.Utils.HeldItem; // \u043f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043f\u0440\u0435\u0434\u043c\u0435\u0442\u0430 \u0432 \u0440\u0443\u043a\u0435 \u0443 \u0438\u0433\u0440\u043e\u043a\u0430.\n\nbool inPvP = player.Utils.InPvP; // \u0432\u043a\u043b\u044e\u0447\u0438\u043b \u043b\u0438 \u0438\u0433\u0440\u043e\u043a \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 PvP\n\nbool hasBuff = player.Utils.HasBuff(Terraria.ID.BuffID.ObsidianSkin) // \u0432\u043e\u0437\u0440\u0430\u0449\u0430\u0435\u0442 true, \u0435\u0441\u043b\u0438 \u0438\u0433\u0440\u043e\u043a \u0438\u043c\u0435\u0435\u0442 \u0431\u0430\u0444\u0444 \u043e\u0431\u0441\u0438\u0434\u0438\u0430\u043d\u043e\u0432\u043e\u0439 \u043a\u043e\u0436\u0438 (\u0434\u0430, \u044d\u0442\u043e \u043d\u0435 \u043e\u0442\u043d\u043e\u0441\u0438\u0442\u0441\u044f \u043a \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430\u043c)\n</code></pre>"},{"location":"ru/Players/netplayer_utils/#_2","title":"\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u043c\u0430\u043b\u0435\u043d\u044c\u043a\u043e\u0439 \u0437\u043e\u043d\u044b \u0442\u0430\u0439\u043b\u043e\u0432","text":"<p>CenteredSquare (\u043a\u0443\u0431 \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435\u043c, \u0433\u0434\u0435 XY \u044d\u0442\u043e \u0446\u0435\u043d\u0442\u0440):</p> <pre><code>NetPlayer player;\n\nplayer.Utils.SendTileRectangle(x: 100, y: 200, size: 4);\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442 \u0431\u043b\u043e\u043a\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:\n// ----------\n// ----------\n// ----XY----\n// ----------\n// ----------\n</code></pre> <p>Rectangle:</p> <pre><code>player.Utils.SendTileRectangle(x: 100, y: 200, width: 10, height: 4);\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442 \u0431\u043b\u043e\u043a\u0438 \u043f\u0440\u0438\u043c\u0435\u0440\u043d\u043e \u0442\u0430\u043a\u0438\u043c \u043e\u0431\u0440\u0430\u0437\u043e\u043c:\n// XY------------------\n// --------------------\n// --------------------\n// --------------------\n</code></pre>"},{"location":"ru/Players/netplayer_utils/#_3","title":"\u041e\u0442\u043f\u0440\u0430\u0432\u043a\u0430 \u0431\u043e\u043b\u044c\u0448\u043e\u0439 \u0437\u043e\u043d\u044b \u0442\u0430\u0439\u043b\u043e\u0432 (\u0447\u0430\u043d\u043a\u0438/\u0441\u0435\u043a\u0446\u0438\u0438)","text":"<p>Terraria \u0434\u0435\u043b\u0438\u0442 \u043c\u0438\u0440 \u043d\u0430 \u0441\u0435\u043a\u0446\u0438\u0438 (\u0442\u0430\u043a\u0436\u0435 \u043a\u0430\u043a \u0438 Minecraft \u043d\u0430 \u0447\u0430\u043d\u043a\u0438), \u043e\u0434\u043d\u0430 \u0441\u0435\u043a\u0446\u0438\u044f \u0441\u043e\u0434\u0435\u0440\u0436\u0438\u0442 \u0432 \u0441\u0435\u0431\u0435 200 \u0431\u043b\u043e\u043a\u043e\u0432 \u0432 \u0448\u0438\u0440\u0438\u043d\u0443 \u0438 150 \u0432 \u0432\u044b\u0441\u043e\u0442\u0443.</p> <p>\u0414\u043b\u044f \u043f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u044f \u043f\u043e\u0437\u0438\u0446\u0438\u0438 \u0441\u0435\u043a\u0446\u0438\u0438 \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441 <code>Netplay</code>:</p> <pre><code>int tileX = 2000;\nint tileY = 1500;\n\nint sectionX = Netplay.GetSectionX(tileX);\nint sectionY = Netplay.GetSectionY(tileY);\n</code></pre> <p>\u041a\u043e\u0434 \u043e\u0442\u043f\u0440\u0430\u0432\u043a\u0438 \u0441\u0435\u043a\u0446\u0438\u0439:</p> <pre><code>NetPlayer player;\n\n// \u0440\u0430\u0441\u0441\u0447\u0438\u0442\u044b\u0432\u0430\u0435\u0442 \u043a\u0430\u043a\u0438\u0435 \u0441\u0435\u043a\u0446\u0438\u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442\u044c \u0441 XY 1130:130 \u043f\u043e XY 1643:654 \n// \u0438 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u0445 \u0438\u0433\u0440\u043e\u043a\u0443\nplayer.SendMassTiles(1130, 130, 1643, 654);\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u043a\u0446\u0438\u044e \u0438\u0433\u0440\u043e\u043a\u0443\nplayer.SendSection(Netplay.GetSectionX(3453), Netplay.GetSectionY(546));\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u0435\u043a\u0446\u0438\u044e \u0438\u0433\u0440\u043e\u043a\u0443, \u0435\u0441\u043b\u0438 \u0438\u0433\u0440\u043e\u043a \u0434\u043e \u044d\u0442\u043e\u0433\u043e \u043d\u0435 \u043f\u043e\u043b\u0443\u0447\u0430\u043b \u0435\u0435\nplayer.RequestSendSection(Netplay.GetSectionX(3453), Netplay.GetSectionY(546));\n</code></pre>"},{"location":"ru/Players/netplayer_utils/#-","title":"\u0421\u0442\u0430\u0442\u0443\u0441-\u0431\u0430\u0440","text":"<p>\u041d\u0430\u0432\u0435\u0440\u043d\u044f\u043a\u0430 \u0432\u044b \u0432\u0438\u0434\u0435\u043b\u0438 \u043d\u0430 Terraria Realms \u0438\u043b\u0438 Penguin Games \u0442\u0435\u043a\u0441\u0442 \u0441\u043f\u0440\u0430\u0432\u0430 \u043f\u043e\u0434 \u043c\u0438\u043d\u0438-\u043a\u0430\u0440\u0442\u043e\u0439. \u041c\u044b \u044d\u0442\u043e \u043d\u0430\u0437\u044b\u0432\u0430\u0435\u043c \u0441\u0442\u0430\u0442\u0443\u0441-\u0431\u0430\u0440\u043e\u043c.</p> <p>\u0412\u043e\u0442 \u043a\u0430\u043a \u0435\u0433\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c:</p> <pre><code>NetPlayer player;\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442 \u0438\u0433\u0440\u043e\u043a\u0443 \u0442\u0435\u043a\u0441\u0442 \u0441\u0442\u0430\u0442\u0443\u0441-\u0431\u0430\u0440\u0430\n// \u0442\u0435\u043a\u0441\u0442 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434 \u043c\u0438\u043d\u0438-\u043a\u0430\u0440\u0442\u043e\u0439, \u0442.\u043a. \u0437\u0434\u0435\u0441\u044c padding = true\nplayer.SendStatusText(\"My text under minimap\", padding: true);\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u0438\u0442 \u0438\u0433\u0440\u043e\u043a\u0443 \u0442\u0435\u043a\u0441\u0442 \u0441\u0442\u0430\u0442\u0443\u0441-\u0431\u0430\u0440\u0430\n// \u0442\u0435\u043a\u0441\u0442 \u0431\u0443\u0434\u0435\u0442 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f \u043f\u043e\u0434 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e\u043c \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f, \u0442.\u043a. \u0437\u0434\u0435\u0441\u044c padding = false\nplayer.SendStatusText(\"My text under healthbar\", padding: false);\n</code></pre>"},{"location":"ru/Players/netplayer_utils/#_4","title":"\u0422\u0435\u043b\u0435\u043f\u043e\u0440\u0442\u0430\u0446\u0438\u044f","text":"<pre><code>NetPlayer player;\n\n// \u0442\u0435\u043b\u0435\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0438\u0433\u0440\u043e\u043a\u0430 \u043f\u043e \u0442\u0430\u0439\u043b-\u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0435 100:500\nplayer.TeleportTile(100, 500);\n\n// \u0442\u0435\u043b\u0435\u043f\u043e\u0440\u0442\u0438\u0440\u0443\u0435\u0442 \u0438\u0433\u0440\u043e\u043a\u0430 \u043f\u043e \u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0435 3200f:1600f (200:100 \u043f\u043e \u0442\u0430\u0439\u043b-\u043a\u043e\u043e\u0440\u0434\u0438\u043d\u0430\u0442\u0435)\nplayer.Teleport(3200f, 1600f);\n</code></pre>"},{"location":"ru/Players/netplayer_utils/#_5","title":"\u041f\u0440\u043e\u0447\u0435\u0435","text":"<pre><code>NetPlayer player;\n\n// \u0432\u044b\u0434\u0430\u0435\u0442 \u0438\u0433\u0440\u043e\u043a\u0443 1x '\u041a\u043b\u0438\u043d\u043e\u043a \u0417\u0435\u043c\u043b\u0438'\nplayer.GiveItem(Terraria.ID.ItemID.TerraBlade, 1, 0);\n\n// \u0443\u0434\u0430\u0440\u044f\u0435\u0442 \u0438\u0433\u0440\u043e\u043a\u0430 \u043d\u0430 300 \u0435\u0434\u0438\u043d\u0438\u0446.\n// \u0435\u0441\u043b\u0438 \u0438\u0433\u0440\u043e\u043a \u0443\u043c\u0440\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e, \u0442\u043e \u0432 \u0447\u0430\u0442\u0435 \n// \u0432\u044b\u0441\u0432\u0435\u0442\u0438\u0442\u0441\u044f \u043f\u0440\u0438\u0447\u0438\u043d\u0430 \u0441\u043c\u0435\u0440\u0442\u0438 \"Custom death reason text\"\nplayer.Hurt(300, \"Custom death reason text\");\n\n// \u0435\u0441\u043b\u0438 \u0438\u0433\u0440\u043e\u043a \u0443\u043c\u0440\u0435\u0442 \u043f\u043e\u0441\u043b\u0435 \u044d\u0442\u043e\u0433\u043e, \u0442\u043e \u0432 \u0447\u0430\u0442\u0435 \n// \u0432\u044b\u0441\u0432\u0435\u0442\u0438\u0442\u0441\u044f \u043f\u0440\u0438\u0447\u0438\u043d\u0430 \u0441\u043c\u0435\u0440\u0442\u0438 \"&lt;\u0418\u0433\u0440\u043e\u043a&gt; was died.\"\nplayer.Hurt(300, PlayerDeathReason.LegacyDefault());\n\n\n// \u0443\u0431\u0438\u0432\u0430\u0435\u0442 \u0438\u0433\u0440\u043e\u043a\u0430, \u0432 \u0447\u0430\u0442\u0435 \u0432\u044b\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \"&lt;\u0418\u0433\u0440\u043e\u043a&gt; \u0431\u044b\u043b \u044d\u043f\u0438\u0447\u043d\u043e \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d!\"\nplayer.Kill($\"{player.Name} \u0431\u044b\u043b \u044d\u043f\u0438\u0447\u043d\u043e \u0443\u043d\u0438\u0447\u0442\u043e\u0436\u0435\u043d!\");\n\n// \u0443\u0431\u0438\u0432\u0430\u0435\u0442 \u0438\u0433\u0440\u043e\u043a\u0430, \u0432 \u0447\u0430\u0442\u0435 \u0432\u044b\u0441\u0432\u0435\u0447\u0438\u0432\u0430\u0435\u0442\u0441\u044f \"&lt;\u0418\u0433\u0440\u043e\u043a&gt; was died.\"\nplayer.Kill();\nplayer.Kill(PlayerDeathReason.LegacyDefault());\n\n\n// \u0432\u044b\u0434\u0430\u0435\u0442 \u0431\u0430\u0444\u0444 \u0440\u0435\u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438 \u0438\u0433\u0440\u043e\u043a\u0443 \u043d\u0430 1 \u0447\u0430\u0441, 5 \u043c\u0438\u043d\u0443\u0442, 15 \u0441\u0435\u043a\u0443\u043d\u0434\nplayer.AddBuff(Terraria.ID.BuffID.Regeneration, new TimeSpan(hours: 1, minutes: 5, seconds: 15));\n// \u0435\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0440\u0430\u0432\u0438\u0442\u0441\u044f \u0437\u0430\u043d\u0438\u043c\u0430\u0442\u044c\u0441\u044f \u0435\u0440\u0443\u043d\u0434\u043e\u0439, \u0438\u043b\u0438 \u0443 \u0432\u0430\u0441 \u043d\u0430 \u0434\u0443\u0448\u0435 \u043e\u0441\u0430\u0434\u043e\u043a \u043f\u043e\u0441\u043b\u0435 TShock, \n// \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043c\u0435\u0442\u043e\u0434 \u0442\u0430\u043a:\nplayer.AddBuff(Terraria.ID.BuffID.Regeneration, 234900);\n</code></pre>"},{"location":"ru/Players/playerutils/","title":"\u0423\u0442\u0438\u043b\u0438\u0442\u044b \u0432 PlayerUtilities","text":""},{"location":"ru/Players/playerutils/#broadcastpacket","title":"BroadcastPacket","text":"<pre><code>// \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u043a\u0435\u0442 \u0432\u0441\u0435\u043c \u0438\u0433\u0440\u043e\u043a\u0430\u043c\npublic static void BroadcastPacket(byte[] data);\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u0430\u043a\u0435\u0442 \u0432\u0441\u0435\u043c \u0438\u0433\u0440\u043e\u043a\u0430\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 Predicate&lt;NetPlayer&gt;\n// \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: BroadcastPacket(data, (plr) =&gt; plr.Name.StartsWith(\"Text\"));\npublic static void BroadcastPacket(byte[] data, Predicate&lt;NetPlayer&gt; predicate)\n</code></pre>"},{"location":"ru/Players/playerutils/#broadcasttext","title":"BroadcastText","text":"<pre><code>// \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u043c \u0438\u0433\u0440\u043e\u043a\u0430\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 Predicate&lt;NetPlayer&gt;\n// \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: BroadcastText(\"My text\", new Color(255, 0, 0), (plr) =&gt; plr.IsActive);\npublic static void BroadcastText(string text, Color color, Predicate&lt;NetPlayer&gt;? predicate = null);\n\n// \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u043e\u0435 \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0432\u0441\u0435\u043c \u0438\u0433\u0440\u043e\u043a\u0430\u043c, \u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0441\u043e\u043e\u0442\u0432\u0435\u0442\u0441\u0442\u0432\u0443\u044e\u0442 Predicate&lt;NetPlayer&gt;\n// \u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440: BroadcastText(\"amethyst.broadcast.example\", new Color(255, 0, 0), (plr) =&gt; plr.IsActive);\npublic static void BroadcastText(string text, Color color, Predicate&lt;NetPlayer&gt;? predicate = null);\n</code></pre>"},{"location":"ru/Players/ssc/","title":"SSC","text":"<p>SSC - \u0440\u0435\u0436\u0438\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436 \u0438\u0433\u0440\u043e\u043a\u043e\u0432 \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435.</p> <p>\u0423\u0437\u043d\u0430\u0442\u044c, \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u043b\u0438 SSC \u043c\u043e\u0436\u043d\u043e \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e\u043c <code>bool PlayerManager.IsSSCEnabled</code></p> <p>\u041f\u0435\u0440\u0441\u043e\u043d\u0430\u0436 \u0438\u0433\u0440\u043e\u043a\u0430 \u0445\u0440\u0430\u043d\u0438\u0442\u0441\u044f \u0432 <code>ICharacterWrapper? NetPlayer.Character</code></p> <p>\u0420\u0430\u0437\u0431\u0435\u0440\u0435\u043c \u043e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 ICharacterWrapper:</p> <pre><code>// \u041c\u043e\u0434\u0435\u043b\u044c \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0430.\npublic CharacterModel Model { get; }\n\n// \u041e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435 \u0432\u043a\u043b\u044e\u0447\u0435\u043d \u0440\u0435\u0436\u0438\u043c SSC \u0438 \u0438\u0433\u0440\u043e\u043a \u0443\u0436\u0435 \u043c\u043e\u0436\u0435\u0442 \u043f\u0440\u0438\u043d\u0438\u043c\u0430\u0442\u044c \u043f\u0430\u043a\u0435\u0442\u044b SSC\npublic bool SupportsChange { get; }\n\n// \u041e\u0437\u043d\u0430\u0447\u0430\u0435\u0442, \u0447\u0442\u043e \u0438\u0433\u0440\u043e\u043a\u0443 \u0437\u0430\u0431\u043b\u043e\u043a\u0438\u0440\u043e\u0432\u0430\u043d\u0430 \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u044c \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0430.\n// \u0422\u043e\u043b\u044c\u043a\u043e \u043f\u043b\u0430\u0433\u0438\u043d\u044b/\u043c\u043e\u0434\u0443\u043b\u0438/\u044f\u0434\u0440\u043e \u043c\u043e\u0436\u0435\u0442 \u0438\u0437\u043c\u0435\u043d\u044f\u0442\u044c \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0430.\npublic bool IsReadonly { get; set; }\n</code></pre>"},{"location":"ru/Players/ssc/#_1","title":"\u0418\u043d\u0434\u0435\u043a\u0441\u0430\u0442\u043e\u0440\u044b","text":"<p>\u0423 <code>ICharacterWrapper</code> \u0435\u0441\u0442\u044c \u0434\u0432\u0430 \u0438\u043d\u0434\u0435\u043a\u0441\u0430\u0442\u043e\u0440\u0430:</p> <p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043b\u043e\u0442\u043e\u0432 \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443:</p> <pre><code>NetPlayer player;\nICharacterWrapper wrapper = player.Character!;\n\nNetItem item = wrapper[5] // \u041f\u043e\u043b\u0443\u0447\u0430\u0435\u0442 \u043f\u0440\u0435\u0434\u043c\u0435\u0442 \u0432 6 \u0441\u043b\u043e\u0442\u0443 (\u043d\u0435 5, \u043f\u043e\u0442\u043e\u043c\u0443 \u0447\u0442\u043e \u0441\u043b\u043e\u0442 \u0441 \u0438\u043d\u0434\u0435\u043a\u0441\u043e\u043c 0 \u044d\u0442\u043e \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u043b\u043e\u0442 \u0432 \u043f\u0440\u0438\u0432\u044b\u0447\u043d\u043e\u043c \u043f\u043e\u043d\u0438\u043c\u0430\u043d\u0438\u0438.)\n</code></pre> <p>\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0446\u0432\u0435\u0442\u0430 \u0447\u0435\u0433\u043e-\u043b\u0438\u0431\u043e \u043f\u043e \u0438\u043d\u0434\u0435\u043a\u0441\u0443:</p> <pre><code>NetPlayer player;\nICharacterWrapper wrapper = player.Character!;\n\nNetColor hairCol = wrapper[PlayerColorType.HairColor];\nNetColor skinCol = wrapper[PlayerColorType.SkinColor];\n</code></pre>"},{"location":"ru/Players/ssc/#_2","title":"\u0418\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0435","text":"<p>\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u043e\u0438\u0442 \u043f\u043e\u043d\u044f\u0442\u044c \u0442\u0438\u043f\u044b \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u0439 (<code>SyncType</code>):</p> <pre><code>public enum SyncType\n{\n    // \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u0441 \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0435\u043c \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0430\n    Local,\n\n    // \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0441 \u043f\u0440\u043e\u043f\u0443\u0441\u043a\u043e\u043c \u0432\u043b\u0430\u0434\u0435\u043b\u044c\u0446\u0430 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0430\n    Exclude,\n\n    // \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u043e \u0432\u0441\u0435\u043c\u0438\n    Broadcast\n}\n</code></pre> <pre><code>NetPlayer player;\nICharacterWrapper wrapper = player.Character!;\n\n// \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u0438\u0433\u0440\u043e\u043a\u0443 400 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f, 500 \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0433\u043e \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u044f\n// Broadcast \u043e\u0433\u043b\u0430\u0441\u0438\u0442 \u044d\u0442\u043e \u0432\u0441\u0435\u043c \u0438\u0433\u0440\u043e\u043a\u0430\u043c.\nwrapper.SetLife(SyncType.Broadcast, 400, 500);\n\n// \u0438\u0437\u043c\u0435\u043d\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u043c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435\n// null-\u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u043d\u0438\u043a\u043e\u043c\u0443 \u043e\u0442\u043f\u0440\u0430\u0432\u043b\u044f\u0442\u044c \u043f\u0430\u043a\u0435\u0442\u044b.\nwrapper.SetLife(null, null, 500);\n\n// \u0438\u0437\u043c\u0435\u043d\u0438\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0442\u0435\u043a\u0443\u0449\u0435\u0435 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435\nwrapper.SetLife(null, 400, null);\n\n// \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0442\u0430\u043a \u0436\u0435 \u043a\u0430\u043a \u0438 SetLife, \u043d\u043e \u0441 \u043c\u0430\u043d\u043e\u0439\nwrapper.SetMana(null, 100, null);\n\n// \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u0432 \u043f\u0435\u0440\u0432\u043e\u043c \u0441\u043b\u043e\u0442\u0435 \u0438\u043d\u0432\u0435\u043d\u0442\u0430\u0440\u0438\u044f \u043c\u0435\u0434\u043d\u0443\u044e \u043a\u0438\u0440\u043a\u0443\nwrapper.SetSlot(SyncType.Broadcast, 0, new NetItem(Terraria.ID.ItemID.CopperPickaxe, 1, 0));\n\n// \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 \u044f\u0440\u043a\u043e-\u043a\u0440\u0430\u0441\u043d\u044b\u0439 \u0446\u0432\u0435\u0442 \u0432\u043e\u043b\u043e\u0441 \u0438\u0433\u0440\u043e\u043a\u0443\nwrapper.SetColor(SyncType.Broadcast, PlayerColorType.HairColor, new NetColor(255, 0, 0));\n\n// \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442 50 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u043d\u044b\u0445 \u043a\u0432\u0435\u0441\u0442\u043e\u0432 \u0438\u0433\u0440\u043e\u043a\u0443\nwrapper.SetQuests(SyncType.Broadcast, 50);\n</code></pre>"},{"location":"ru/Players/ssc/#_3","title":"\u0421\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0430\u0446\u0438\u044f","text":"<p>\u0415\u0441\u043b\u0438 \u0432\u0430\u043c \u043d\u0443\u0436\u043d\u043e \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0430 \u0431\u0435\u0437 \u0438\u0437\u043c\u0435\u043d\u0435\u043d\u0438\u0439, \u0442\u043e \u043a \u0432\u0430\u0448\u0438\u043c \u0443\u0441\u043b\u0443\u0433\u0430\u043c \u043c\u0435\u0442\u043e\u0434\u044b \u043d\u0438\u0436\u0435:</p> <pre><code>NetPlayer player;\nICharacterWrapper wrapper = player.Character!;\n\n// \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043f\u0435\u0440\u0432\u044b\u0439 \u0441\u043b\u043e\u0442 \u0438\u043d\u0432\u0435\u043d\u0442\u0430\u0440\u044f\nwrapper.SyncSlot(SyncType.Broadcast, 0);\n\n// \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0437\u0434\u043e\u0440\u043e\u0432\u044c\u0435\nwrapper.SyncLife(SyncType.Broadcast);\n\n// \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043c\u0430\u043d\u0443\nwrapper.SyncMana(SyncType.Broadcast);\n\n// \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0438\u0433\u0440\u043e\u043a\u0435 (4 \u043f\u0430\u043a\u0435\u0442)\nwrapper.SyncPlayerInfo(SyncType.Broadcast);\n\n// \u0441\u0438\u043d\u0445\u0440\u043e\u043d\u0438\u0437\u0438\u0440\u0443\u0435\u0442 \u043a\u0432\u0435\u0441\u0442\u044b\nwrapper.SyncAngler(SyncType.Broadcast);\n</code></pre>"},{"location":"ru/Setup/","title":"\u041a\u0430\u043a \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440?","text":"<p>\u0421\u043d\u0430\u0447\u0430\u043b\u0430, \u043e\u0437\u043d\u0430\u043a\u043e\u043c\u044c\u0442\u0435\u0441\u044c \u0441 \u0442\u0435\u043c, \u0447\u0442\u043e \u0438\u0437 \u0441\u0435\u0431\u044f \u043f\u0440\u0435\u0434\u0441\u0442\u0430\u0432\u043b\u044f\u044e\u0442 \u043f\u0440\u043e\u0444\u0438\u043b\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430:</p> <ul> <li>\u043f\u0440\u043e\u0444\u0438\u043b\u0438 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u044e\u0442 \u0445\u0440\u0430\u043d\u0438\u0442\u044c \u043a\u0443\u0447\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 \u043e\u0434\u043d\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438, \u0440\u0430\u0437\u0431\u0438\u0432\u0430\u044f \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e \u0438\u043c\u0435\u043d\u0438 \u0441\u0435\u0440\u0432\u0435\u0440\u0430.</li> <li>\u044d\u0442\u043e \u043f\u0440\u0435\u0434\u043d\u0430\u0437\u043d\u0430\u0447\u0435\u043d\u043e \u0434\u043b\u044f \u0443\u0434\u043e\u0431\u043d\u043e\u0433\u043e \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0430 \u0442\u0430\u043a \u0436\u0435 \u0443\u0431\u0438\u0440\u0430\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u044c \u043f\u043e \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u0440\u0430\u0437 \u043e\u0431\u043d\u043e\u0432\u043b\u044f\u0442\u044c \u043f\u043b\u0430\u0433\u0438\u043d\u044b, \u043c\u043e\u0434\u0443\u043b\u0438, \u044f\u0434\u0440\u043e \u043d\u0430 \u0434\u0440\u0443\u0433\u0438\u0445 \u0432\u0430\u0448\u0438\u0445 \u0441\u0435\u0440\u0432\u0435\u0440\u0430\u0445.</li> <li>\u0442\u0430\u043a\u0436\u0435 \u044d\u0442\u043e \u0441\u043d\u0438\u0436\u0430\u0435\u0442 \u0437\u0430\u0445\u043b\u0430\u043c\u043b\u0435\u043d\u043d\u043e\u0441\u0442\u044c \u0434\u0438\u0441\u043a\u0430.</li> </ul> <p>\u0415\u0441\u043b\u0438 \u0432\u0441\u0435 \u0435\u0449\u0435 \u043d\u0435 \u043f\u043e\u043d\u044f\u0442\u043d\u043e, \u0442\u043e Amethyst \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442 \u0441 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0435\u0439 \u043d\u0435 \u043d\u0430\u043f\u0440\u044f\u043c\u0443\u044e \u043a\u0430\u043a \u0432\u0430\u043d\u0438\u043b\u044c\u043d\u044b\u0439 \u0441\u0435\u0440\u0432\u0435\u0440 \u0438\u043b\u0438 TShock (<code>tshock/...</code>), \u0430 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u043e\u0432 (<code>data/&lt;\u043f\u0440\u043e\u0444\u0438\u043b\u044c&gt;/...</code>)</p> <p>\u0427\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440, \u0441\u043d\u0430\u0447\u0430\u043b\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0438\u0442\u0435\u0441\u044c \u0441 \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0430; \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c \u044d\u0442\u043e \u0431\u0443\u0434\u0435\u0442 <code>MyServer</code>:</p>"},{"location":"ru/Setup/#windows","title":"Windows","text":"<p>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u043d\u0443\u044e \u0441\u0442\u0440\u043e\u043a\u0443 \u0432 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 \u043f\u0430\u043f\u043a\u0435 \u0438 \u0432\u0432\u0435\u0434\u0438\u0442\u0435:</p> <pre><code>start.bat -profile MyServer\n</code></pre>"},{"location":"ru/Setup/#linux","title":"Linux","text":"<p>\u0417\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0442\u0435\u0440\u043c\u0438\u043d\u0430\u043b \u0432 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 \u0438 \u0432\u0432\u0435\u0434\u0438\u0442\u0435:</p> <pre><code>./start.sh -profile MyServer\n</code></pre>"},{"location":"ru/Setup/#_2","title":"\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u044b \u0437\u0430\u043f\u0443\u0441\u043a\u0430","text":"\u0410\u0440\u0433\u0443\u043c\u0435\u043d\u0442 \u0417\u043d\u0430\u0447\u0435\u043d\u0438\u044f / \u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u044b \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 <code>-profile</code> <code>&lt;profile&gt;</code> (\u041e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u044b\u0439) \u0417\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u044c \u043f\u0440\u043e\u0444\u0438\u043b\u044c \u0441\u0435\u0440\u0432\u0435\u0440\u0430. <code>-deflang</code> <code>ru-RU</code>, <code>en-US</code> \u0423\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u044f\u0437\u044b\u043a \u0441\u0435\u0440\u0432\u0435\u0440\u0430 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e. <code>-genevil</code> <code>-1</code> (\u0440\u0430\u043d\u0434\u043e\u043c), <code>0</code> (\u041f\u043e\u0440\u0447\u0430), <code>1</code> (\u0411\u0430\u0433\u0440\u044f\u043d\u0435\u0446) [\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: -1] \u0422\u0438\u043f \u0437\u043b\u0430 \u0432 \u043c\u0438\u0440\u0435 \u043f\u0440\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438. <code>-gengamemode</code> <code>0</code> (\u041a\u043b\u0430\u0441\u0441\u0438\u0447\u0435\u0441\u043a\u0438\u0439), <code>1</code> (\u042d\u043a\u0441\u043f\u0435\u0440\u0442), <code>2</code> (\u041c\u0430\u0441\u0442\u0435\u0440), <code>3</code> (\u0422\u0432\u043e\u0440\u0447\u0435\u0441\u043a\u0438\u0439) [\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: 0] \u0418\u0433\u0440\u043e\u0432\u043e\u0439 \u0440\u0435\u0436\u0438\u043c \u043c\u0438\u0440\u0430 \u043f\u0440\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438. <code>-genwidth</code> <code>4200</code>, <code>6400</code>, <code>8400</code> \u0428\u0438\u0440\u0438\u043d\u0430 \u043c\u0438\u0440\u0430 \u043f\u0440\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438. <code>-genheight</code> <code>1200</code>, <code>1800</code>, <code>2400</code> \u0412\u044b\u0441\u043e\u0442\u0430 \u043c\u0438\u0440\u0430 \u043f\u0440\u0438 \u0433\u0435\u043d\u0435\u0440\u0430\u0446\u0438\u0438. <code>-worldpath</code> <code>&lt;worldpath&gt;</code> \u041f\u0443\u0442\u044c \u043a \u0444\u0430\u0439\u043b\u0443 \u043c\u0438\u0440\u0430 \u0434\u043b\u044f \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438. <code>-worldrecreate</code> (\u0424\u043b\u0430\u0433) \u0421\u0433\u0435\u043d\u0435\u0440\u0438\u0440\u043e\u0432\u0430\u0442\u044c \u043d\u043e\u0432\u044b\u0439 \u043c\u0438\u0440 \u043f\u0440\u0438 \u0437\u0430\u043f\u0443\u0441\u043a\u0435 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. <code>-netport</code> <code>&lt;netport&gt;</code> [\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>7777</code>] \u041f\u043e\u0440\u0442 \u0441\u0435\u0440\u0432\u0435\u0440\u0430. <code>-netslots</code> <code>&lt;netslots&gt;</code> [\u041f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e: <code>8</code>] \u041c\u0430\u043a\u0441\u0438\u043c\u0430\u043b\u044c\u043d\u043e\u0435 \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0438\u0433\u0440\u043e\u043a\u043e\u0432. <code>-debugmode</code>, <code>-debug</code> (\u0424\u043b\u0430\u0433) \u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0435\u0436\u0438\u043c \u043e\u0442\u043b\u0430\u0434\u043a\u0438 (\u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u043d\u043e\u0435 \u043b\u043e\u0433\u0438\u0440\u043e\u0432\u0430\u043d\u0438\u0435 \u0438 \u0442\u0435\u0441\u0442\u043e\u0432\u044b\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u044b). <code>-ssc</code> (\u0424\u043b\u0430\u0433) \u0412\u043a\u043b\u044e\u0447\u0438\u0442\u044c \u0440\u0435\u0436\u0438\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u043d\u044b\u0445 \u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0435\u0439 (\u0445\u0440\u0430\u043d\u0438\u0442\u044c \u0438\u043d\u0432\u0435\u043d\u0442\u0430\u0440\u044c \u043d\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0435). <code>--version</code> (\u0424\u043b\u0430\u0433) \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e \u0432\u0435\u0440\u0441\u0438\u0438. <code>-?</code>, <code>-h</code>, <code>--help</code> (\u0424\u043b\u0430\u0433) \u041f\u043e\u043a\u0430\u0437\u0430\u0442\u044c \u0441\u043f\u0440\u0430\u0432\u043a\u0443 \u0438 \u0438\u043d\u0444\u043e\u0440\u043c\u0430\u0446\u0438\u044e \u043e\u0431 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0438."},{"location":"ru/Setup/debug/","title":"\u0420\u0435\u0436\u0438\u043c \u043e\u0442\u043b\u0430\u0434\u043a\u0438","text":"<p>\u0420\u0435\u0436\u0438\u043c \u043e\u0442\u043b\u0430\u0434\u043a\u0438 (\u0438\u043b\u0438 \u0440\u0435\u0436\u0438\u043c \u0440\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u0447\u0438\u043a\u0430) \u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 \u043d\u0435\u043a\u043e\u0442\u043e\u0440\u044b\u0435 \u0444\u0443\u043d\u043a\u0446\u0438\u0438:</p> <ul> <li>\u043a\u043e\u043c\u0430\u043d\u0434\u0430 <code>/grantroot</code>, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u043f\u0435\u0440\u0435\u043a\u043b\u044e\u0447\u0430\u0435\u0442 root-\u0440\u0435\u0436\u0438\u043c \u0438\u0433\u0440\u043e\u043a\u0443. Root-\u0440\u0435\u0436\u0438\u043c - \u0440\u0435\u0436\u0438\u043c \u043f\u0440\u0438 \u043a\u043e\u0442\u043e\u0440\u043e\u043c \u0438\u0433\u0440\u043e\u043a \u0438\u043c\u0435\u0435\u0442 \u0432\u0441\u0435 \u043f\u0440\u0430\u0432\u0430.</li> <li>\u043e\u0442\u043b\u0430\u0434\u043a\u0430 \u043e\u0431\u043d\u043e\u0432\u043b\u0435\u043d\u0438\u044f \u0438\u0433\u0440\u044b.</li> <li>\u0432\u043a\u043b\u044e\u0447\u0430\u0435\u0442 Debug-\u043b\u043e\u0433\u0438.</li> <li>\u043f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u0438, \u043f\u043e\u0447\u0435\u043c\u0443 \u043f\u0430\u043a\u0435\u0442\u044b \u0438\u0433\u043d\u043e\u0440\u0438\u0440\u0443\u044e\u0442\u0441\u044f.</li> </ul> <p>\u0427\u0442\u043e\u0431\u044b \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u044c \u0441\u0435\u0440\u0432\u0435\u0440 \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u043e\u0442\u043b\u0430\u0434\u043a\u0438, \u0434\u043e\u0431\u0430\u0432\u044c\u0442\u0435 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442 <code>-debug</code> \u043a \u0437\u0430\u043f\u0443\u0441\u043a\u0443 (<code>start.bat</code> \u0438\u043b\u0438 <code>./start.sh</code>)</p>"},{"location":"ru/Setup/debug/#_2","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0432 \u043f\u043b\u0430\u0433\u0438\u043d\u0430\u0445","text":"<p>\u0412\u044b \u0442\u0430\u043a\u0436\u0435 \u043c\u043e\u0436\u0435\u0442\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u043e \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0432 \u043f\u043b\u0430\u0433\u0438\u043d\u0430\u0445/\u043c\u043e\u0434\u0443\u043b\u044f\u0445.</p> <p>\u041f\u043e\u043d\u044f\u0442\u044c, \u0447\u0442\u043e \u0441\u0435\u0440\u0432\u0435\u0440 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 \u043e\u0442\u043b\u0430\u0434\u043a\u0438, \u043c\u043e\u0436\u043d\u043e \u0447\u0435\u0440\u0435\u0437 <code>AmethystSession.Profile.DebugMode</code>.</p> <p>\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440:</p> <pre><code>using Amethyst.Extensions.Plugins;\nusing System;\n\nnamespace MyPlugin;\n\npublic sealed class MyPlugin : PluginInstance\n{\n    public override string Name =&gt; \"MyPlugin\";\n\n    public override Version Version =&gt; new(1, 0);\n\n    protected override void Load()\n    {\n        // \u043b\u043e\u0433 \u0432\u044b\u0441\u0432\u0435\u0442\u0438\u0442\u0441\u044f \u0442\u043e\u043b\u044c\u043a\u043e \u043f\u0440\u0438 \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u043d\u043e\u043c \u0440\u0435\u0436\u0438\u043c\u0435 \u043e\u0442\u043b\u0430\u0434\u043a\u0438, \u0442\u0430\u043a \u043a\u0430\u043a Debug-\u043b\u043e\u0433\u0438 \u0440\u0430\u0431\u043e\u0442\u0430\u044e\u0442 \u0442\u043e\u043b\u044c\u043a\u043e \u0432 \u0440\u0435\u0436\u0438\u043c\u0435 Debug.\n        AmethystLog.Startup.Debug(\"Amethyst.Docs\", \"Debug message from my epic plugin!\");\n\n        if (AmethystSession.Profile.DebugMode)\n        {\n            AmethystLog.Startup.Debug(\"Amethyst.Docs\", \"\u0410 \u0432\u043e\u0442 \u0442\u0435\u043f\u0435\u0440\u044c \u044d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 \u0442\u043e\u0447\u043d\u043e \u043e\u0442\u043e\u0431\u0440\u0430\u0437\u0438\u0442\u0441\u044f.\");\n        }\n\n        AmethystLog.Startup.Info(\"Amethyst.Docs\", \"\u0410 \u044d\u0442\u043e \u0441\u043e\u043e\u0431\u0449\u0435\u043d\u0438\u0435 - \u0442\u0435\u043c\u0431\u043e\u043b\u0435\u0435\");\n    }\n\n    protected override void Unload() {}\n}\n</code></pre>"},{"location":"ru/Setup/localization/","title":"\u041b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f","text":"<p>Amethyst \u0438\u043c\u0435\u0435\u0442 \u0432\u0441\u0442\u0440\u043e\u0435\u043d\u043d\u0443\u044e \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e, \u0435\u0441\u043b\u0438 \u043d\u0435 \u0432\u0435\u0440\u0438\u0442\u0435 - \u0441\u043c\u043e\u0442\u0440\u0438\u0442\u0435 \u0432 \u043f\u0430\u043f\u043a\u0443 <code>localization</code> \u0432 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 \u043f\u0430\u043f\u043a\u0435 \u044f\u0434\u0440\u0430.</p> <p>\u041f\u043e \u043d\u0430\u0447\u0430\u043b\u0443, \u0432\u044b \u0443\u0432\u0438\u0434\u0438\u0442\u0435 \u0442\u043e\u043b\u044c\u043a\u043e \u044d\u0442\u0438 \u0444\u0430\u0439\u043b\u044b:</p> <pre><code>\u251c\u2500\u2500 en-US\n\u2502   \u251c\u2500\u2500 en-US.amethyst.json\n\u2502   \u251c\u2500\u2500 en-US.commands.desc.json\n\u2502   \u251c\u2500\u2500 en-US.commands.json\n\u2502   \u251c\u2500\u2500 en-US.commands.text.json\n\u2502   \u251c\u2500\u2500 en-US.network.json\n\u2502   \u2514\u2500\u2500 en-US.packet.json\n\u2514\u2500\u2500 ru-RU\n    \u251c\u2500\u2500 ru-RU.amethyst.json\n    \u251c\u2500\u2500 ru-RU.commands.desc.json\n    \u251c\u2500\u2500 ru-RU.commands.json\n    \u251c\u2500\u2500 ru-RU.commands.text.json\n    \u251c\u2500\u2500 ru-RU.network.json\n    \u2514\u2500\u2500 ru-RU.packet.json\n</code></pre> <p>\u0427\u0442\u043e\u0431\u044b \u0434\u043e\u043f\u043e\u043b\u043d\u0438\u0442\u044c \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e (\u043d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u043f\u0440\u0438 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043a\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u0430), \u043f\u0440\u043e\u0441\u0442\u043e \u043f\u0435\u0440\u0435\u043a\u0438\u043d\u044c\u0442\u0435 \u0444\u0430\u0439\u043b\u044b \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0432 en-US \u0438 ru-RU.</p>"},{"location":"ru/Setup/localization/#_2","title":"\u0421\u0432\u043e\u0439 \u044f\u0437\u044b\u043a","text":"<p>\u0410 \u0434\u043b\u044f \u0442\u043e\u0433\u043e, \u0447\u0442\u043e\u0431\u044b \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0441\u0432\u043e\u0439 \u044f\u0437\u044b\u043a, \u043d\u0443\u0436\u043d\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u0443\u044e \u043f\u0430\u043f\u043a\u0443, \u0438 \u0432\u043d\u0435\u0441\u0442\u0438 \u0442\u0443\u0434\u0430 \u0444\u0430\u0439\u043b\u044b \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438.</p> <p>\u0414\u043e\u043f\u0443\u0441\u0442\u0438\u043c, \u043c\u043d\u0435 \u0441\u0442\u0430\u043b\u043e \u043f\u043b\u043e\u0445\u043e \u0438 \u043c\u043d\u0435 \u043f\u0440\u0438\u0447\u0443\u0434\u0438\u043b\u043e\u0441\u044c \u0447\u0442\u043e Amethyst \u043e\u0431\u044f\u0437\u0430\u0442\u0435\u043b\u044c\u043d\u043e \u0434\u043e\u043b\u0436\u0435\u043d \u0438\u043c\u0435\u0442\u044c \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a: \u044f \u0441\u043e\u0437\u0434\u0430\u044e \u043f\u0430\u043f\u043a\u0443 <code>la-NA</code> \u043d\u0430\u0440\u044f\u0434\u0443 \u0441 <code>ru-RU</code> \u0438 <code>en-US</code></p> <p>\u0421 \u044d\u0442\u0438\u043c \u0440\u0430\u0437\u043e\u0431\u0440\u0430\u043b\u0438\u0441\u044c, \u043d\u043e \u0442\u0435\u043f\u0435\u0440\u044c \u043c\u043e\u0436\u043d\u043e \u0438 \u0434\u043e\u0431\u0430\u0432\u0438\u0442\u044c \u0432\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435 \u044d\u0442\u043e\u0433\u043e \u044f\u0437\u044b\u043a\u0430.</p> <pre><code>[ServerCommand(CommandType.Shared, \"lang la\", \"set lingua latina.\", null)]\npublic static void Latin(CommandInvokeContext ctx)\n{\n    ctx.Sender.Language = \"la-NA\";\n    ctx.Sender.ReplySuccess(\"Num quis hoc legit?\");\n}\n</code></pre> <p>\u041d\u043e, \u0435\u0441\u043b\u0438 \u0432\u044b \u043a\u0440\u043e\u0432\u043e\u0436\u0430\u0434\u043d\u044b\u0439 \u0434\u0438\u043a\u0442\u0430\u0442\u043e\u0440 \u043d\u0430 \u0432\u0430\u0448\u0435\u043c \u0441\u0435\u0440\u0432\u0435\u0440\u0435 - \u043c\u043e\u0436\u043d\u043e \u0434\u043b\u044f \u0432\u0441\u0435\u0445 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c \u043b\u0430\u0442\u0438\u043d\u0441\u043a\u0438\u0439 \u044f\u0437\u044b\u043a, \u043f\u0440\u043e\u0441\u0442\u043e \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0432 \u0441\u0435\u0440\u0432\u0435\u0440 \u0441 \u0430\u0440\u0433\u0443\u043c\u0435\u043d\u0442\u043e\u043c <code>-language la-NA</code></p>"},{"location":"ru/Setup/localization/#_3","title":"\u0414\u043e\u0431\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u0444\u0430\u0439\u043b\u043e\u0432 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438","text":"<p>\u0421\u0440\u0435\u0434\u043d\u0435\u0441\u0442\u0430\u0442\u0438\u0441\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u0439 \u0444\u0430\u0439\u043b \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u0441\u043e\u0441\u0442\u043e\u0438\u0442 \u0438\u0437 \u0432\u044b\u0440\u0430\u0436\u0435\u043d\u0438\u0439 <code>\u043a\u043b\u044e\u0447:\u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0435</code>:</p> <pre><code>{\n    \"myKey\": \"My text\"\n}\n</code></pre> <p>\u0427\u0442\u043e\u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044e, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>Localization.Get</code>:</p> <pre><code>{\n    string text = Localization.Get(\"myKey\", \"la-NA\");\n    Console.WriteLine($\"My text is: {text}\");\n}\n</code></pre> <p>\u0427\u0442\u043e\u0431\u044b \u0432\u044b\u0432\u0435\u0441\u0442\u0438 \u0438\u0433\u0440\u043e\u043a\u0443 \u043b\u043e\u043a\u0430\u043b\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u0442\u0435\u043a\u0441\u0442 \u043d\u0430 \u0432\u044b\u0431\u0440\u0430\u043d\u043d\u043e\u043c \u0438\u043c \u044f\u0437\u044b\u043a\u0435:</p> <pre><code>{\n    NetPlayer player; // \u0434\u043e\u043f\u0443\u0441\u0442\u0438\u043c, \u0443 \u043d\u0430\u0441 \u0435\u0441\u0442\u044c \u043a\u0430\u043a\u043e\u0439 \u0442\u043e \u0438\u0433\u0440\u043e\u043a.\n\n    string text = Localization.Get(\"myKey\", player.Language);\n    player.ReplyInfo(text);\n}\n</code></pre>"},{"location":"ru/Setup/modules/","title":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430, \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438","text":"<p>\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u043e\u0438\u0442 \u043f\u043e\u043d\u044f\u0442\u044c, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u043c\u043e\u0434\u0443\u043b\u044c.</p> <p>\u041c\u043e\u0434\u0443\u043b\u044c - \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0431\u044f\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u044b\u0442\u044c \u0441\u0442\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u0438\u043c \u0438 \u043f\u043e \u0432\u043e\u0437\u043c\u043e\u0436\u043d\u043e\u0441\u0442\u0438 \u0440\u0430\u0441\u0448\u0438\u0440\u044f\u0442\u044c \u0444\u0443\u043d\u043a\u0446\u0438\u043e\u043d\u0430\u043b API.</p> <p>\u041c\u043e\u0434\u0443\u043b\u0438 \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f \u0438\u0437 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 <code>extensions/modules</code>, \u043f\u0440\u0438 \u0442\u043e\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u0447\u0442\u043e \u0432\u044b \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u043b\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443. (\u043a\u043e\u043c\u0430\u043d\u0434\u0430 <code>modules setallow</code> \u043d\u0438\u0436\u0435)</p>"},{"location":"ru/Setup/modules/#_2","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u044f\u043c\u0438","text":"<p>\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c:</p> \u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440 <code>modules list</code> \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438. <code>modules allowlist</code> \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0435 \u043c\u043e\u0434\u0443\u043b\u0438. <code>modules setallow &lt;\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441 .dll&gt; &lt;true \\| false&gt;</code> \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u0438\u043b\u0438 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u043c\u043e\u0434\u0443\u043b\u044c. <code>modules setallow MyModule.dll true</code>"},{"location":"ru/Setup/modules/#_3","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043c\u043e\u0434\u0443\u043b\u044f","text":"<p>\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c NuGet-\u043f\u0430\u043a\u0435\u0442 <code>Amethyst.Templates</code>.</p> <pre><code>dotnet new install Amethyst.Templates\n</code></pre> <p>\u041f\u0430\u043a\u0435\u0442 <code>Amethyst.Templates</code> \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0434\u043e\u0431\u043d\u043e \u0438 \u0431\u044b\u0441\u0442\u0440\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u043b\u0430\u0433\u0438\u043d\u044b/\u043c\u043e\u0434\u0443\u043b\u0438 \u0434\u043b\u044f API.</p> <p>\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c, \u043d\u0430\u0437\u043e\u0432\u0435\u043c \u0435\u0433\u043e MyModule: <pre><code>dotnet new aext-module -n MyModule\n</code></pre></p> <p>\u041f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043f\u0430\u043f\u043a\u0430 MyModule \u0438\u043b\u0438 \u0432\u0435\u0441\u044c \u043f\u0440\u043e\u0435\u043a\u0442 \u0431\u0443\u0434\u0435\u0442 \u0432 \u0432\u0430\u0448\u0435\u0439 \u043f\u0430\u043f\u043a\u0435.</p>"},{"location":"ru/Setup/modules/#_4","title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<pre><code>using Amethyst.Extensions.Modules;\n\nnamespace MyModule;\n\n[AmethystModule(\"MyModule\")]\npublic static class MyModule\n{\n    private static bool _isInitialized;\n\n    [ModuleInitialize]\n    public static void Initialize()\n    {\n        if (IsInitialized)\n        {\n            return;\n        }\n\n        IsInitialized = true;\n\n        // \u043a\u043e\u0434 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u0438 \u043c\u043e\u0434\u0443\u043b\u044f . . .\n    }\n}\n</code></pre> <p>\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0432\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043c\u043e\u0434\u0443\u043b\u044c, \u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c: <code>dotnet build -c Release</code>.</p> <p>\u0412 \u043f\u0430\u043f\u043a\u0435 <code>bin/Release/net9.0</code> \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043c\u043e\u0434\u0443\u043b\u044c. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 <code>MyModule.dll</code></p> <p>\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u0435 \u0435\u0433\u043e \u0432 \u043f\u0430\u043f\u043a\u0443 <code>extensions/modules</code> \u0432 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 \u043f\u0430\u043f\u043a\u0435 Amethyst.</p> <p>\u0417\u0430\u0442\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440, \u0438 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 <code>/modules setallow MyModule.dll</code>, \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440.</p> <p>\u0412\u043e\u0442 \u0438 \u0432\u0441\u0435, \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0430\u0448 \u043c\u043e\u0434\u0443\u043b\u044c \u0443\u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442!</p>"},{"location":"ru/Setup/plugins/","title":"\u0420\u0430\u0437\u0440\u0430\u0431\u043e\u0442\u043a\u0430, \u0443\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u0430\u043c\u0438","text":"<p>\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0441\u0442\u043e\u0438\u0442 \u043f\u043e\u043d\u044f\u0442\u044c, \u0447\u0442\u043e \u0442\u0430\u043a\u043e\u0435 \u043f\u043b\u0430\u0433\u0438\u043d.</p> <p>\u041f\u043b\u0430\u0433\u0438\u043d - \u043e\u0442\u0434\u0435\u043b\u044c\u043d\u043e\u0435 \u0440\u0430\u0441\u0448\u0438\u0440\u0435\u043d\u0438\u0435 \u0434\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043e\u0431\u044f\u0437\u0443\u0435\u0442\u0441\u044f \u0431\u044b\u0442\u044c \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u044b\u043c \u0438 \u0432\u044b\u0433\u0440\u0443\u0436\u0430\u0435\u043c\u044b\u043c. \u041e\u043d\u043e \u043e\u0431\u044f\u0437\u0430\u043d\u043e \u043d\u0435 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0442\u044c API, \u0430 \u043b\u0438\u0448\u044c \u0432\u0437\u0430\u0438\u043c\u043e\u0434\u0435\u0439\u0441\u0442\u0432\u043e\u0432\u0430\u0442\u044c \u0441 \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u043d\u044b\u043c\u0438.</p> <p>\u041f\u043b\u0430\u0433\u0438\u043d\u044b \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u044e\u0442\u0441\u044f \u0438\u0437 \u0434\u0438\u0440\u0435\u043a\u0442\u043e\u0440\u0438\u0438 <code>extensions/plugins</code>, \u043f\u0440\u0438 \u0442\u043e\u043c \u0443\u0441\u043b\u043e\u0432\u0438\u0438 \u0447\u0442\u043e \u0432\u044b \u0440\u0430\u0437\u0440\u0435\u0448\u0438\u043b\u0438 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0443. (\u043a\u043e\u043c\u0430\u043d\u0434\u0430 <code>plugins setallow</code> \u043d\u0438\u0436\u0435)</p>"},{"location":"ru/Setup/plugins/#_2","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u0430\u043c\u0438","text":"<p>\u041f\u043e\u0441\u043b\u0435 \u0437\u0430\u043f\u0443\u0441\u043a\u0430 \u0441\u0435\u0440\u0432\u0435\u0440\u0430, \u0432\u044b \u043c\u043e\u0436\u0435\u0442\u0435 \u0432\u0432\u043e\u0434\u0438\u0442\u044c \u043a\u043e\u043c\u0430\u043d\u0434\u044b \u0432 \u043a\u043e\u043d\u0441\u043e\u043b\u044c:</p>"},{"location":"ru/Setup/plugins/#russian-commands","title":"Russian Commands (\u041a\u043e\u043c\u0430\u043d\u0434\u044b \u043d\u0430 \u0440\u0443\u0441\u0441\u043a\u043e\u043c)","text":"\u041a\u043e\u043c\u0430\u043d\u0434\u0430 \u041e\u043f\u0438\u0441\u0430\u043d\u0438\u0435 \u041f\u0440\u0438\u043c\u0435\u0440 <code>plugins list</code> \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0437\u0430\u0433\u0440\u0443\u0436\u0435\u043d\u043d\u044b\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u044b. <code>plugins allowlist</code> \u041f\u043e\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u0440\u0430\u0437\u0440\u0435\u0448\u0435\u043d\u043d\u044b\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u044b. <code>plugins setallow &lt;\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435 \u0441 .dll&gt; &lt;true \\| false&gt;</code> \u0420\u0430\u0437\u0440\u0435\u0448\u0430\u0435\u0442 \u0438\u043b\u0438 \u0431\u043b\u043e\u043a\u0438\u0440\u0443\u0435\u0442 \u043f\u043b\u0430\u0433\u0438\u043d. <code>plugins setallow MyPlugin.dll true</code> <code>plugins load</code> \u0417\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043f\u043b\u0430\u0433\u0438\u043d\u044b. <code>plugins unload</code> \u0412\u044b\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043f\u043b\u0430\u0433\u0438\u043d\u044b. <code>plugins reload</code> \u041f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043f\u043b\u0430\u0433\u0438\u043d\u044b."},{"location":"ru/Setup/plugins/#_3","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u0430","text":"<p>\u0414\u043b\u044f \u043d\u0430\u0447\u0430\u043b\u0430 \u0440\u0435\u043a\u043e\u043c\u0435\u043d\u0434\u0443\u0435\u0442\u0441\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u0438\u0442\u044c NuGet-\u043f\u0430\u043a\u0435\u0442 <code>Amethyst.Templates</code>.</p> <pre><code>dotnet new install Amethyst.Templates\n</code></pre> <p>\u041f\u0430\u043a\u0435\u0442 <code>Amethyst.Templates</code> \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0443\u0434\u043e\u0431\u043d\u043e \u0438 \u0431\u044b\u0441\u0442\u0440\u043e \u0441\u043e\u0437\u0434\u0430\u0432\u0430\u0442\u044c \u043f\u043b\u0430\u0433\u0438\u043d\u044b/\u043c\u043e\u0434\u0443\u043b\u0438 \u0434\u043b\u044f API.</p> <p>\u0421\u043e\u0437\u0434\u0430\u0434\u0438\u043c \u043f\u0435\u0440\u0432\u044b\u0439 \u043f\u043b\u0430\u0433\u0438\u043d, \u043d\u0430\u0437\u043e\u0432\u0435\u043c \u0435\u0433\u043e MyPlugin: <pre><code>dotnet new aext-plugin -n MyPlugin\n</code></pre></p> <p>\u041f\u043e\u0441\u043b\u0435 \u0432\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u044f \u043a\u043e\u043c\u0430\u043d\u0434\u044b, \u043e\u0447\u0435\u0432\u0438\u0434\u043d\u043e \u043f\u043e\u044f\u0432\u0438\u0442\u0441\u044f \u043f\u0430\u043f\u043a\u0430 MyPlugin \u0438\u043b\u0438 \u0432\u0435\u0441\u044c \u043f\u0440\u043e\u0435\u043a\u0442 \u0431\u0443\u0434\u0435\u0442 \u0432 \u0432\u0430\u0448\u0435\u0439 \u043f\u0430\u043f\u043a\u0435.</p>"},{"location":"ru/Setup/plugins/#_4","title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0439 \u0438\u0441\u0445\u043e\u0434\u043d\u044b\u0439 \u043a\u043e\u0434 \u043f\u0440\u043e\u0435\u043a\u0442\u0430","text":"<pre><code>using Amethyst.Extensions.Plugins;\nusing System;\n\nnamespace MyPlugin;\n\npublic sealed class MyPlugin : PluginInstance\n{\n    public override string Name =&gt; \"MyPlugin\";\n\n    public override Version Version =&gt; new(1, 0);\n\n    protected override void Load()\n    {\n        // \u0417\u0434\u0435\u0441\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u0434 \u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043f\u043b\u0430\u0433\u0438\u043d\u0430.\n\n        AmethystLog.Startup.Info(\"Amethyst.Docs\", \"MyPlugin.Load();\");\n    }\n\n    protected override void Unload()\n    {\n        // \u0417\u0434\u0435\u0441\u044c \u0432\u044b\u043f\u043e\u043b\u043d\u044f\u0435\u0442\u0441\u044f \u043a\u043e\u0434 \u0432\u044b\u0437\u0430\u0433\u0440\u0443\u0437\u043a\u0438 \u043f\u043b\u0430\u0433\u0438\u043d\u0430.\n\n        AmethystLog.Startup.Info(\"Amethyst.Docs\", \"MyPlugin.Unload();\");\n    }\n}\n</code></pre> <p>\u041f\u043e\u0441\u043b\u0435 \u0442\u043e\u0433\u043e \u043a\u0430\u043a \u0432\u044b \u0441\u043e\u0437\u0434\u0430\u043b\u0438 \u043f\u043b\u0430\u0433\u0438\u043d, \u0435\u0433\u043e \u043d\u0443\u0436\u043d\u043e \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u0442\u044c: <code>dotnet build -c Release</code>.</p> <p>\u0412 \u043f\u0430\u043f\u043a\u0435 <code>bin/Release/net9.0</code> \u0431\u0443\u0434\u0435\u0442 \u0441\u043a\u043e\u043c\u043f\u0438\u043b\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u0439 \u043f\u043b\u0430\u0433\u0438\u043d. \u0412 \u043d\u0430\u0448\u0435\u043c \u0441\u043b\u0443\u0447\u0430\u0435 <code>MyPlugin.dll</code></p> <p>\u041f\u0435\u0440\u0435\u043c\u0435\u0441\u0442\u0438\u0442\u0435 \u0435\u0433\u043e \u0432 \u043f\u0430\u043f\u043a\u0443 <code>extensions/plugins</code> \u0432 \u043a\u043e\u0440\u043d\u0435\u0432\u043e\u0439 \u043f\u0430\u043f\u043a\u0435 Amethyst.</p> <p>\u0417\u0430\u0442\u0435\u043c \u0437\u0430\u043f\u0443\u0441\u0442\u0438\u0442\u0435 \u0441\u0435\u0440\u0432\u0435\u0440, \u0438 \u0432\u0432\u0435\u0434\u0438\u0442\u0435 \u043a\u043e\u043c\u0430\u043d\u0434\u0443 <code>/plugins setallow MyPlugin.dll</code>, \u0430 \u0437\u0430\u0442\u0435\u043c \u043f\u0435\u0440\u0435\u0437\u0430\u0433\u0440\u0443\u0437\u0438\u0442\u0435 \u043f\u043b\u0430\u0433\u0438\u043d\u044b \u043a\u043e\u043c\u0430\u043d\u0434\u043e\u0439 <code>/plugins reload</code>.</p> <p>\u0412\u043e\u0442 \u0438 \u0432\u0441\u0435, \u043f\u0435\u0440\u0432\u044b\u0439 \u0432\u0430\u0448 \u043f\u043b\u0430\u0433\u0438\u043d \u0443\u0436\u0435 \u0440\u0430\u0431\u043e\u0442\u0430\u0435\u0442!</p>"},{"location":"ru/Storages/config/","title":"JSON-\u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u044f","text":"<p>Amethyst \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 JSON \u0432 \u043a\u0430\u0447\u0435\u0441\u0442\u0432\u0435 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0438 \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0434\u043e\u0431\u043d\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0439 \u0432 \u043a\u043e\u0434\u0435.</p> <p>\u0414\u043b\u044f \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0438 \u0442\u0440\u0435\u0431\u0443\u0435\u0442\u0441\u044f <code>struct</code>-\u0442\u0438\u043f, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0438\u043c\u0435\u0435\u0442 \u0432 \u0441\u0435\u0431\u0435 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u044b\u0435 \u0434\u0430\u043d\u043d\u044b\u0435:</p> <pre><code>public struct MyConfigData\n{\n    public int TestValue;\n    public string? TestText;\n    public string DefaultTestText = \"Hello World!\";\n    public List&lt;string&gt; TestValues;\n}\n</code></pre> <p>\u041a\u043b\u0430\u0441\u0441 <code>Configuration&lt;T&gt;</code> - \u0438\u043d\u0441\u0442\u0440\u0443\u043c\u0435\u043d\u0442, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043f\u0440\u0430\u0432\u043b\u044f\u0435\u0442 \u0432\u0430\u0448\u0435\u0439 \u043a\u043e\u043d\u0444\u0438\u0433\u0443\u0440\u0430\u0446\u0438\u0435\u0439: \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442, \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442, \u0438\u0437\u043c\u0435\u043d\u044f\u0435\u0442.</p> <p>\u041f\u0440\u0438\u043c\u0435\u0440 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u044f:</p> <pre><code>Configuration&lt;MyConfigData&gt; config = new Configuration&lt;MyConfigData&gt;(typeof(MyConfigData).FullName!, new());\n\n// \u0437\u0430\u0433\u0440\u0443\u0436\u0430\u0435\u0442 \u043a\u043e\u043d\u0444\u0438\u0433\nconfig.Load();\n\n// \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0430\u0446\u0438\u044f \u0441\u0442\u0430\u043d\u0434\u0430\u0440\u0442\u043d\u044b\u0445 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u0439 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0435\nconfig.Modify(InitializeConfig, true);\n\nvoid InitializeConfig(ref MyConfigData data)\n{\n    if (data.TestText == null)\n    {\n        data.TestText = \"default value of TestText\";\n    }\n\n    // \u041d\u0435\u0442 \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e\u0441\u0442\u0438 \u0438\u043d\u0438\u0446\u0438\u0430\u043b\u0438\u0437\u0438\u0440\u043e\u0432\u0430\u0442\u044c DefaultTestText\n\n    if (data.TestValues == null)\n    {\n        data.TestValues = new List&lt;string&gt;();\n    }\n}\n</code></pre> <p>\u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 <code>MyConfigData</code>, \u043d\u0443\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u043e <code>Data</code>:</p> <pre><code>MyConfigData data = config.Data;\n\nif (data.TestText == \"default value of TestText\")\n{\n    ModernConsole.WriteLine(\"\u0417\u043d\u0430\u0447\u0435\u043d\u0438\u0435 \u043f\u043e \u0443\u043c\u043e\u043b\u0447\u0430\u043d\u0438\u044e!\");\n}\n</code></pre>"},{"location":"ru/Storages/mongodb/","title":"\u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 MongoDB","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u0430\u044f \u0431\u0430\u0437\u0430 \u0434\u0430\u043d\u043d\u044b\u0445, \u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442\u0441\u044f \u0432 Amethyst - MongoDB. Amethyst \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u0443\u0434\u043e\u0431\u043d\u043e\u0435 \u0438 \u0431\u044b\u0441\u0442\u0440\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u044d\u0442\u043e\u0439 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445.</p> <p>\u0427\u0442\u043e\u0431\u044b \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u044d\u0442\u0443 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445, \u043d\u0435\u043e\u0431\u0445\u043e\u0434\u0438\u043c\u043e \u0441\u043e\u0437\u0434\u0430\u0442\u044c \u043a\u043b\u0430\u0441\u0441, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043d\u0430\u0441\u043b\u0435\u0434\u0443\u0435\u0442 <code>DataModel</code>.</p> <p>\u041c\u043e\u0434\u0435\u043b\u044c (<code>DataModel</code>) - \u044d\u0442\u043e \u0441\u0442\u0440\u0443\u043a\u0442\u0443\u0440\u0430 \u0434\u0430\u043d\u043d\u044b\u0445.</p> <p>\u041a \u043f\u0440\u0438\u043c\u0435\u0440\u0443, \u0431\u0430\u0437\u043e\u0432\u0430\u044f \u043c\u043e\u0434\u0435\u043b\u044c \u0432\u044b\u0433\u043b\u044f\u0434\u0438\u0442 \u0442\u0430\u043a:</p> <pre><code>using Amethyst.Storages.Mongo;\nusing MongoDB.Bson.Serialization.Attributes;\n\n[BsonIgnoreExtraElements]\npublic sealed class MyModel : DataModel\n{\n    public static MongoModels&lt;MyModel&gt; Models { get; } = MongoDatabase.Main.Get&lt;MyModel&gt;();\n\n    public MyModel(string name) : base(name)\n    {\n        TestField = $\"TestField: {name}\";\n    }\n\n    public int TestField;\n    public bool TestField2;\n    public string TestField3;\n\n    public override void Save()\n    {\n        Models.Save(this);\n    }\n\n    public override void Remove()\n    {\n        Models.Remove(Name);\n    }\n}\n</code></pre> <p><code>DataModel</code> \u0438\u043c\u0435\u0435\u0442 primary-key <code>Name</code> (\u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435, \u043f\u043e \u043a\u043e\u0442\u043e\u0440\u043e\u043c\u0443 \u043c\u043e\u0434\u0435\u043b\u044c \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442\u0441\u044f \u0432 \u0411\u0414).</p> <p>Amethyst \u043d\u0435 \u043f\u043e\u0437\u0432\u043e\u043b\u044f\u0435\u0442 \u0438\u043c\u0435\u0442\u044c \u043d\u0435\u0441\u043a\u043e\u043b\u044c\u043a\u043e \u043c\u043e\u0434\u0435\u043b\u0435\u0439 \u043f\u043e\u0434 \u043e\u0434\u043d\u0438\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c.</p> <p><code>Name</code> \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442\u0441\u044f \u0432 \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440\u0435:</p> <pre><code>public CharacterModel(string name) : base(name)\n</code></pre> <p>\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u043c\u0435\u0442\u043e\u0434\u044b <code>DataModel</code>:</p> <ul> <li>\u041c\u0435\u0442\u043e\u0434 <code>Save</code> - \u0441\u043e\u0445\u0440\u0430\u043d\u044f\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0432 \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445</li> <li>\u041c\u0435\u0442\u043e\u0434 <code>Remove</code> - \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0438\u0437 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445.</li> </ul> <p>\u0411\u0430\u0437\u043e\u0432\u044b\u0435 \u0441\u0432\u043e\u0439\u0441\u0442\u0432\u0430 <code>DataModel</code>:</p> <ul> <li>\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u043e <code>Name</code> - primary-key.</li> </ul>"},{"location":"ru/Storages/mongodb/#mongodatabase","title":"\u041a\u043b\u0430\u0441\u0441 MongoDatabase","text":"<p><code>MongoDatabase</code> - \u043a\u043b\u0430\u0441\u0441, \u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u043d\u0430\u0434 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 MongoDB.</p> <p>\u042d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u0431\u0430\u0437\u044b \u0434\u0430\u043d\u043d\u044b\u0445 (\u043a\u043e\u0442\u043e\u0440\u0430\u044f \u0443\u0441\u0442\u0430\u043d\u043e\u0432\u043b\u0435\u043d\u0430 \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0435) \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 <code>MongoDatabase.Main</code>.</p> <p>\u0427\u0442\u043e\u0431\u044b \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0438\u0442\u044c\u0441\u044f \u043a \u0434\u0440\u0443\u0433\u043e\u0439 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445, \u043c\u043e\u0436\u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u0442\u044c \u043a\u043e\u043d\u0441\u0442\u0440\u0443\u043a\u0442\u043e\u0440:</p> <pre><code>MongoDatabase mainDb = MongoDatabase.Main;\n\n// \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a MongoDB \u043f\u043e \u0430\u0434\u0440\u0435\u0441\u0443 \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u0443\u043a\u0430\u0437\u0430\u043d \u0432 \u043a\u043e\u043d\u0444\u0438\u0433\u0435, \u043d\u043e \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0435\u0442 \u0434\u0440\u0443\u0433\u0443\u044e \u0431\u0430\u0437\u0443 \u0434\u0430\u043d\u043d\u044b\u0445 \u0432 MongoDB.\nMonogDatabase alternateDb = new MongoDatabase(\n        AmethystSession.StorageConfiguration.MongoConnection,\n        \"AlternateDB\");\n\n// \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0430\u0435\u0442\u0441\u044f \u043a \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445 \u043f\u043e alternateIP : 27017 \nMonogDatabase alternateDb = new MongoDatabase(\n        \"mongodb://alternateIP:27017/\",\n        \"AnotherAlternateDB\");\n</code></pre>"},{"location":"ru/Storages/mongodb/#mongomodels","title":"\u041a\u043b\u0430\u0441\u0441 MongoModels","text":"<p><code>MongoModels&lt;T&gt;</code> - \u043a\u043b\u0430\u0441\u0441, \u043e\u0431\u0435\u0440\u0442\u043a\u0430 \u043d\u0430\u0434 MongoDB. \u0418\u043c\u0435\u043d\u043d\u043e \u0447\u0435\u0440\u0435\u0437 \u044d\u0442\u043e\u0442 \u043a\u043b\u0430\u0441\u0441 \u043f\u0440\u043e\u0438\u0441\u0445\u043e\u0434\u044f\u0442 \u0432\u0441\u0435 \u043c\u0430\u043d\u0438\u043f\u0443\u043b\u044f\u0446\u0438\u0438 \u0441 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u043e\u0439 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0435\u0439 \u0432 \u0411\u0414.</p> <p>\u041d\u0430\u043f\u0440\u0438\u043c\u0435\u0440 \u0434\u043b\u044f SSC-\u043f\u0435\u0440\u0441\u043e\u043d\u0430\u0436\u0435\u0439 (<code>CharacterModel</code>) \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 <code>MongoModels&lt;CharacterModel&gt;</code>, \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u043a\u043e\u0442\u043e\u0440\u043e\u0433\u043e \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 <code>PlayerManager.Characters</code>.</p> <p>\u0427\u0442\u043e\u0431\u044b \u043f\u043e\u043b\u0443\u0447\u0438\u0442\u044c \u044d\u043a\u0437\u0435\u043c\u043f\u043b\u044f\u0440 \u0434\u043b\u044f \u0432\u0430\u0448\u0435\u0439 \u043c\u043e\u0434\u0435\u043b\u0438, \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 <code>Get&lt;T&gt;</code> \u0432 <code>MongoDatabase</code>:</p> <pre><code>MongoDatabase mainDb = MongoDatabase.Main;\n\nMongoModels&lt;MyModel&gt; models = mainDb.Get&lt;MyModel&gt;();\n</code></pre> <p>\u041a\u0430\u043a \u0441\u043a\u0430\u0437\u0430\u043d\u043e \u0432\u044b\u0448\u0435, \u0447\u0435\u0440\u0435\u0437 \u043a\u043b\u0430\u0441\u0441 <code>MongoModels&lt;T&gt;</code> \u043f\u0440\u043e\u0445\u043e\u0434\u044f\u0442 \u0432\u0441\u0435 \u043c\u0430\u043d\u0438\u043f\u0443\u043b\u044f\u0446\u0438\u0438 \u0441 \u043a\u043e\u043b\u043b\u0435\u043a\u0446\u0438\u0435\u0439 \u0432 \u0431\u0430\u0437\u0435 \u0434\u0430\u043d\u043d\u044b\u0445:</p> <pre><code>MongoDatabase mainDb = MongoDatabase.Main;\nMongoModels&lt;MyModel&gt; models = mainDb.Get&lt;MyModel&gt;();\n\nMyModel model = new MyModel(\"MyModelName\");\nMyModel model2 = new MyModel(\"ModelName2\");\n\n// \u0434\u043e\u0431\u0430\u0432\u043b\u044f\u0435\u0442 \u0438\u043b\u0438 \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0441\u044b\u0432\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c\n// \u0442.\u0435. \u0435\u0441\u043b\u0438 \u043c\u043e\u0434\u0435\u043b\u044c \u0441 \u0442\u0430\u043a\u0438\u043c \u043d\u0430\u0437\u0432\u0430\u043d\u0438\u0435\u043c \u0443\u0436\u0435 \u0435\u0441\u0442\u044c \u0432 \u0411\u0414, Amethyst \u043f\u0435\u0440\u0435\u0437\u0430\u043f\u0438\u0448\u0435\u0442 \u0435\u0433\u043e.\nmodels.Save(model);\n\nmodel.TestField = 5;\nmodels.Save(model);\n\nmodel.TestField = 10;\nmodels.Save(model);\n\n// \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c\nbool wasRemoved = models.Remove(\"MyModelName\");\nbool wasRemoved = models.Remove(model.Name);\nbool wasRemoved = models.Remove(predicate =&gt; predicate.Name.StartsWith(\"M\"));\n\n// \u0438\u0449\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c\n// \u0435\u0441\u043b\u0438 \u043c\u043e\u0434\u0435\u043b\u0438 \u043d\u0435\u0442 \u0432 \u0411\u0414, \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 null\n// \u0435\u0441\u043b\u0438 \u0435\u0441\u0442\u044c - \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u043c\u043e\u0434\u0435\u043b\u044c \u0438\u0437 \u0411\u0414.\nMyModel? model3 = models.Find(\"MyModelName\");\n</code></pre>"},{"location":"ru/Storages/mysql/","title":"MySQL","text":"<p>Amethyst \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u0438\u0432\u0430\u0435\u0442 MySQL \u0447\u0435\u0440\u0435\u0437 \u043a\u043b\u0430\u0441\u0441 <code>MySQLProvider</code> \u0434\u043b\u044f SQL-\u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0439.</p>"},{"location":"ru/Storages/mysql/#_1","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c","text":"<pre><code>// \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u0441\u0442\u0440\u043e\u043a\u0438 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\nvar provider = new MySQLProvider(\"Server=localhost;Database=test;Uid=user;Pwd=pass;\");\n\n// \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u043e\u0432\nvar provider = new MySQLProvider(\"localhost\", \"test\", \"user\", \"pass\");\n\n// \u042f\u0432\u043d\u043e\u0435 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\nprovider.OpenConnection();\n\n// \u0417\u0430\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\nprovider.CloseConnection();\n</code></pre>"},{"location":"ru/Storages/mysql/#_2","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438","text":""},{"location":"ru/Storages/mysql/#insertupdatedelete","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0437\u0430\u043f\u0440\u043e\u0441\u0430 (INSERT/UPDATE/DELETE)","text":"<pre><code>int affectedRows = provider.ExecuteNonQuery(\n    \"INSERT INTO users (name, age) VALUES (@name, @age)\",\n    new Dictionary&lt;string, object&gt; {\n        {\"@name\", \"John\"},\n        {\"@age\", 25}\n    });\n</code></pre>"},{"location":"ru/Storages/mysql/#_3","title":"\u041f\u043e\u043b\u0443\u0447\u0435\u043d\u0438\u0435 \u0441\u043a\u0430\u043b\u044f\u0440\u043d\u043e\u0433\u043e \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f","text":"<pre><code>object? result = provider.ExecuteScalar(\n    \"SELECT COUNT(*) FROM users\");\n</code></pre>"},{"location":"ru/Storages/mysql/#_4","title":"\u0412\u044b\u043f\u043e\u043b\u043d\u0435\u043d\u0438\u0435 \u0432\u044b\u0431\u043e\u0440\u043a\u0438","text":"<pre><code>var data = provider.ExecuteQuery(\n    \"SELECT * FROM users WHERE age &gt; @minAge\",\n    new Dictionary&lt;string, object&gt; {\n        {\"@minAge\", 18}\n    });\n</code></pre>"},{"location":"ru/Storages/sqlite/","title":"SQLite","text":"<p>Amethyst \u043f\u0440\u0435\u0434\u043e\u0441\u0442\u0430\u0432\u043b\u044f\u0435\u0442 \u043f\u043e\u0434\u0434\u0435\u0440\u0436\u043a\u0443 SQLite \u0447\u0435\u0440\u0435\u0437 \u043a\u043b\u0430\u0441\u0441 <code>SQLiteProvider</code>.</p>"},{"location":"ru/Storages/sqlite/#_1","title":"\u0423\u043f\u0440\u0430\u0432\u043b\u0435\u043d\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\u043c","text":"<pre><code>// \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u044f\u043c\u043e\u0433\u043e \u043f\u0443\u0442\u0438\nvar provider = new SQLiteProvider(\"data.db\");\n\n// \u0418\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 \u043f\u0440\u043e\u0444\u0438\u043b\u044f \u0441\u0435\u0440\u0432\u0435\u0440\u0430\nvar provider = new SQLiteProvider(serverProfile);\n\n// \u0410\u0432\u0442\u043e\u043c\u0430\u0442\u0438\u0447\u0435\u0441\u043a\u043e\u0435 \u043e\u0442\u043a\u0440\u044b\u0442\u0438\u0435 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u044f\nprovider.OpenConnection(); // \u041e\u043f\u0446\u0438\u043e\u043d\u0430\u043b\u044c\u043d\u043e - \u043f\u0435\u0440\u0432\u044b\u0438\u0306 \u0437\u0430\u043f\u0440\u043e\u0441 \u043e\u0442\u043a\u0440\u043e\u0435\u0442 \u043f\u043e\u0434\u043a\u043b\u044e\u0447\u0435\u043d\u0438\u0435\n</code></pre>"},{"location":"ru/Storages/sqlite/#_2","title":"\u041e\u0441\u043d\u043e\u0432\u043d\u044b\u0435 \u043e\u043f\u0435\u0440\u0430\u0446\u0438\u0438","text":""},{"location":"ru/Storages/sqlite/#_3","title":"\u0421\u043e\u0437\u0434\u0430\u043d\u0438\u0435 \u0442\u0430\u0431\u043b\u0438\u0446\u044b","text":"<pre><code>provider.ExecuteNonQuery(\n    \"CREATE TABLE IF NOT EXISTS users (id INTEGER PRIMARY KEY, name TEXT, age INTEGER)\");\n</code></pre>"},{"location":"ru/Storages/sqlite/#_4","title":"\u041f\u0430\u043a\u0435\u0442\u043d\u0430\u044f \u0432\u0441\u0442\u0430\u0432\u043a\u0430","text":"<pre><code>provider.ExecuteNonQuery(\n    \"INSERT INTO users (name, age) VALUES ('Alice', 30), ('Bob', 28)\");\n</code></pre>"},{"location":"ru/Storages/sqlite/#_5","title":"\u041f\u0430\u0440\u0430\u043c\u0435\u0442\u0440\u0438\u0437\u043e\u0432\u0430\u043d\u043d\u044b\u0438\u0306 \u0437\u0430\u043f\u0440\u043e\u0441","text":"<pre><code>var users = provider.ExecuteQuery(\n    \"SELECT * FROM users WHERE age BETWEEN @min AND @max\",\n    new Dictionary&lt;string, object&gt; {\n        {\"@min\", 25},\n        {\"@max\", 35}\n    });\n</code></pre>"},{"location":"ru/Terraria%20API/ids/","title":"Terraria.ID","text":"<p>\u0412 <code>TerrariaAPI.dll</code> \u043f\u0440\u0438\u0441\u0443\u0442\u0441\u0442\u0432\u0443\u0435\u0442 \u043f\u0440\u043e\u0441\u0442\u0440\u0430\u043d\u0441\u0442\u0432\u043e \u0438\u043c\u0435\u043d <code>Terraria.ID</code>, \u043a\u043e\u0442\u043e\u0440\u043e\u0435 \u043c\u043e\u0436\u0435\u0442 \u0431\u044b\u0442\u044c \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u043e \u0432 \u043f\u043b\u0430\u0433\u0438\u043d\u0430\u0445.</p> <p>\u041d\u0430 \u043f\u0440\u0438\u043c\u0435\u0440\u0435 <code>Terraria.ID.LiquidID</code>:</p> <pre><code>namespace Terraria.ID;\n\npublic static class LiquidID\n{\n    public const short Water = 0;\n\n    public const short Lava = 1;\n\n    public const short Honey = 2;\n\n    public const short Shimmer = 3;\n\n    public static readonly short Count = 4;\n}\n</code></pre> <p>\u0421\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u044e\u0442 \u0438 \u0434\u0440\u0443\u0433\u0438\u0435 \u043a\u043b\u0430\u0441\u0441\u044b, \u043d\u043e \u043d\u0430\u0438\u0431\u043e\u043b\u0435\u0435 \u0432\u0430\u0436\u043d\u044b\u0435 \u0438\u0437 \u043d\u0438\u0445 \u044d\u0442\u043e:</p> <ul> <li><code>ItemID</code></li> <li><code>NPCID</code></li> <li><code>BuffID</code></li> <li><code>TileID</code></li> <li><code>WallID</code></li> <li><code>PaintID</code></li> <li><code>PaintCoatingID</code></li> <li><code>ProjectileID</code></li> <li><code>InvasionID</code></li> <li><code>GameModeID</code></li> <li><code>PlayerSlotID</code></li> <li><code>MessageID</code> (ID \u043f\u0430\u043a\u0435\u0442\u043e\u0432, \u043d\u043e \u0432 \u0431\u043e\u043b\u044c\u0448\u0438\u043d\u0441\u0442\u0432\u0435 \u0441\u043b\u0443\u0447\u0430\u0435\u0432 \u043d\u0435 \u0432\u0441\u0435 \u043f\u043e\u0434\u043f\u0438\u0441\u0430\u043d\u043d\u044b\u0435)</li> </ul>"},{"location":"ru/Terraria%20API/tiles/","title":"\u0422\u0430\u0439\u043b\u044b (Terraria.Tile)","text":"<p>\u041e\u0441\u043d\u043e\u0432\u043d\u043e\u0439 \u043a\u043b\u0430\u0441\u0441 \u0432 Terraria, \u043a\u043e\u0442\u043e\u0440\u044b\u0439 \u043e\u0442\u0432\u0435\u0447\u0430\u0435\u0442 \u0437\u0430 \u0431\u043b\u043e\u043a\u0438 \u0438 \u0441\u0442\u0435\u043d\u044b - <code>Terraria.Tile</code>:</p> <p>\u041c\u0430\u0441\u0441\u0438\u0432 \u0442\u0430\u0439\u043b\u043e\u0432 \u043d\u0430\u0445\u043e\u0434\u0438\u0442\u0441\u044f \u0432 <code>Terraria.Main.tile</code>:</p> <pre><code>using Terraria;\n\nTile tile = Main.tile[100, 200];\n\ntile.wall = 5; // \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0441\u0442\u0435\u043d\u0443 \u043d\u0430 5 (ID)\n</code></pre>"},{"location":"ru/Terraria%20API/tiles/#tile","title":"\u041f\u043e\u043b\u044f Tile","text":"<p>\u0423\u0447\u0442\u0438\u0442\u0435, \u0447\u0442\u043e \u0441\u0443\u0449\u0435\u0441\u0442\u0432\u0443\u0435\u0442 \u0442\u0430\u043a\u0436\u0435 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 <code>active</code> \u0443 \u0431\u043b\u043e\u043a\u0430.</p> <pre><code>public ushort type; // \u0442\u0438\u043f \u0431\u043b\u043e\u043a\u0430, ID \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 0\n                    // \u043d\u0435 \u0431\u0443\u0434\u0435\u0442 \u0440\u0430\u0431\u043e\u0442\u0430\u0442\u044c \u0438\u043b\u0438 \u043e\u0442\u043e\u0431\u0440\u0430\u0436\u0430\u0442\u044c\u0441\u044f, \u0435\u0441\u043b\u0438 tile.active() == false\n\npublic ushort wall; // wall, ID \u043d\u0430\u0447\u0438\u043d\u0430\u0435\u0442\u0441\u044f \u0441 1\n\npublic byte liquid; // \u043a\u043e\u043b\u0438\u0447\u0435\u0441\u0442\u0432\u043e \u0436\u0438\u0434\u043a\u043e\u0441\u0442\u0438\n\npublic short frameX; // \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043a\u0430\u0434\u0440\u0430 \u0431\u043b\u043e\u043a\u0430 \u043f\u043e X\n\npublic short frameY; // \u0441\u043c\u0435\u0449\u0435\u043d\u0438\u0435 \u043a\u0430\u0434\u0440\u0430 \u0431\u043b\u043e\u043a\u0430 \u043f\u043e Y\n\npublic ushort sTileHeader; // \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0436\u0430\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e short\n\npublic byte bTileHeader; // \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0436\u0430\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e byte\n\npublic byte bTileHeader2; // \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0436\u0430\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e byte\n\npublic byte bTileHeader3; // \u0434\u0440\u0443\u0433\u0438\u0435 \u0441\u0436\u0430\u0442\u044b\u0435 \u0437\u043d\u0430\u0447\u0435\u043d\u0438\u044f \u043f\u043e byte\n</code></pre>"},{"location":"ru/Terraria%20API/tiles/#tile_1","title":"\u0421\u0432\u043e\u0439\u0441\u0442\u0432\u0430 Tile","text":"<pre><code>public int collisionType { get; } // \u0443\u043a\u0430\u0437\u044b\u0432\u0430\u0435\u0442 \u043d\u0430 \u0442\u0438\u043f \u043f\u043e\u043b\u0443\u0431\u043b\u043e\u043a\u0430\n</code></pre>"},{"location":"ru/Terraria%20API/tiles/#tile_2","title":"\u041c\u0435\u0442\u043e\u0434\u044b Tile","text":""},{"location":"ru/Terraria%20API/tiles/#_1","title":"\u0411\u0430\u0437\u043e\u0432\u044b\u0435","text":"<pre><code>// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0431\u043b\u043e\u043a \u0430\u043a\u0442\u0438\u0432\u043d\u044b\u043c\npublic bool active();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0430\u043a\u0442\u0438\u0432\u043d\u043e\u0441\u0442\u0438\npublic void active(bool active);\n\n\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0431\u043b\u043e\u043a \u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u044b\u043c \u043f\u0440\u043e\u0432\u043e\u0434\u0430\u043c\u0438\npublic bool inActive();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0441\u043e\u0441\u0442\u043e\u044f\u043d\u0438\u0435 \u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0438\u0440\u043e\u0432\u0430\u043d\u043d\u043e\u0441\u0442\u0438 \u043f\u0440\u043e\u0432\u043e\u0434\u0430\u043c\u0438\npublic void inActive(bool inActive);\n\n// \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435\npublic void ClearEverything();\n\n// \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0431\u043b\u043e\u043a\u0430 (\u0442\u0438\u043f \u043f\u043e\u043b\u0443\u0431\u043b\u043e\u043a\u0430, \u0434\u0435\u0430\u043a\u0442\u0438\u0432\u0430\u0446\u0438\u044e \u043f\u0440\u043e\u0432\u043e\u0434\u0430\u043c\u0438,)\npublic void ClearTile();\n\n// \u043a\u043e\u043f\u0438\u0440\u0443\u0435\u0442 \u0434\u0430\u043d\u043d\u044b\u0435 \u0441 \u0434\u0440\u0443\u0433\u043e\u0433\u043e \u0431\u043b\u043e\u043a\u0430\n// \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u0443\u0439\u0442\u0435 \u044d\u0442\u043e\u0442 \u043c\u0435\u0442\u043e\u0434, \u0442\u0430\u043a \u043a\u0430\u043a \u043f\u0440\u044f\u043c\u043e\u0435 \u0438\u0441\u043f\u043e\u043b\u044c\u0437\u043e\u0432\u0430\u043d\u0438\u0435 newTile = oldTile, \u043f\u0440\u0438\u0432\u0435\u0434\u0435\u0442 \u043a \u0442\u043e\u043c\u0443, \u0447\u0442\u043e newTile \u0431\u0443\u0434\u0435\u0442 \u0441\u0441\u044b\u043b\u043a\u043e\u0439 \u043d\u0430 oldTile\npublic void CopyFrom(Tile _from);\n\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 \u0442\u0438\u043f \u043f\u043e\u043b\u0443\u0431\u043b\u043e\u043a\u0430 \u043a\u0430\u043a int\npublic int blockType();\n\n// \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435, \u0438 \u0437\u0430\u043c\u0435\u043d\u044f\u0435\u0442 \u0431\u043b\u043e\u043a \u043d\u0430 \u0443\u043a\u0430\u0437\u0430\u043d\u043d\u044b\u0439\npublic void ResetToType(ushort type);\n\n// \u0443\u0434\u0430\u043b\u044f\u0435\u0442 \u0432\u0441\u0435 \u0434\u0430\u043d\u043d\u044b\u0435 \u043f\u043e\u043c\u0438\u043c\u043e \u0431\u043b\u043e\u043a\u0430\ninternal void ClearMetadata();\n\npublic bool halfBrick();\npublic void halfBrick(bool halfBrick);\n\npublic byte slope();\npublic void slope(byte slope);\n\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0442\u0438\u043f \u043f\u043e\u043b\u0443\u0431\u043b\u043e\u043a\u0430 \u043e\u043f\u0440\u0435\u0434\u0435\u043b\u0435\u043d\u043d\u044b\u043c\npublic bool topSlope();\npublic bool bottomSlope();\npublic bool leftSlope();\npublic bool rightSlope();\n\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u044f\u0432\u043b\u044f\u0435\u0442\u0441\u044f \u043b\u0438 \u0442\u0438\u043f \u043f\u043e\u043b\u0443\u0431\u043b\u043e\u043a\u0430 \u0442\u0430\u043a\u0438\u043c \u0436\u0435 \u043a\u0430\u043a \u0443 'tile'\npublic bool HasSameSlope(Tile tile);\n</code></pre>"},{"location":"ru/Terraria%20API/tiles/#_2","title":"\u0416\u0438\u0434\u043a\u043e\u0441\u0442\u0438","text":"<pre><code>// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 ID \u0436\u0438\u0434\u043a\u043e\u0441\u0442\u0438\npublic byte liquidType();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 ID \u0436\u0438\u0434\u043a\u043e\u0441\u0442\u0438\npublic void liquidType(int liquidType);\n\n\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u0438\u043c\u0435\u0435\u0442 \u043b\u0438 \u0431\u043b\u043e\u043a \u0432 \u0441\u0435\u0431\u0435 \u0436\u0438\u0434\u043a\u043e\u0441\u0442\u044c \u043b\u0430\u0432\u044b\npublic bool lava();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0436\u0438\u0434\u043a\u043e\u0441\u0442\u044c \u043b\u0430\u0432\u044b\npublic void lava(bool lava);\n\n\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u0438\u043c\u0435\u0435\u0442 \u043b\u0438 \u0431\u043b\u043e\u043a \u0432 \u0441\u0435\u0431\u0435 \u0436\u0438\u0434\u043a\u043e\u0441\u0442\u044c \u043c\u0435\u0434\u0430\npublic bool honey();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0436\u0438\u0434\u043a\u043e\u0441\u0442\u044c \u043c\u0435\u0434\u0430\npublic void honey(bool honey);\n\n\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u0438\u043c\u0435\u0435\u0442 \u043b\u0438 \u0431\u043b\u043e\u043a \u0432 \u0441\u0435\u0431\u0435 \u0436\u0438\u0434\u043a\u043e\u0441\u0442\u044c \u043c\u0435\u0440\u0446\u0430\u043d\u0438\u044f\npublic bool shimmer();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u0436\u0438\u0434\u043a\u043e\u0441\u0442\u044c \u043c\u0435\u0440\u0446\u0430\u043d\u0438\u044f\npublic void shimmer(bool shimmer);\n</code></pre>"},{"location":"ru/Terraria%20API/tiles/#_3","title":"\u041a\u0440\u0430\u0441\u043a\u0438 \u0438 \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u044f","text":"<pre><code>// \u0432\u043e\u0437\u0440\u0430\u0449\u0430\u0435\u0442 ID \u043a\u0440\u0430\u0441\u043a\u0438 \u0431\u043b\u043e\u043a\u0430\npublic byte color();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u0440\u0430\u0441\u043a\u0443 \u0431\u043b\u043e\u043a\u0430\npublic void color(byte color);\n\n\n// \u0432\u043e\u0437\u0440\u0430\u0449\u0430\u0435\u0442 ID \u043a\u0440\u0430\u0441\u043a\u0438 \u0441\u0442\u0435\u043d\u044b\npublic byte wallColor();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043a\u0440\u0430\u0441\u043a\u0443 \u0441\u0442\u0435\u043d\u044b\npublic void wallColor(byte wallColor);\n\n\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u0435\u0441\u043b\u0438 \u0431\u043b\u043e\u043a \u0438\u043c\u0435\u0435\u0442 \u044d\u0445\u043e-\u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435\npublic bool invisibleBlock();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u044d\u0445\u043e-\u043a\u0440\u0430\u0441\u043a\u0443 \u0434\u043b\u044f \u0431\u043b\u043e\u043a\u0430\npublic void invisibleBlock(bool invisibleBlock);\n\n\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u0435\u0441\u043b\u0438 \u0441\u0442\u0435\u043d\u0430 \u0438\u043c\u0435\u0435\u0442 \u044d\u0445\u043e-\u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435\npublic bool invisibleWall();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u044d\u0445\u043e-\u043a\u0440\u0430\u0441\u043a\u0443 \u0434\u043b\u044f \u0441\u0442\u0435\u043d\u044b\npublic void invisibleWall(bool invisibleWall);\n\n// \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u043a\u0440\u0430\u0441\u043a\u0443 \u0438 \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435 \u0434\u043b\u044f \u0431\u043b\u043e\u043a\u0430\npublic void ClearBlockPaintAndCoating();\n// \u043e\u0447\u0438\u0449\u0430\u0435\u0442 \u043a\u0440\u0430\u0441\u043a\u0443 \u0438 \u043f\u043e\u043a\u0440\u044b\u0442\u0438\u0435 \u0434\u043b\u044f \u0441\u0442\u0435\u043d\u044b\npublic void ClearWallPaintAndCoating();\n</code></pre>"},{"location":"ru/Terraria%20API/tiles/#_4","title":"\u041f\u0440\u043e\u0432\u043e\u0434\u0430","text":"<pre><code>// 4 ID \u044d\u0442\u043e \u0432\u0440\u043e\u0434\u0435 \u0436\u0435\u043b\u0442\u044b\u0439, \u044f \u043d\u0435 \u043f\u043e\u043c\u043d\u044e :(\n// \u0432\u043e\u0437\u0432\u0440\u0430\u0449\u0430\u0435\u0442 bool, \u0438\u043c\u0435\u0435\u0442\u0441\u044f \u043b\u0438 \u0442\u0443\u0442 \u043f\u0440\u043e\u0432\u043e\u0434 \u0441 4 ID.\npublic bool wire4();\n// \u0443\u0441\u0442\u0430\u043d\u0430\u0432\u043b\u0438\u0432\u0430\u0435\u0442 \u043f\u0440\u043e\u0432\u043e\u0434 \u0441 4 ID.\npublic void wire4(bool wire4);\n\n\n// \u0432\u0441\u0435 \u0442\u0430\u043a\u0436\u0435 \u0441 wire(), wire2(), wire3()\n</code></pre>"}]}